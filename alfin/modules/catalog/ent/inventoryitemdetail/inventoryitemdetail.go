// Code generated by entc, DO NOT EDIT.

package inventoryitemdetail

import (
	"time"
)

const (
	// Label holds the string label denoting the inventoryitemdetail type in the database.
	Label = "inventory_item_detail"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldCreateTime holds the string denoting the create_time field in the database.
	FieldCreateTime = "create_time"
	// FieldUpdateTime holds the string denoting the update_time field in the database.
	FieldUpdateTime = "update_time"
	// FieldStringRef holds the string denoting the string_ref field in the database.
	FieldStringRef = "string_ref"
	// FieldInventoryItemID holds the string denoting the inventory_item_id field in the database.
	FieldInventoryItemID = "inventory_item_id"
	// FieldInventoryItemDetailSeqID holds the string denoting the inventory_item_detail_seq_id field in the database.
	FieldInventoryItemDetailSeqID = "inventory_item_detail_seq_id"
	// FieldEffectiveDate holds the string denoting the effective_date field in the database.
	FieldEffectiveDate = "effective_date"
	// FieldQuantityOnHandDiff holds the string denoting the quantity_on_hand_diff field in the database.
	FieldQuantityOnHandDiff = "quantity_on_hand_diff"
	// FieldAvailableToPromiseDiff holds the string denoting the available_to_promise_diff field in the database.
	FieldAvailableToPromiseDiff = "available_to_promise_diff"
	// FieldAccountingQuantityDiff holds the string denoting the accounting_quantity_diff field in the database.
	FieldAccountingQuantityDiff = "accounting_quantity_diff"
	// FieldUnitCost holds the string denoting the unit_cost field in the database.
	FieldUnitCost = "unit_cost"
	// FieldOrderItemSeqID holds the string denoting the order_item_seq_id field in the database.
	FieldOrderItemSeqID = "order_item_seq_id"
	// FieldShipGroupSeqID holds the string denoting the ship_group_seq_id field in the database.
	FieldShipGroupSeqID = "ship_group_seq_id"
	// FieldShipmentID holds the string denoting the shipment_id field in the database.
	FieldShipmentID = "shipment_id"
	// FieldShipmentItemSeqID holds the string denoting the shipment_item_seq_id field in the database.
	FieldShipmentItemSeqID = "shipment_item_seq_id"
	// FieldReturnID holds the string denoting the return_id field in the database.
	FieldReturnID = "return_id"
	// FieldReturnItemSeqID holds the string denoting the return_item_seq_id field in the database.
	FieldReturnItemSeqID = "return_item_seq_id"
	// FieldWorkEffortID holds the string denoting the work_effort_id field in the database.
	FieldWorkEffortID = "work_effort_id"
	// FieldFixedAssetID holds the string denoting the fixed_asset_id field in the database.
	FieldFixedAssetID = "fixed_asset_id"
	// FieldMaintHistSeqID holds the string denoting the maint_hist_seq_id field in the database.
	FieldMaintHistSeqID = "maint_hist_seq_id"
	// FieldItemIssuanceID holds the string denoting the item_issuance_id field in the database.
	FieldItemIssuanceID = "item_issuance_id"
	// FieldReceiptID holds the string denoting the receipt_id field in the database.
	FieldReceiptID = "receipt_id"
	// FieldPhysicalInventoryID holds the string denoting the physical_inventory_id field in the database.
	FieldPhysicalInventoryID = "physical_inventory_id"
	// FieldDescription holds the string denoting the description field in the database.
	FieldDescription = "description"
	// EdgeOrderItemShipGrpInvRes holds the string denoting the order_item_ship_grp_inv_res edge name in mutations.
	EdgeOrderItemShipGrpInvRes = "order_item_ship_grp_inv_res"
	// EdgeReasonEnumeration holds the string denoting the reason_enumeration edge name in mutations.
	EdgeReasonEnumeration = "reason_enumeration"
	// Table holds the table name of the inventoryitemdetail in the database.
	Table = "inventory_item_details"
	// OrderItemShipGrpInvResTable is the table the holds the order_item_ship_grp_inv_res relation/edge.
	OrderItemShipGrpInvResTable = "inventory_item_details"
	// OrderItemShipGrpInvResInverseTable is the table name for the OrderItemShipGrpInvRes entity.
	// It exists in this package in order to avoid circular dependency with the "orderitemshipgrpinvres" package.
	OrderItemShipGrpInvResInverseTable = "order_item_ship_grp_inv_res"
	// OrderItemShipGrpInvResColumn is the table column denoting the order_item_ship_grp_inv_res relation/edge.
	OrderItemShipGrpInvResColumn = "order_item_ship_grp_inv_res_inventory_item_details"
	// ReasonEnumerationTable is the table the holds the reason_enumeration relation/edge.
	ReasonEnumerationTable = "inventory_item_details"
	// ReasonEnumerationInverseTable is the table name for the Enumeration entity.
	// It exists in this package in order to avoid circular dependency with the "enumeration" package.
	ReasonEnumerationInverseTable = "enumerations"
	// ReasonEnumerationColumn is the table column denoting the reason_enumeration relation/edge.
	ReasonEnumerationColumn = "enumeration_reason_inventory_item_details"
)

// Columns holds all SQL columns for inventoryitemdetail fields.
var Columns = []string{
	FieldID,
	FieldCreateTime,
	FieldUpdateTime,
	FieldStringRef,
	FieldInventoryItemID,
	FieldInventoryItemDetailSeqID,
	FieldEffectiveDate,
	FieldQuantityOnHandDiff,
	FieldAvailableToPromiseDiff,
	FieldAccountingQuantityDiff,
	FieldUnitCost,
	FieldOrderItemSeqID,
	FieldShipGroupSeqID,
	FieldShipmentID,
	FieldShipmentItemSeqID,
	FieldReturnID,
	FieldReturnItemSeqID,
	FieldWorkEffortID,
	FieldFixedAssetID,
	FieldMaintHistSeqID,
	FieldItemIssuanceID,
	FieldReceiptID,
	FieldPhysicalInventoryID,
	FieldDescription,
}

// ForeignKeys holds the SQL foreign-keys that are owned by the "inventory_item_details"
// table and are not defined as standalone fields in the schema.
var ForeignKeys = []string{
	"enumeration_reason_inventory_item_details",
	"order_item_ship_grp_inv_res_inventory_item_details",
}

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	for i := range ForeignKeys {
		if column == ForeignKeys[i] {
			return true
		}
	}
	return false
}

var (
	// DefaultCreateTime holds the default value on creation for the "create_time" field.
	DefaultCreateTime func() time.Time
	// DefaultUpdateTime holds the default value on creation for the "update_time" field.
	DefaultUpdateTime func() time.Time
	// UpdateDefaultUpdateTime holds the default value on update for the "update_time" field.
	UpdateDefaultUpdateTime func() time.Time
	// DefaultEffectiveDate holds the default value on creation for the "effective_date" field.
	DefaultEffectiveDate func() time.Time
)
