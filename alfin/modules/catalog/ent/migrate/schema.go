// Code generated by entc, DO NOT EDIT.

package migrate

import (
	"entgo.io/ent/dialect/sql/schema"
	"entgo.io/ent/schema/field"
)

var (
	// ContentAssocTypesColumns holds the columns for the "content_assoc_types" table.
	ContentAssocTypesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "create_time", Type: field.TypeTime},
		{Name: "update_time", Type: field.TypeTime},
		{Name: "string_ref", Type: field.TypeString, Nullable: true},
		{Name: "description", Type: field.TypeString, Nullable: true},
	}
	// ContentAssocTypesTable holds the schema information for the "content_assoc_types" table.
	ContentAssocTypesTable = &schema.Table{
		Name:       "content_assoc_types",
		Columns:    ContentAssocTypesColumns,
		PrimaryKey: []*schema.Column{ContentAssocTypesColumns[0]},
	}
	// ContentTypesColumns holds the columns for the "content_types" table.
	ContentTypesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "create_time", Type: field.TypeTime},
		{Name: "update_time", Type: field.TypeTime},
		{Name: "string_ref", Type: field.TypeString, Nullable: true},
		{Name: "has_table", Type: field.TypeEnum, Nullable: true, Enums: []string{"Yes", "No", "Unknown"}},
		{Name: "description", Type: field.TypeString, Nullable: true},
		{Name: "content_type_children", Type: field.TypeInt, Nullable: true},
	}
	// ContentTypesTable holds the schema information for the "content_types" table.
	ContentTypesTable = &schema.Table{
		Name:       "content_types",
		Columns:    ContentTypesColumns,
		PrimaryKey: []*schema.Column{ContentTypesColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "content_types_content_types_children",
				Columns:    []*schema.Column{ContentTypesColumns[6]},
				RefColumns: []*schema.Column{ContentTypesColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// CostComponentTypesColumns holds the columns for the "cost_component_types" table.
	CostComponentTypesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "create_time", Type: field.TypeTime},
		{Name: "update_time", Type: field.TypeTime},
		{Name: "string_ref", Type: field.TypeString, Nullable: true},
		{Name: "has_table", Type: field.TypeEnum, Nullable: true, Enums: []string{"Yes", "No", "Unknown"}},
		{Name: "description", Type: field.TypeString, Nullable: true},
		{Name: "cost_component_type_children", Type: field.TypeInt, Nullable: true},
	}
	// CostComponentTypesTable holds the schema information for the "cost_component_types" table.
	CostComponentTypesTable = &schema.Table{
		Name:       "cost_component_types",
		Columns:    CostComponentTypesColumns,
		PrimaryKey: []*schema.Column{CostComponentTypesColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "cost_component_types_cost_component_types_children",
				Columns:    []*schema.Column{CostComponentTypesColumns[6]},
				RefColumns: []*schema.Column{CostComponentTypesColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// CustomMethodsColumns holds the columns for the "custom_methods" table.
	CustomMethodsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "create_time", Type: field.TypeTime},
		{Name: "update_time", Type: field.TypeTime},
		{Name: "string_ref", Type: field.TypeString, Nullable: true},
		{Name: "custom_method_name", Type: field.TypeString, Nullable: true},
		{Name: "description", Type: field.TypeString, Nullable: true},
		{Name: "custom_method_type_custom_methods", Type: field.TypeInt, Nullable: true},
	}
	// CustomMethodsTable holds the schema information for the "custom_methods" table.
	CustomMethodsTable = &schema.Table{
		Name:       "custom_methods",
		Columns:    CustomMethodsColumns,
		PrimaryKey: []*schema.Column{CustomMethodsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "custom_methods_custom_method_types_custom_methods",
				Columns:    []*schema.Column{CustomMethodsColumns[6]},
				RefColumns: []*schema.Column{CustomMethodTypesColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// CustomMethodTypesColumns holds the columns for the "custom_method_types" table.
	CustomMethodTypesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "create_time", Type: field.TypeTime},
		{Name: "update_time", Type: field.TypeTime},
		{Name: "string_ref", Type: field.TypeString, Nullable: true},
		{Name: "has_table", Type: field.TypeEnum, Nullable: true, Enums: []string{"Yes", "No", "Unknown"}},
		{Name: "description", Type: field.TypeString, Nullable: true},
		{Name: "custom_method_type_children", Type: field.TypeInt, Nullable: true},
	}
	// CustomMethodTypesTable holds the schema information for the "custom_method_types" table.
	CustomMethodTypesTable = &schema.Table{
		Name:       "custom_method_types",
		Columns:    CustomMethodTypesColumns,
		PrimaryKey: []*schema.Column{CustomMethodTypesColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "custom_method_types_custom_method_types_children",
				Columns:    []*schema.Column{CustomMethodTypesColumns[6]},
				RefColumns: []*schema.Column{CustomMethodTypesColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// EnumerationsColumns holds the columns for the "enumerations" table.
	EnumerationsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "create_time", Type: field.TypeTime},
		{Name: "update_time", Type: field.TypeTime},
		{Name: "string_ref", Type: field.TypeString, Nullable: true},
		{Name: "enum_code", Type: field.TypeString, Nullable: true},
		{Name: "sequence_id", Type: field.TypeInt, Nullable: true},
		{Name: "description", Type: field.TypeString, Nullable: true},
		{Name: "enumeration_type_enumerations", Type: field.TypeInt, Nullable: true},
	}
	// EnumerationsTable holds the schema information for the "enumerations" table.
	EnumerationsTable = &schema.Table{
		Name:       "enumerations",
		Columns:    EnumerationsColumns,
		PrimaryKey: []*schema.Column{EnumerationsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "enumerations_enumeration_types_enumerations",
				Columns:    []*schema.Column{EnumerationsColumns[7]},
				RefColumns: []*schema.Column{EnumerationTypesColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// EnumerationTypesColumns holds the columns for the "enumeration_types" table.
	EnumerationTypesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "create_time", Type: field.TypeTime},
		{Name: "update_time", Type: field.TypeTime},
		{Name: "string_ref", Type: field.TypeString, Nullable: true},
		{Name: "has_table", Type: field.TypeEnum, Nullable: true, Enums: []string{"Yes", "No", "Unknown"}},
		{Name: "description", Type: field.TypeString, Nullable: true},
		{Name: "enumeration_type_children", Type: field.TypeInt, Nullable: true},
	}
	// EnumerationTypesTable holds the schema information for the "enumeration_types" table.
	EnumerationTypesTable = &schema.Table{
		Name:       "enumeration_types",
		Columns:    EnumerationTypesColumns,
		PrimaryKey: []*schema.Column{EnumerationTypesColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "enumeration_types_enumeration_types_children",
				Columns:    []*schema.Column{EnumerationTypesColumns[6]},
				RefColumns: []*schema.Column{EnumerationTypesColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// FacilityAssocTypesColumns holds the columns for the "facility_assoc_types" table.
	FacilityAssocTypesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "create_time", Type: field.TypeTime},
		{Name: "update_time", Type: field.TypeTime},
		{Name: "string_ref", Type: field.TypeString, Nullable: true},
		{Name: "description", Type: field.TypeString, Nullable: true},
	}
	// FacilityAssocTypesTable holds the schema information for the "facility_assoc_types" table.
	FacilityAssocTypesTable = &schema.Table{
		Name:       "facility_assoc_types",
		Columns:    FacilityAssocTypesColumns,
		PrimaryKey: []*schema.Column{FacilityAssocTypesColumns[0]},
	}
	// FacilityGroupsColumns holds the columns for the "facility_groups" table.
	FacilityGroupsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "create_time", Type: field.TypeTime},
		{Name: "update_time", Type: field.TypeTime},
		{Name: "string_ref", Type: field.TypeString, Nullable: true},
		{Name: "facility_group_name", Type: field.TypeString, Nullable: true},
		{Name: "description", Type: field.TypeString, Nullable: true},
		{Name: "facility_group_children", Type: field.TypeInt, Nullable: true},
		{Name: "facility_group_type_facility_groups", Type: field.TypeInt, Nullable: true},
	}
	// FacilityGroupsTable holds the schema information for the "facility_groups" table.
	FacilityGroupsTable = &schema.Table{
		Name:       "facility_groups",
		Columns:    FacilityGroupsColumns,
		PrimaryKey: []*schema.Column{FacilityGroupsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "facility_groups_facility_groups_children",
				Columns:    []*schema.Column{FacilityGroupsColumns[6]},
				RefColumns: []*schema.Column{FacilityGroupsColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "facility_groups_facility_group_types_facility_groups",
				Columns:    []*schema.Column{FacilityGroupsColumns[7]},
				RefColumns: []*schema.Column{FacilityGroupTypesColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// FacilityGroupTypesColumns holds the columns for the "facility_group_types" table.
	FacilityGroupTypesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "create_time", Type: field.TypeTime},
		{Name: "update_time", Type: field.TypeTime},
		{Name: "string_ref", Type: field.TypeString, Nullable: true},
		{Name: "description", Type: field.TypeString, Nullable: true},
	}
	// FacilityGroupTypesTable holds the schema information for the "facility_group_types" table.
	FacilityGroupTypesTable = &schema.Table{
		Name:       "facility_group_types",
		Columns:    FacilityGroupTypesColumns,
		PrimaryKey: []*schema.Column{FacilityGroupTypesColumns[0]},
	}
	// FacilityTypesColumns holds the columns for the "facility_types" table.
	FacilityTypesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "create_time", Type: field.TypeTime},
		{Name: "update_time", Type: field.TypeTime},
		{Name: "string_ref", Type: field.TypeString, Nullable: true},
		{Name: "has_table", Type: field.TypeEnum, Nullable: true, Enums: []string{"Yes", "No", "Unknown"}},
		{Name: "description", Type: field.TypeString, Nullable: true},
		{Name: "facility_type_children", Type: field.TypeInt, Nullable: true},
	}
	// FacilityTypesTable holds the schema information for the "facility_types" table.
	FacilityTypesTable = &schema.Table{
		Name:       "facility_types",
		Columns:    FacilityTypesColumns,
		PrimaryKey: []*schema.Column{FacilityTypesColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "facility_types_facility_types_children",
				Columns:    []*schema.Column{FacilityTypesColumns[6]},
				RefColumns: []*schema.Column{FacilityTypesColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// GoodIdentificationTypesColumns holds the columns for the "good_identification_types" table.
	GoodIdentificationTypesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "create_time", Type: field.TypeTime},
		{Name: "update_time", Type: field.TypeTime},
		{Name: "string_ref", Type: field.TypeString, Nullable: true},
		{Name: "has_table", Type: field.TypeEnum, Nullable: true, Enums: []string{"Yes", "No", "Unknown"}},
		{Name: "description", Type: field.TypeString, Nullable: true},
		{Name: "good_identification_type_children", Type: field.TypeInt, Nullable: true},
	}
	// GoodIdentificationTypesTable holds the schema information for the "good_identification_types" table.
	GoodIdentificationTypesTable = &schema.Table{
		Name:       "good_identification_types",
		Columns:    GoodIdentificationTypesColumns,
		PrimaryKey: []*schema.Column{GoodIdentificationTypesColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "good_identification_types_good_identification_types_children",
				Columns:    []*schema.Column{GoodIdentificationTypesColumns[6]},
				RefColumns: []*schema.Column{GoodIdentificationTypesColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// InventoryItemDetailsColumns holds the columns for the "inventory_item_details" table.
	InventoryItemDetailsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "create_time", Type: field.TypeTime},
		{Name: "update_time", Type: field.TypeTime},
		{Name: "string_ref", Type: field.TypeString, Nullable: true},
		{Name: "inventory_item_detail_seq_id", Type: field.TypeInt},
		{Name: "effective_date", Type: field.TypeTime, Nullable: true},
		{Name: "quantity_on_hand_diff", Type: field.TypeFloat64, Nullable: true},
		{Name: "available_to_promise_diff", Type: field.TypeFloat64, Nullable: true},
		{Name: "accounting_quantity_diff", Type: field.TypeFloat64, Nullable: true},
		{Name: "unit_cost", Type: field.TypeFloat64, Nullable: true},
		{Name: "order_item_seq_id", Type: field.TypeInt, Nullable: true},
		{Name: "ship_group_seq_id", Type: field.TypeInt, Nullable: true},
		{Name: "shipment_id", Type: field.TypeInt, Nullable: true},
		{Name: "shipment_item_seq_id", Type: field.TypeInt, Nullable: true},
		{Name: "return_id", Type: field.TypeInt, Nullable: true},
		{Name: "return_item_seq_id", Type: field.TypeInt, Nullable: true},
		{Name: "work_effort_id", Type: field.TypeInt, Nullable: true},
		{Name: "fixed_asset_id", Type: field.TypeInt, Nullable: true},
		{Name: "maint_hist_seq_id", Type: field.TypeInt, Nullable: true},
		{Name: "item_issuance_id", Type: field.TypeInt, Nullable: true},
		{Name: "receipt_id", Type: field.TypeInt, Nullable: true},
		{Name: "physical_inventory_id", Type: field.TypeInt, Nullable: true},
		{Name: "description", Type: field.TypeString, Nullable: true},
		{Name: "enumeration_reason_inventory_item_details", Type: field.TypeInt, Nullable: true},
		{Name: "order_item_ship_grp_inv_res_inventory_item_details", Type: field.TypeInt, Nullable: true},
	}
	// InventoryItemDetailsTable holds the schema information for the "inventory_item_details" table.
	InventoryItemDetailsTable = &schema.Table{
		Name:       "inventory_item_details",
		Columns:    InventoryItemDetailsColumns,
		PrimaryKey: []*schema.Column{InventoryItemDetailsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "inventory_item_details_enumerations_reason_inventory_item_details",
				Columns:    []*schema.Column{InventoryItemDetailsColumns[23]},
				RefColumns: []*schema.Column{EnumerationsColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "inventory_item_details_order_item_ship_grp_inv_res_inventory_item_details",
				Columns:    []*schema.Column{InventoryItemDetailsColumns[24]},
				RefColumns: []*schema.Column{OrderItemShipGrpInvResColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// InventoryItemTypesColumns holds the columns for the "inventory_item_types" table.
	InventoryItemTypesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "create_time", Type: field.TypeTime},
		{Name: "update_time", Type: field.TypeTime},
		{Name: "string_ref", Type: field.TypeString, Nullable: true},
		{Name: "has_table", Type: field.TypeEnum, Nullable: true, Enums: []string{"Yes", "No", "Unknown"}},
		{Name: "description", Type: field.TypeString, Nullable: true},
		{Name: "inventory_item_type_children", Type: field.TypeInt, Nullable: true},
	}
	// InventoryItemTypesTable holds the schema information for the "inventory_item_types" table.
	InventoryItemTypesTable = &schema.Table{
		Name:       "inventory_item_types",
		Columns:    InventoryItemTypesColumns,
		PrimaryKey: []*schema.Column{InventoryItemTypesColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "inventory_item_types_inventory_item_types_children",
				Columns:    []*schema.Column{InventoryItemTypesColumns[6]},
				RefColumns: []*schema.Column{InventoryItemTypesColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// OrderAdjustmentsColumns holds the columns for the "order_adjustments" table.
	OrderAdjustmentsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "create_time", Type: field.TypeTime},
		{Name: "update_time", Type: field.TypeTime},
		{Name: "string_ref", Type: field.TypeString, Nullable: true},
		{Name: "order_adjustment_type_id", Type: field.TypeInt, Nullable: true},
		{Name: "order_item_seq_id", Type: field.TypeInt, Nullable: true},
		{Name: "ship_group_seq_id", Type: field.TypeInt, Nullable: true},
		{Name: "comments", Type: field.TypeString, Nullable: true},
		{Name: "description", Type: field.TypeString, Nullable: true},
		{Name: "amount", Type: field.TypeFloat64, Nullable: true},
		{Name: "recurring_amount", Type: field.TypeFloat64, Nullable: true},
		{Name: "amount_already_included", Type: field.TypeFloat64, Nullable: true},
		{Name: "product_promo_id", Type: field.TypeInt, Nullable: true},
		{Name: "product_promo_rule_id", Type: field.TypeInt, Nullable: true},
		{Name: "product_promo_action_seq_id", Type: field.TypeInt, Nullable: true},
		{Name: "product_feature_id", Type: field.TypeInt, Nullable: true},
		{Name: "corresponding_product_id", Type: field.TypeInt, Nullable: true},
		{Name: "tax_authority_rate_seq_id", Type: field.TypeInt, Nullable: true},
		{Name: "source_reference_id", Type: field.TypeString, Nullable: true, Size: 32},
		{Name: "source_percentage", Type: field.TypeFloat64, Nullable: true},
		{Name: "customer_reference_id", Type: field.TypeString, Nullable: true, Size: 32},
		{Name: "primary_geo_id", Type: field.TypeInt, Nullable: true},
		{Name: "secondary_geo_id", Type: field.TypeInt, Nullable: true},
		{Name: "exempt_amount", Type: field.TypeFloat64, Nullable: true},
		{Name: "tax_auth_geo_id", Type: field.TypeInt, Nullable: true},
		{Name: "tax_auth_party_id", Type: field.TypeInt, Nullable: true},
		{Name: "override_gl_account_id", Type: field.TypeInt, Nullable: true},
		{Name: "include_in_tax", Type: field.TypeEnum, Nullable: true, Enums: []string{"Yes", "No", "Unknown"}},
		{Name: "include_in_shipping", Type: field.TypeEnum, Nullable: true, Enums: []string{"Yes", "No", "Unknown"}},
		{Name: "is_manual", Type: field.TypeEnum, Nullable: true, Enums: []string{"Yes", "No", "Unknown"}},
		{Name: "created_date", Type: field.TypeTime, Nullable: true},
		{Name: "created_by_user_login", Type: field.TypeString, Nullable: true},
		{Name: "last_modified_date", Type: field.TypeTime, Nullable: true},
		{Name: "last_modified_by_user_login", Type: field.TypeString, Nullable: true},
		{Name: "order_adjustment_children", Type: field.TypeInt, Nullable: true},
		{Name: "order_header_order_adjustments", Type: field.TypeInt, Nullable: true},
		{Name: "order_item_order_adjustments", Type: field.TypeInt, Nullable: true},
		{Name: "order_item_ship_group_order_adjustments", Type: field.TypeInt, Nullable: true},
		{Name: "order_item_ship_group_assoc_order_adjustments", Type: field.TypeInt, Nullable: true},
	}
	// OrderAdjustmentsTable holds the schema information for the "order_adjustments" table.
	OrderAdjustmentsTable = &schema.Table{
		Name:       "order_adjustments",
		Columns:    OrderAdjustmentsColumns,
		PrimaryKey: []*schema.Column{OrderAdjustmentsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "order_adjustments_order_adjustments_children",
				Columns:    []*schema.Column{OrderAdjustmentsColumns[34]},
				RefColumns: []*schema.Column{OrderAdjustmentsColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "order_adjustments_order_headers_order_adjustments",
				Columns:    []*schema.Column{OrderAdjustmentsColumns[35]},
				RefColumns: []*schema.Column{OrderHeadersColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "order_adjustments_order_items_order_adjustments",
				Columns:    []*schema.Column{OrderAdjustmentsColumns[36]},
				RefColumns: []*schema.Column{OrderItemsColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "order_adjustments_order_item_ship_groups_order_adjustments",
				Columns:    []*schema.Column{OrderAdjustmentsColumns[37]},
				RefColumns: []*schema.Column{OrderItemShipGroupsColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "order_adjustments_order_item_ship_group_assocs_order_adjustments",
				Columns:    []*schema.Column{OrderAdjustmentsColumns[38]},
				RefColumns: []*schema.Column{OrderItemShipGroupAssocsColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// OrderContactMechesColumns holds the columns for the "order_contact_meches" table.
	OrderContactMechesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "create_time", Type: field.TypeTime},
		{Name: "update_time", Type: field.TypeTime},
		{Name: "string_ref", Type: field.TypeString, Nullable: true},
		{Name: "contact_mech_purpose_type_id", Type: field.TypeInt},
		{Name: "contact_mech_id", Type: field.TypeInt},
		{Name: "order_header_order_contact_meches", Type: field.TypeInt, Nullable: true},
	}
	// OrderContactMechesTable holds the schema information for the "order_contact_meches" table.
	OrderContactMechesTable = &schema.Table{
		Name:       "order_contact_meches",
		Columns:    OrderContactMechesColumns,
		PrimaryKey: []*schema.Column{OrderContactMechesColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "order_contact_meches_order_headers_order_contact_meches",
				Columns:    []*schema.Column{OrderContactMechesColumns[6]},
				RefColumns: []*schema.Column{OrderHeadersColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// OrderHeadersColumns holds the columns for the "order_headers" table.
	OrderHeadersColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "create_time", Type: field.TypeTime},
		{Name: "update_time", Type: field.TypeTime},
		{Name: "string_ref", Type: field.TypeString, Nullable: true},
		{Name: "order_type_id", Type: field.TypeInt, Nullable: true},
		{Name: "order_name", Type: field.TypeString, Nullable: true},
		{Name: "external_id", Type: field.TypeInt, Nullable: true},
		{Name: "order_date", Type: field.TypeTime, Nullable: true},
		{Name: "priority", Type: field.TypeEnum, Nullable: true, Enums: []string{"Yes", "No", "Unknown"}},
		{Name: "entry_date", Type: field.TypeTime, Nullable: true},
		{Name: "pick_sheet_printed_date", Type: field.TypeTime, Nullable: true},
		{Name: "visit_id", Type: field.TypeInt, Nullable: true},
		{Name: "created_by", Type: field.TypeString, Nullable: true},
		{Name: "first_attempt_order_id", Type: field.TypeInt, Nullable: true},
		{Name: "currency_uom", Type: field.TypeInt, Nullable: true},
		{Name: "billing_account_id", Type: field.TypeInt, Nullable: true},
		{Name: "origin_facility_id", Type: field.TypeInt, Nullable: true},
		{Name: "web_site_id", Type: field.TypeInt, Nullable: true},
		{Name: "agreement_id", Type: field.TypeInt, Nullable: true},
		{Name: "terminal_id", Type: field.TypeString, Nullable: true, Size: 32},
		{Name: "transaction_id", Type: field.TypeString, Nullable: true, Size: 32},
		{Name: "auto_order_shopping_list_id", Type: field.TypeInt, Nullable: true},
		{Name: "needs_inventory_issuance", Type: field.TypeEnum, Nullable: true, Enums: []string{"Yes", "No", "Unknown"}},
		{Name: "is_rush_order", Type: field.TypeEnum, Nullable: true, Enums: []string{"Yes", "No", "Unknown"}},
		{Name: "internal_code", Type: field.TypeString, Nullable: true, Size: 32},
		{Name: "remaining_sub_total", Type: field.TypeFloat64, Nullable: true},
		{Name: "grand_total", Type: field.TypeFloat64, Nullable: true},
		{Name: "is_viewed", Type: field.TypeEnum, Nullable: true, Enums: []string{"Yes", "No", "Unknown"}},
		{Name: "invoice_per_shipment", Type: field.TypeEnum, Nullable: true, Enums: []string{"Yes", "No", "Unknown"}},
		{Name: "enumeration_sales_channel_order_headers", Type: field.TypeInt, Nullable: true},
		{Name: "product_store_order_headers", Type: field.TypeInt, Nullable: true},
		{Name: "status_item_order_headers", Type: field.TypeInt, Nullable: true},
		{Name: "status_item_sync_order_headers", Type: field.TypeInt, Nullable: true},
	}
	// OrderHeadersTable holds the schema information for the "order_headers" table.
	OrderHeadersTable = &schema.Table{
		Name:       "order_headers",
		Columns:    OrderHeadersColumns,
		PrimaryKey: []*schema.Column{OrderHeadersColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "order_headers_enumerations_sales_channel_order_headers",
				Columns:    []*schema.Column{OrderHeadersColumns[29]},
				RefColumns: []*schema.Column{EnumerationsColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "order_headers_product_stores_order_headers",
				Columns:    []*schema.Column{OrderHeadersColumns[30]},
				RefColumns: []*schema.Column{ProductStoresColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "order_headers_status_items_order_headers",
				Columns:    []*schema.Column{OrderHeadersColumns[31]},
				RefColumns: []*schema.Column{StatusItemsColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "order_headers_status_items_sync_order_headers",
				Columns:    []*schema.Column{OrderHeadersColumns[32]},
				RefColumns: []*schema.Column{StatusItemsColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// OrderItemsColumns holds the columns for the "order_items" table.
	OrderItemsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "create_time", Type: field.TypeTime},
		{Name: "update_time", Type: field.TypeTime},
		{Name: "string_ref", Type: field.TypeString, Nullable: true},
		{Name: "order_item_seq_id", Type: field.TypeInt},
		{Name: "external_id", Type: field.TypeInt, Nullable: true},
		{Name: "order_item_type_id", Type: field.TypeInt, Nullable: true},
		{Name: "order_item_group_seq_id", Type: field.TypeInt, Nullable: true},
		{Name: "is_item_group_primary", Type: field.TypeEnum, Nullable: true, Enums: []string{"Yes", "No", "Unknown"}},
		{Name: "from_inventory_item_id", Type: field.TypeInt, Nullable: true},
		{Name: "budget_id", Type: field.TypeInt, Nullable: true},
		{Name: "budget_item_seq_id", Type: field.TypeInt, Nullable: true},
		{Name: "supplier_product_id", Type: field.TypeString, Nullable: true, Size: 32},
		{Name: "product_feature_id", Type: field.TypeInt, Nullable: true},
		{Name: "prod_catalog_id", Type: field.TypeInt, Nullable: true},
		{Name: "product_category_id", Type: field.TypeInt, Nullable: true},
		{Name: "is_promo", Type: field.TypeEnum, Nullable: true, Enums: []string{"Yes", "No", "Unknown"}},
		{Name: "quote_id", Type: field.TypeInt, Nullable: true},
		{Name: "quote_item_seq_id", Type: field.TypeInt, Nullable: true},
		{Name: "shopping_list_id", Type: field.TypeInt, Nullable: true},
		{Name: "shopping_list_item_seq_id", Type: field.TypeInt, Nullable: true},
		{Name: "subscription_id", Type: field.TypeInt, Nullable: true},
		{Name: "deployment_id", Type: field.TypeInt, Nullable: true},
		{Name: "quantity", Type: field.TypeFloat64, Nullable: true},
		{Name: "cancel_quantity", Type: field.TypeFloat64, Nullable: true},
		{Name: "selected_amount", Type: field.TypeFloat64, Nullable: true},
		{Name: "unit_price", Type: field.TypeFloat64, Nullable: true},
		{Name: "unit_list_price", Type: field.TypeFloat64, Nullable: true},
		{Name: "unit_average_cost", Type: field.TypeFloat64, Nullable: true},
		{Name: "unit_recurring_price", Type: field.TypeFloat64, Nullable: true},
		{Name: "is_modified_price", Type: field.TypeEnum, Nullable: true, Enums: []string{"Yes", "No", "Unknown"}},
		{Name: "recurring_freq_uom_id", Type: field.TypeInt, Nullable: true},
		{Name: "item_description", Type: field.TypeString, Nullable: true},
		{Name: "comments", Type: field.TypeString, Nullable: true},
		{Name: "corresponding_po_id", Type: field.TypeInt, Nullable: true},
		{Name: "estimated_ship_date", Type: field.TypeTime, Nullable: true},
		{Name: "estimated_delivery_date", Type: field.TypeTime, Nullable: true},
		{Name: "auto_cancel_date", Type: field.TypeTime, Nullable: true},
		{Name: "dont_cancel_set_date", Type: field.TypeTime, Nullable: true},
		{Name: "dont_cancel_set_user_login", Type: field.TypeString, Nullable: true},
		{Name: "ship_before_date", Type: field.TypeTime, Nullable: true},
		{Name: "ship_after_date", Type: field.TypeTime, Nullable: true},
		{Name: "reserve_after_date", Type: field.TypeTime, Nullable: true},
		{Name: "cancel_back_order_date", Type: field.TypeTime, Nullable: true},
		{Name: "override_gl_account_id", Type: field.TypeInt, Nullable: true},
		{Name: "sales_opportunity_id", Type: field.TypeInt, Nullable: true},
		{Name: "change_by_user_login_id", Type: field.TypeString, Nullable: true},
		{Name: "order_header_order_items", Type: field.TypeInt, Nullable: true},
		{Name: "order_role_order_items", Type: field.TypeInt, Nullable: true},
		{Name: "product_order_items", Type: field.TypeInt, Nullable: true},
		{Name: "status_item_order_items", Type: field.TypeInt, Nullable: true},
		{Name: "status_item_sync_order_items", Type: field.TypeInt, Nullable: true},
	}
	// OrderItemsTable holds the schema information for the "order_items" table.
	OrderItemsTable = &schema.Table{
		Name:       "order_items",
		Columns:    OrderItemsColumns,
		PrimaryKey: []*schema.Column{OrderItemsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "order_items_order_headers_order_items",
				Columns:    []*schema.Column{OrderItemsColumns[47]},
				RefColumns: []*schema.Column{OrderHeadersColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "order_items_order_roles_order_items",
				Columns:    []*schema.Column{OrderItemsColumns[48]},
				RefColumns: []*schema.Column{OrderRolesColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "order_items_products_order_items",
				Columns:    []*schema.Column{OrderItemsColumns[49]},
				RefColumns: []*schema.Column{ProductsColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "order_items_status_items_order_items",
				Columns:    []*schema.Column{OrderItemsColumns[50]},
				RefColumns: []*schema.Column{StatusItemsColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "order_items_status_items_sync_order_items",
				Columns:    []*schema.Column{OrderItemsColumns[51]},
				RefColumns: []*schema.Column{StatusItemsColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// OrderItemShipGroupsColumns holds the columns for the "order_item_ship_groups" table.
	OrderItemShipGroupsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "create_time", Type: field.TypeTime},
		{Name: "update_time", Type: field.TypeTime},
		{Name: "string_ref", Type: field.TypeString, Nullable: true},
		{Name: "ship_group_seq_id", Type: field.TypeInt},
		{Name: "shipment_method_type_id", Type: field.TypeInt, Nullable: true},
		{Name: "supplier_party_id", Type: field.TypeInt, Nullable: true},
		{Name: "supplier_agreement_id", Type: field.TypeInt, Nullable: true},
		{Name: "vendor_party_id", Type: field.TypeInt, Nullable: true},
		{Name: "carrier_party_id", Type: field.TypeInt, Nullable: true},
		{Name: "carrier_role_type_id", Type: field.TypeInt, Nullable: true},
		{Name: "facility_id", Type: field.TypeInt, Nullable: true},
		{Name: "contact_mech_id", Type: field.TypeInt, Nullable: true},
		{Name: "telecom_contact_mech_id", Type: field.TypeInt, Nullable: true},
		{Name: "tracking_number", Type: field.TypeString, Nullable: true},
		{Name: "shipping_instructions", Type: field.TypeString, Nullable: true},
		{Name: "may_split", Type: field.TypeEnum, Nullable: true, Enums: []string{"Yes", "No", "Unknown"}},
		{Name: "gift_message", Type: field.TypeString, Nullable: true},
		{Name: "is_gift", Type: field.TypeEnum, Nullable: true, Enums: []string{"Yes", "No", "Unknown"}},
		{Name: "ship_after_date", Type: field.TypeTime, Nullable: true},
		{Name: "ship_by_date", Type: field.TypeTime, Nullable: true},
		{Name: "estimated_ship_date", Type: field.TypeTime, Nullable: true},
		{Name: "estimated_delivery_date", Type: field.TypeTime, Nullable: true},
		{Name: "order_header_order_item_ship_groups", Type: field.TypeInt, Nullable: true},
	}
	// OrderItemShipGroupsTable holds the schema information for the "order_item_ship_groups" table.
	OrderItemShipGroupsTable = &schema.Table{
		Name:       "order_item_ship_groups",
		Columns:    OrderItemShipGroupsColumns,
		PrimaryKey: []*schema.Column{OrderItemShipGroupsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "order_item_ship_groups_order_headers_order_item_ship_groups",
				Columns:    []*schema.Column{OrderItemShipGroupsColumns[23]},
				RefColumns: []*schema.Column{OrderHeadersColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// OrderItemShipGroupAssocsColumns holds the columns for the "order_item_ship_group_assocs" table.
	OrderItemShipGroupAssocsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "create_time", Type: field.TypeTime},
		{Name: "update_time", Type: field.TypeTime},
		{Name: "string_ref", Type: field.TypeString, Nullable: true},
		{Name: "order_item_seq_id", Type: field.TypeInt},
		{Name: "ship_group_seq_id", Type: field.TypeInt},
		{Name: "quantity", Type: field.TypeFloat64, Nullable: true},
		{Name: "cancel_quantity", Type: field.TypeFloat64, Nullable: true},
		{Name: "order_header_order_item_ship_group_assocs", Type: field.TypeInt, Nullable: true},
		{Name: "order_item_order_item_ship_group_assocs", Type: field.TypeInt, Nullable: true},
		{Name: "order_item_ship_group_order_item_ship_group_assocs", Type: field.TypeInt, Nullable: true},
	}
	// OrderItemShipGroupAssocsTable holds the schema information for the "order_item_ship_group_assocs" table.
	OrderItemShipGroupAssocsTable = &schema.Table{
		Name:       "order_item_ship_group_assocs",
		Columns:    OrderItemShipGroupAssocsColumns,
		PrimaryKey: []*schema.Column{OrderItemShipGroupAssocsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "order_item_ship_group_assocs_order_headers_order_item_ship_group_assocs",
				Columns:    []*schema.Column{OrderItemShipGroupAssocsColumns[8]},
				RefColumns: []*schema.Column{OrderHeadersColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "order_item_ship_group_assocs_order_items_order_item_ship_group_assocs",
				Columns:    []*schema.Column{OrderItemShipGroupAssocsColumns[9]},
				RefColumns: []*schema.Column{OrderItemsColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "order_item_ship_group_assocs_order_item_ship_groups_order_item_ship_group_assocs",
				Columns:    []*schema.Column{OrderItemShipGroupAssocsColumns[10]},
				RefColumns: []*schema.Column{OrderItemShipGroupsColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// OrderItemShipGrpInvResColumns holds the columns for the "order_item_ship_grp_inv_res" table.
	OrderItemShipGrpInvResColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "create_time", Type: field.TypeTime},
		{Name: "update_time", Type: field.TypeTime},
		{Name: "string_ref", Type: field.TypeString, Nullable: true},
		{Name: "ship_group_seq_id", Type: field.TypeInt},
		{Name: "order_item_seq_id", Type: field.TypeInt},
		{Name: "inventory_item_id", Type: field.TypeInt},
		{Name: "reserve_order_enum_id", Type: field.TypeInt, Nullable: true},
		{Name: "quantity", Type: field.TypeFloat64, Nullable: true},
		{Name: "quantity_not_available", Type: field.TypeFloat64, Nullable: true},
		{Name: "reserved_datetime", Type: field.TypeTime, Nullable: true},
		{Name: "created_datetime", Type: field.TypeTime, Nullable: true},
		{Name: "promised_datetime", Type: field.TypeTime, Nullable: true},
		{Name: "current_promised_date", Type: field.TypeTime, Nullable: true},
		{Name: "priority", Type: field.TypeEnum, Nullable: true, Enums: []string{"Yes", "No", "Unknown"}},
		{Name: "sequence_id", Type: field.TypeInt, Nullable: true},
		{Name: "old_pick_start_date", Type: field.TypeTime, Nullable: true},
		{Name: "order_header_order_item_ship_grp_inv_res", Type: field.TypeInt, Nullable: true},
		{Name: "order_item_order_item_ship_grp_inv_res", Type: field.TypeInt, Nullable: true},
		{Name: "order_item_ship_group_order_item_ship_grp_inv_res", Type: field.TypeInt, Nullable: true},
		{Name: "order_item_ship_group_assoc_order_item_ship_grp_inv_res", Type: field.TypeInt, Nullable: true},
	}
	// OrderItemShipGrpInvResTable holds the schema information for the "order_item_ship_grp_inv_res" table.
	OrderItemShipGrpInvResTable = &schema.Table{
		Name:       "order_item_ship_grp_inv_res",
		Columns:    OrderItemShipGrpInvResColumns,
		PrimaryKey: []*schema.Column{OrderItemShipGrpInvResColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "order_item_ship_grp_inv_res_order_headers_order_item_ship_grp_inv_res",
				Columns:    []*schema.Column{OrderItemShipGrpInvResColumns[17]},
				RefColumns: []*schema.Column{OrderHeadersColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "order_item_ship_grp_inv_res_order_items_order_item_ship_grp_inv_res",
				Columns:    []*schema.Column{OrderItemShipGrpInvResColumns[18]},
				RefColumns: []*schema.Column{OrderItemsColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "order_item_ship_grp_inv_res_order_item_ship_groups_order_item_ship_grp_inv_res",
				Columns:    []*schema.Column{OrderItemShipGrpInvResColumns[19]},
				RefColumns: []*schema.Column{OrderItemShipGroupsColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "order_item_ship_grp_inv_res_order_item_ship_group_assocs_order_item_ship_grp_inv_res",
				Columns:    []*schema.Column{OrderItemShipGrpInvResColumns[20]},
				RefColumns: []*schema.Column{OrderItemShipGroupAssocsColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// OrderPaymentPreferencesColumns holds the columns for the "order_payment_preferences" table.
	OrderPaymentPreferencesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "create_time", Type: field.TypeTime},
		{Name: "update_time", Type: field.TypeTime},
		{Name: "string_ref", Type: field.TypeString, Nullable: true},
		{Name: "order_item_seq_id", Type: field.TypeInt, Nullable: true},
		{Name: "ship_group_seq_id", Type: field.TypeInt, Nullable: true},
		{Name: "payment_method_type_id", Type: field.TypeInt, Nullable: true},
		{Name: "payment_method_id", Type: field.TypeInt, Nullable: true},
		{Name: "fin_account_id", Type: field.TypeInt, Nullable: true},
		{Name: "security_code", Type: field.TypeString, Nullable: true},
		{Name: "track_2", Type: field.TypeString, Nullable: true},
		{Name: "present_flag", Type: field.TypeEnum, Nullable: true, Enums: []string{"Yes", "No", "Unknown"}},
		{Name: "swiped_flag", Type: field.TypeEnum, Nullable: true, Enums: []string{"Yes", "No", "Unknown"}},
		{Name: "overflow_flag", Type: field.TypeEnum, Nullable: true, Enums: []string{"Yes", "No", "Unknown"}},
		{Name: "max_amount", Type: field.TypeFloat64, Nullable: true},
		{Name: "process_attempt", Type: field.TypeInt, Nullable: true},
		{Name: "billing_postal_code", Type: field.TypeString, Nullable: true},
		{Name: "manual_auth_code", Type: field.TypeString, Nullable: true},
		{Name: "manual_ref_num", Type: field.TypeString, Nullable: true},
		{Name: "needs_nsf_retry", Type: field.TypeEnum, Nullable: true, Enums: []string{"Yes", "No", "Unknown"}},
		{Name: "created_date", Type: field.TypeTime, Nullable: true},
		{Name: "created_by_user_login", Type: field.TypeString, Nullable: true},
		{Name: "last_modified_date", Type: field.TypeTime, Nullable: true},
		{Name: "last_modified_by_user_login", Type: field.TypeString, Nullable: true},
		{Name: "order_header_order_payment_preferences", Type: field.TypeInt, Nullable: true},
		{Name: "order_item_order_payment_preferences", Type: field.TypeInt, Nullable: true},
		{Name: "order_item_ship_group_order_payment_preferences", Type: field.TypeInt, Nullable: true},
		{Name: "product_price_purpose_order_payment_preferences", Type: field.TypeInt, Nullable: true},
		{Name: "status_item_order_payment_preferences", Type: field.TypeInt, Nullable: true},
	}
	// OrderPaymentPreferencesTable holds the schema information for the "order_payment_preferences" table.
	OrderPaymentPreferencesTable = &schema.Table{
		Name:       "order_payment_preferences",
		Columns:    OrderPaymentPreferencesColumns,
		PrimaryKey: []*schema.Column{OrderPaymentPreferencesColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "order_payment_preferences_order_headers_order_payment_preferences",
				Columns:    []*schema.Column{OrderPaymentPreferencesColumns[24]},
				RefColumns: []*schema.Column{OrderHeadersColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "order_payment_preferences_order_items_order_payment_preferences",
				Columns:    []*schema.Column{OrderPaymentPreferencesColumns[25]},
				RefColumns: []*schema.Column{OrderItemsColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "order_payment_preferences_order_item_ship_groups_order_payment_preferences",
				Columns:    []*schema.Column{OrderPaymentPreferencesColumns[26]},
				RefColumns: []*schema.Column{OrderItemShipGroupsColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "order_payment_preferences_product_price_purposes_order_payment_preferences",
				Columns:    []*schema.Column{OrderPaymentPreferencesColumns[27]},
				RefColumns: []*schema.Column{ProductPricePurposesColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "order_payment_preferences_status_items_order_payment_preferences",
				Columns:    []*schema.Column{OrderPaymentPreferencesColumns[28]},
				RefColumns: []*schema.Column{StatusItemsColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// OrderRolesColumns holds the columns for the "order_roles" table.
	OrderRolesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "create_time", Type: field.TypeTime},
		{Name: "update_time", Type: field.TypeTime},
		{Name: "string_ref", Type: field.TypeString, Nullable: true},
		{Name: "party_id", Type: field.TypeInt},
		{Name: "order_header_order_roles", Type: field.TypeInt, Nullable: true},
		{Name: "role_type_order_roles", Type: field.TypeInt, Nullable: true},
	}
	// OrderRolesTable holds the schema information for the "order_roles" table.
	OrderRolesTable = &schema.Table{
		Name:       "order_roles",
		Columns:    OrderRolesColumns,
		PrimaryKey: []*schema.Column{OrderRolesColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "order_roles_order_headers_order_roles",
				Columns:    []*schema.Column{OrderRolesColumns[5]},
				RefColumns: []*schema.Column{OrderHeadersColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "order_roles_role_types_order_roles",
				Columns:    []*schema.Column{OrderRolesColumns[6]},
				RefColumns: []*schema.Column{RoleTypesColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// OrderStatusColumns holds the columns for the "order_status" table.
	OrderStatusColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "create_time", Type: field.TypeTime},
		{Name: "update_time", Type: field.TypeTime},
		{Name: "string_ref", Type: field.TypeString, Nullable: true},
		{Name: "order_item_seq_id", Type: field.TypeInt, Nullable: true},
		{Name: "status_datetime", Type: field.TypeTime, Nullable: true},
		{Name: "status_user_login", Type: field.TypeString, Nullable: true},
		{Name: "change_reason", Type: field.TypeString, Nullable: true},
		{Name: "order_header_order_statuses", Type: field.TypeInt, Nullable: true},
		{Name: "order_item_order_statuses", Type: field.TypeInt, Nullable: true},
		{Name: "order_payment_preference_order_statuses", Type: field.TypeInt, Nullable: true},
		{Name: "status_item_order_statuses", Type: field.TypeInt, Nullable: true},
	}
	// OrderStatusTable holds the schema information for the "order_status" table.
	OrderStatusTable = &schema.Table{
		Name:       "order_status",
		Columns:    OrderStatusColumns,
		PrimaryKey: []*schema.Column{OrderStatusColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "order_status_order_headers_order_statuses",
				Columns:    []*schema.Column{OrderStatusColumns[8]},
				RefColumns: []*schema.Column{OrderHeadersColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "order_status_order_items_order_statuses",
				Columns:    []*schema.Column{OrderStatusColumns[9]},
				RefColumns: []*schema.Column{OrderItemsColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "order_status_order_payment_preferences_order_statuses",
				Columns:    []*schema.Column{OrderStatusColumns[10]},
				RefColumns: []*schema.Column{OrderPaymentPreferencesColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "order_status_status_items_order_statuses",
				Columns:    []*schema.Column{OrderStatusColumns[11]},
				RefColumns: []*schema.Column{StatusItemsColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// ProdCatalogCategoryTypesColumns holds the columns for the "prod_catalog_category_types" table.
	ProdCatalogCategoryTypesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "create_time", Type: field.TypeTime},
		{Name: "update_time", Type: field.TypeTime},
		{Name: "string_ref", Type: field.TypeString, Nullable: true},
		{Name: "description", Type: field.TypeString, Nullable: true},
		{Name: "prod_catalog_category_type_children", Type: field.TypeInt, Nullable: true},
	}
	// ProdCatalogCategoryTypesTable holds the schema information for the "prod_catalog_category_types" table.
	ProdCatalogCategoryTypesTable = &schema.Table{
		Name:       "prod_catalog_category_types",
		Columns:    ProdCatalogCategoryTypesColumns,
		PrimaryKey: []*schema.Column{ProdCatalogCategoryTypesColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "prod_catalog_category_types_prod_catalog_category_types_children",
				Columns:    []*schema.Column{ProdCatalogCategoryTypesColumns[5]},
				RefColumns: []*schema.Column{ProdCatalogCategoryTypesColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// ProdConfItemContentTypesColumns holds the columns for the "prod_conf_item_content_types" table.
	ProdConfItemContentTypesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "create_time", Type: field.TypeTime},
		{Name: "update_time", Type: field.TypeTime},
		{Name: "string_ref", Type: field.TypeString, Nullable: true},
		{Name: "has_table", Type: field.TypeEnum, Nullable: true, Enums: []string{"Yes", "No", "Unknown"}},
		{Name: "description", Type: field.TypeString, Nullable: true},
		{Name: "prod_conf_item_content_type_children", Type: field.TypeInt, Nullable: true},
	}
	// ProdConfItemContentTypesTable holds the schema information for the "prod_conf_item_content_types" table.
	ProdConfItemContentTypesTable = &schema.Table{
		Name:       "prod_conf_item_content_types",
		Columns:    ProdConfItemContentTypesColumns,
		PrimaryKey: []*schema.Column{ProdConfItemContentTypesColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "prod_conf_item_content_types_prod_conf_item_content_types_children",
				Columns:    []*schema.Column{ProdConfItemContentTypesColumns[6]},
				RefColumns: []*schema.Column{ProdConfItemContentTypesColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// ProductsColumns holds the columns for the "products" table.
	ProductsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "create_time", Type: field.TypeTime},
		{Name: "update_time", Type: field.TypeTime},
		{Name: "string_ref", Type: field.TypeString, Nullable: true},
		{Name: "facility_id", Type: field.TypeInt, Nullable: true},
		{Name: "introduction_date", Type: field.TypeTime, Nullable: true},
		{Name: "release_date", Type: field.TypeTime, Nullable: true},
		{Name: "support_discontinuation_date", Type: field.TypeTime, Nullable: true},
		{Name: "sales_discontinuation_date", Type: field.TypeTime, Nullable: true},
		{Name: "sales_disc_when_not_avail", Type: field.TypeEnum, Nullable: true, Enums: []string{"Yes", "No", "Unknown"}},
		{Name: "internal_name", Type: field.TypeString, Nullable: true},
		{Name: "brand_name", Type: field.TypeString, Nullable: true},
		{Name: "comments", Type: field.TypeString, Nullable: true},
		{Name: "product_name", Type: field.TypeString, Nullable: true},
		{Name: "description", Type: field.TypeString, Nullable: true},
		{Name: "long_description", Type: field.TypeString, Nullable: true},
		{Name: "price_detail_text", Type: field.TypeString, Nullable: true},
		{Name: "small_image_url", Type: field.TypeString, Nullable: true},
		{Name: "medium_image_url", Type: field.TypeString, Nullable: true},
		{Name: "large_image_url", Type: field.TypeString, Nullable: true},
		{Name: "detail_image_url", Type: field.TypeString, Nullable: true},
		{Name: "original_image_url", Type: field.TypeString, Nullable: true},
		{Name: "detail_screen", Type: field.TypeString, Nullable: true},
		{Name: "inventory_message", Type: field.TypeString, Nullable: true},
		{Name: "require_inventory", Type: field.TypeEnum, Nullable: true, Enums: []string{"Yes", "No", "Unknown"}},
		{Name: "quantity_uom_id", Type: field.TypeInt, Nullable: true},
		{Name: "quantity_included", Type: field.TypeFloat64, Nullable: true},
		{Name: "pieces_included", Type: field.TypeInt, Nullable: true},
		{Name: "require_amount", Type: field.TypeEnum, Nullable: true, Enums: []string{"Yes", "No", "Unknown"}},
		{Name: "fixed_amount", Type: field.TypeFloat64, Nullable: true},
		{Name: "amount_uom_type_id", Type: field.TypeInt, Nullable: true},
		{Name: "weight_uom_id", Type: field.TypeInt, Nullable: true},
		{Name: "shipping_weight", Type: field.TypeFloat64, Nullable: true},
		{Name: "product_weight", Type: field.TypeFloat64, Nullable: true},
		{Name: "height_uom_id", Type: field.TypeInt, Nullable: true},
		{Name: "product_height", Type: field.TypeFloat64, Nullable: true},
		{Name: "shipping_height", Type: field.TypeFloat64, Nullable: true},
		{Name: "width_uom_id", Type: field.TypeInt, Nullable: true},
		{Name: "product_width", Type: field.TypeFloat64, Nullable: true},
		{Name: "shipping_width", Type: field.TypeFloat64, Nullable: true},
		{Name: "depth_uom_id", Type: field.TypeInt, Nullable: true},
		{Name: "product_depth", Type: field.TypeFloat64, Nullable: true},
		{Name: "shipping_depth", Type: field.TypeFloat64, Nullable: true},
		{Name: "diameter_uom_id", Type: field.TypeInt, Nullable: true},
		{Name: "product_diameter", Type: field.TypeFloat64, Nullable: true},
		{Name: "product_rating", Type: field.TypeFloat64, Nullable: true},
		{Name: "returnable", Type: field.TypeEnum, Nullable: true, Enums: []string{"Yes", "No", "Unknown"}},
		{Name: "taxable", Type: field.TypeEnum, Nullable: true, Enums: []string{"Yes", "No", "Unknown"}},
		{Name: "charge_shipping", Type: field.TypeEnum, Nullable: true, Enums: []string{"Yes", "No", "Unknown"}},
		{Name: "auto_create_keywords", Type: field.TypeEnum, Nullable: true, Enums: []string{"Yes", "No", "Unknown"}},
		{Name: "include_in_promotions", Type: field.TypeEnum, Nullable: true, Enums: []string{"Yes", "No", "Unknown"}},
		{Name: "is_virtual", Type: field.TypeEnum, Nullable: true, Enums: []string{"Yes", "No", "Unknown"}},
		{Name: "is_variant", Type: field.TypeEnum, Nullable: true, Enums: []string{"Yes", "No", "Unknown"}},
		{Name: "origin_geo_id", Type: field.TypeInt, Nullable: true},
		{Name: "bill_of_material_level", Type: field.TypeInt, Nullable: true},
		{Name: "reserv_max_persons", Type: field.TypeFloat64, Nullable: true},
		{Name: "reserv_2_nd_pp_perc", Type: field.TypeFloat64, Nullable: true},
		{Name: "reserv_nth_pp_perc", Type: field.TypeFloat64, Nullable: true},
		{Name: "config_id", Type: field.TypeInt, Nullable: true},
		{Name: "created_date", Type: field.TypeTime, Nullable: true},
		{Name: "created_by_user_login", Type: field.TypeString, Nullable: true},
		{Name: "last_modified_date", Type: field.TypeTime, Nullable: true},
		{Name: "last_modified_by_user_login", Type: field.TypeString, Nullable: true},
		{Name: "in_shipping_box", Type: field.TypeEnum, Nullable: true, Enums: []string{"Yes", "No", "Unknown"}},
		{Name: "default_shipment_box_type_id", Type: field.TypeInt, Nullable: true},
		{Name: "lot_id_filled_in", Type: field.TypeString, Nullable: true},
		{Name: "order_decimal_quantity", Type: field.TypeEnum, Nullable: true, Enums: []string{"Yes", "No", "Unknown"}},
		{Name: "enumeration_virtual_variant_method_products", Type: field.TypeInt, Nullable: true},
		{Name: "enumeration_rating_products", Type: field.TypeInt, Nullable: true},
		{Name: "enumeration_requirement_method_products", Type: field.TypeInt, Nullable: true},
		{Name: "inventory_item_type_products", Type: field.TypeInt, Nullable: true},
		{Name: "product_category_primary_products", Type: field.TypeInt, Nullable: true},
		{Name: "product_type_products", Type: field.TypeInt, Nullable: true},
	}
	// ProductsTable holds the schema information for the "products" table.
	ProductsTable = &schema.Table{
		Name:       "products",
		Columns:    ProductsColumns,
		PrimaryKey: []*schema.Column{ProductsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "products_enumerations_virtual_variant_method_products",
				Columns:    []*schema.Column{ProductsColumns[67]},
				RefColumns: []*schema.Column{EnumerationsColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "products_enumerations_rating_products",
				Columns:    []*schema.Column{ProductsColumns[68]},
				RefColumns: []*schema.Column{EnumerationsColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "products_enumerations_requirement_method_products",
				Columns:    []*schema.Column{ProductsColumns[69]},
				RefColumns: []*schema.Column{EnumerationsColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "products_inventory_item_types_products",
				Columns:    []*schema.Column{ProductsColumns[70]},
				RefColumns: []*schema.Column{InventoryItemTypesColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "products_product_categories_primary_products",
				Columns:    []*schema.Column{ProductsColumns[71]},
				RefColumns: []*schema.Column{ProductCategoriesColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "products_product_types_products",
				Columns:    []*schema.Column{ProductsColumns[72]},
				RefColumns: []*schema.Column{ProductTypesColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// ProductAssocsColumns holds the columns for the "product_assocs" table.
	ProductAssocsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "create_time", Type: field.TypeTime},
		{Name: "update_time", Type: field.TypeTime},
		{Name: "string_ref", Type: field.TypeString, Nullable: true},
		{Name: "from_date", Type: field.TypeTime},
		{Name: "thru_date", Type: field.TypeTime, Nullable: true},
		{Name: "sequence_num", Type: field.TypeInt, Nullable: true},
		{Name: "reason", Type: field.TypeString, Nullable: true},
		{Name: "quantity", Type: field.TypeFloat64, Nullable: true},
		{Name: "scrap_factor", Type: field.TypeFloat64, Nullable: true},
		{Name: "instruction", Type: field.TypeString, Nullable: true},
		{Name: "routing_work_effort_id", Type: field.TypeInt, Nullable: true},
		{Name: "recurrence_info_id", Type: field.TypeInt, Nullable: true},
		{Name: "custom_method_product_assocs", Type: field.TypeInt, Nullable: true},
		{Name: "product_main_product_assocs", Type: field.TypeInt, Nullable: true},
		{Name: "product_assoc_product_assocs", Type: field.TypeInt, Nullable: true},
		{Name: "product_assoc_type_product_assocs", Type: field.TypeInt, Nullable: true},
	}
	// ProductAssocsTable holds the schema information for the "product_assocs" table.
	ProductAssocsTable = &schema.Table{
		Name:       "product_assocs",
		Columns:    ProductAssocsColumns,
		PrimaryKey: []*schema.Column{ProductAssocsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "product_assocs_custom_methods_product_assocs",
				Columns:    []*schema.Column{ProductAssocsColumns[13]},
				RefColumns: []*schema.Column{CustomMethodsColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "product_assocs_products_main_product_assocs",
				Columns:    []*schema.Column{ProductAssocsColumns[14]},
				RefColumns: []*schema.Column{ProductsColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "product_assocs_products_assoc_product_assocs",
				Columns:    []*schema.Column{ProductAssocsColumns[15]},
				RefColumns: []*schema.Column{ProductsColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "product_assocs_product_assoc_types_product_assocs",
				Columns:    []*schema.Column{ProductAssocsColumns[16]},
				RefColumns: []*schema.Column{ProductAssocTypesColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// ProductAssocTypesColumns holds the columns for the "product_assoc_types" table.
	ProductAssocTypesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "create_time", Type: field.TypeTime},
		{Name: "update_time", Type: field.TypeTime},
		{Name: "string_ref", Type: field.TypeString, Nullable: true},
		{Name: "has_table", Type: field.TypeEnum, Nullable: true, Enums: []string{"Yes", "No", "Unknown"}},
		{Name: "description", Type: field.TypeString, Nullable: true},
		{Name: "product_assoc_type_children", Type: field.TypeInt, Nullable: true},
	}
	// ProductAssocTypesTable holds the schema information for the "product_assoc_types" table.
	ProductAssocTypesTable = &schema.Table{
		Name:       "product_assoc_types",
		Columns:    ProductAssocTypesColumns,
		PrimaryKey: []*schema.Column{ProductAssocTypesColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "product_assoc_types_product_assoc_types_children",
				Columns:    []*schema.Column{ProductAssocTypesColumns[6]},
				RefColumns: []*schema.Column{ProductAssocTypesColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// ProductCategoriesColumns holds the columns for the "product_categories" table.
	ProductCategoriesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "create_time", Type: field.TypeTime},
		{Name: "update_time", Type: field.TypeTime},
		{Name: "string_ref", Type: field.TypeString, Nullable: true},
		{Name: "category_name", Type: field.TypeString, Nullable: true},
		{Name: "description", Type: field.TypeString, Nullable: true},
		{Name: "long_description", Type: field.TypeString, Nullable: true},
		{Name: "category_image_url", Type: field.TypeString, Nullable: true},
		{Name: "link_one_image_url", Type: field.TypeString, Nullable: true},
		{Name: "link_two_image_url", Type: field.TypeString, Nullable: true},
		{Name: "detail_screen", Type: field.TypeString, Nullable: true},
		{Name: "show_in_select", Type: field.TypeEnum, Nullable: true, Enums: []string{"Yes", "No", "Unknown"}},
		{Name: "product_category_children", Type: field.TypeInt, Nullable: true},
		{Name: "product_category_type_product_categories", Type: field.TypeInt, Nullable: true},
	}
	// ProductCategoriesTable holds the schema information for the "product_categories" table.
	ProductCategoriesTable = &schema.Table{
		Name:       "product_categories",
		Columns:    ProductCategoriesColumns,
		PrimaryKey: []*schema.Column{ProductCategoriesColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "product_categories_product_categories_children",
				Columns:    []*schema.Column{ProductCategoriesColumns[12]},
				RefColumns: []*schema.Column{ProductCategoriesColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "product_categories_product_category_types_product_categories",
				Columns:    []*schema.Column{ProductCategoriesColumns[13]},
				RefColumns: []*schema.Column{ProductCategoryTypesColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// ProductCategoryContentTypesColumns holds the columns for the "product_category_content_types" table.
	ProductCategoryContentTypesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "create_time", Type: field.TypeTime},
		{Name: "update_time", Type: field.TypeTime},
		{Name: "string_ref", Type: field.TypeString, Nullable: true},
		{Name: "has_table", Type: field.TypeEnum, Nullable: true, Enums: []string{"Yes", "No", "Unknown"}},
		{Name: "description", Type: field.TypeString, Nullable: true},
		{Name: "product_category_content_type_children", Type: field.TypeInt, Nullable: true},
	}
	// ProductCategoryContentTypesTable holds the schema information for the "product_category_content_types" table.
	ProductCategoryContentTypesTable = &schema.Table{
		Name:       "product_category_content_types",
		Columns:    ProductCategoryContentTypesColumns,
		PrimaryKey: []*schema.Column{ProductCategoryContentTypesColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "product_category_content_types_product_category_content_types_children",
				Columns:    []*schema.Column{ProductCategoryContentTypesColumns[6]},
				RefColumns: []*schema.Column{ProductCategoryContentTypesColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// ProductCategoryTypesColumns holds the columns for the "product_category_types" table.
	ProductCategoryTypesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "create_time", Type: field.TypeTime},
		{Name: "update_time", Type: field.TypeTime},
		{Name: "string_ref", Type: field.TypeString, Nullable: true},
		{Name: "has_table", Type: field.TypeEnum, Nullable: true, Enums: []string{"Yes", "No", "Unknown"}},
		{Name: "description", Type: field.TypeString, Nullable: true},
		{Name: "product_category_type_children", Type: field.TypeInt, Nullable: true},
	}
	// ProductCategoryTypesTable holds the schema information for the "product_category_types" table.
	ProductCategoryTypesTable = &schema.Table{
		Name:       "product_category_types",
		Columns:    ProductCategoryTypesColumns,
		PrimaryKey: []*schema.Column{ProductCategoryTypesColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "product_category_types_product_category_types_children",
				Columns:    []*schema.Column{ProductCategoryTypesColumns[6]},
				RefColumns: []*schema.Column{ProductCategoryTypesColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// ProductConfigItemsColumns holds the columns for the "product_config_items" table.
	ProductConfigItemsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "create_time", Type: field.TypeTime},
		{Name: "update_time", Type: field.TypeTime},
		{Name: "string_ref", Type: field.TypeString, Nullable: true},
		{Name: "config_item_type_id", Type: field.TypeInt, Nullable: true},
		{Name: "config_item_name", Type: field.TypeString, Nullable: true},
		{Name: "description", Type: field.TypeString, Nullable: true},
		{Name: "long_description", Type: field.TypeString, Nullable: true},
		{Name: "image_url", Type: field.TypeString, Nullable: true},
	}
	// ProductConfigItemsTable holds the schema information for the "product_config_items" table.
	ProductConfigItemsTable = &schema.Table{
		Name:       "product_config_items",
		Columns:    ProductConfigItemsColumns,
		PrimaryKey: []*schema.Column{ProductConfigItemsColumns[0]},
	}
	// ProductContentTypesColumns holds the columns for the "product_content_types" table.
	ProductContentTypesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "create_time", Type: field.TypeTime},
		{Name: "update_time", Type: field.TypeTime},
		{Name: "string_ref", Type: field.TypeString, Nullable: true},
		{Name: "has_table", Type: field.TypeEnum, Nullable: true, Enums: []string{"Yes", "No", "Unknown"}},
		{Name: "description", Type: field.TypeString, Nullable: true},
		{Name: "product_content_type_children", Type: field.TypeInt, Nullable: true},
	}
	// ProductContentTypesTable holds the schema information for the "product_content_types" table.
	ProductContentTypesTable = &schema.Table{
		Name:       "product_content_types",
		Columns:    ProductContentTypesColumns,
		PrimaryKey: []*schema.Column{ProductContentTypesColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "product_content_types_product_content_types_children",
				Columns:    []*schema.Column{ProductContentTypesColumns[6]},
				RefColumns: []*schema.Column{ProductContentTypesColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// ProductFeaturesColumns holds the columns for the "product_features" table.
	ProductFeaturesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "create_time", Type: field.TypeTime},
		{Name: "update_time", Type: field.TypeTime},
		{Name: "string_ref", Type: field.TypeString, Nullable: true},
		{Name: "description", Type: field.TypeString, Nullable: true},
		{Name: "uom_id", Type: field.TypeInt, Nullable: true},
		{Name: "number_specified", Type: field.TypeFloat64, Nullable: true},
		{Name: "default_amount", Type: field.TypeFloat64, Nullable: true},
		{Name: "default_sequence_num", Type: field.TypeInt, Nullable: true},
		{Name: "abbrev", Type: field.TypeInt, Nullable: true},
		{Name: "id_code", Type: field.TypeString, Nullable: true, Size: 32},
		{Name: "product_feature_category_product_features", Type: field.TypeInt, Nullable: true},
		{Name: "product_feature_type_product_features", Type: field.TypeInt, Nullable: true},
	}
	// ProductFeaturesTable holds the schema information for the "product_features" table.
	ProductFeaturesTable = &schema.Table{
		Name:       "product_features",
		Columns:    ProductFeaturesColumns,
		PrimaryKey: []*schema.Column{ProductFeaturesColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "product_features_product_feature_categories_product_features",
				Columns:    []*schema.Column{ProductFeaturesColumns[11]},
				RefColumns: []*schema.Column{ProductFeatureCategoriesColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "product_features_product_feature_types_product_features",
				Columns:    []*schema.Column{ProductFeaturesColumns[12]},
				RefColumns: []*schema.Column{ProductFeatureTypesColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// ProductFeatureApplTypesColumns holds the columns for the "product_feature_appl_types" table.
	ProductFeatureApplTypesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "create_time", Type: field.TypeTime},
		{Name: "update_time", Type: field.TypeTime},
		{Name: "string_ref", Type: field.TypeString, Nullable: true},
		{Name: "has_table", Type: field.TypeEnum, Nullable: true, Enums: []string{"Yes", "No", "Unknown"}},
		{Name: "description", Type: field.TypeString, Nullable: true},
		{Name: "product_feature_appl_type_children", Type: field.TypeInt, Nullable: true},
	}
	// ProductFeatureApplTypesTable holds the schema information for the "product_feature_appl_types" table.
	ProductFeatureApplTypesTable = &schema.Table{
		Name:       "product_feature_appl_types",
		Columns:    ProductFeatureApplTypesColumns,
		PrimaryKey: []*schema.Column{ProductFeatureApplTypesColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "product_feature_appl_types_product_feature_appl_types_children",
				Columns:    []*schema.Column{ProductFeatureApplTypesColumns[6]},
				RefColumns: []*schema.Column{ProductFeatureApplTypesColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// ProductFeatureCategoriesColumns holds the columns for the "product_feature_categories" table.
	ProductFeatureCategoriesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "create_time", Type: field.TypeTime},
		{Name: "update_time", Type: field.TypeTime},
		{Name: "string_ref", Type: field.TypeString, Nullable: true},
		{Name: "description", Type: field.TypeString, Nullable: true},
		{Name: "product_feature_category_children", Type: field.TypeInt, Nullable: true},
	}
	// ProductFeatureCategoriesTable holds the schema information for the "product_feature_categories" table.
	ProductFeatureCategoriesTable = &schema.Table{
		Name:       "product_feature_categories",
		Columns:    ProductFeatureCategoriesColumns,
		PrimaryKey: []*schema.Column{ProductFeatureCategoriesColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "product_feature_categories_product_feature_categories_children",
				Columns:    []*schema.Column{ProductFeatureCategoriesColumns[5]},
				RefColumns: []*schema.Column{ProductFeatureCategoriesColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// ProductFeatureIactnTypesColumns holds the columns for the "product_feature_iactn_types" table.
	ProductFeatureIactnTypesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "create_time", Type: field.TypeTime},
		{Name: "update_time", Type: field.TypeTime},
		{Name: "string_ref", Type: field.TypeString, Nullable: true},
		{Name: "has_table", Type: field.TypeEnum, Nullable: true, Enums: []string{"Yes", "No", "Unknown"}},
		{Name: "description", Type: field.TypeString, Nullable: true},
		{Name: "product_feature_iactn_type_children", Type: field.TypeInt, Nullable: true},
	}
	// ProductFeatureIactnTypesTable holds the schema information for the "product_feature_iactn_types" table.
	ProductFeatureIactnTypesTable = &schema.Table{
		Name:       "product_feature_iactn_types",
		Columns:    ProductFeatureIactnTypesColumns,
		PrimaryKey: []*schema.Column{ProductFeatureIactnTypesColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "product_feature_iactn_types_product_feature_iactn_types_children",
				Columns:    []*schema.Column{ProductFeatureIactnTypesColumns[6]},
				RefColumns: []*schema.Column{ProductFeatureIactnTypesColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// ProductFeatureTypesColumns holds the columns for the "product_feature_types" table.
	ProductFeatureTypesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "create_time", Type: field.TypeTime},
		{Name: "update_time", Type: field.TypeTime},
		{Name: "string_ref", Type: field.TypeString, Nullable: true},
		{Name: "has_table", Type: field.TypeEnum, Nullable: true, Enums: []string{"Yes", "No", "Unknown"}},
		{Name: "description", Type: field.TypeString, Nullable: true},
		{Name: "product_feature_type_children", Type: field.TypeInt, Nullable: true},
	}
	// ProductFeatureTypesTable holds the schema information for the "product_feature_types" table.
	ProductFeatureTypesTable = &schema.Table{
		Name:       "product_feature_types",
		Columns:    ProductFeatureTypesColumns,
		PrimaryKey: []*schema.Column{ProductFeatureTypesColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "product_feature_types_product_feature_types_children",
				Columns:    []*schema.Column{ProductFeatureTypesColumns[6]},
				RefColumns: []*schema.Column{ProductFeatureTypesColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// ProductMaintTypesColumns holds the columns for the "product_maint_types" table.
	ProductMaintTypesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "create_time", Type: field.TypeTime},
		{Name: "update_time", Type: field.TypeTime},
		{Name: "string_ref", Type: field.TypeString, Nullable: true},
		{Name: "description", Type: field.TypeString, Nullable: true},
		{Name: "product_maint_type_children", Type: field.TypeInt, Nullable: true},
	}
	// ProductMaintTypesTable holds the schema information for the "product_maint_types" table.
	ProductMaintTypesTable = &schema.Table{
		Name:       "product_maint_types",
		Columns:    ProductMaintTypesColumns,
		PrimaryKey: []*schema.Column{ProductMaintTypesColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "product_maint_types_product_maint_types_children",
				Columns:    []*schema.Column{ProductMaintTypesColumns[5]},
				RefColumns: []*schema.Column{ProductMaintTypesColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// ProductMeterTypesColumns holds the columns for the "product_meter_types" table.
	ProductMeterTypesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "create_time", Type: field.TypeTime},
		{Name: "update_time", Type: field.TypeTime},
		{Name: "string_ref", Type: field.TypeString, Nullable: true},
		{Name: "description", Type: field.TypeString, Nullable: true},
		{Name: "default_uom_id", Type: field.TypeInt, Nullable: true},
	}
	// ProductMeterTypesTable holds the schema information for the "product_meter_types" table.
	ProductMeterTypesTable = &schema.Table{
		Name:       "product_meter_types",
		Columns:    ProductMeterTypesColumns,
		PrimaryKey: []*schema.Column{ProductMeterTypesColumns[0]},
	}
	// ProductPricesColumns holds the columns for the "product_prices" table.
	ProductPricesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "create_time", Type: field.TypeTime},
		{Name: "update_time", Type: field.TypeTime},
		{Name: "string_ref", Type: field.TypeString, Nullable: true},
		{Name: "currency_uom_id", Type: field.TypeInt},
		{Name: "from_date", Type: field.TypeTime},
		{Name: "thru_date", Type: field.TypeTime, Nullable: true},
		{Name: "price", Type: field.TypeFloat64, Nullable: true},
		{Name: "term_uom_id", Type: field.TypeInt, Nullable: true},
		{Name: "price_without_tax", Type: field.TypeFloat64, Nullable: true},
		{Name: "price_with_tax", Type: field.TypeFloat64, Nullable: true},
		{Name: "tax_amount", Type: field.TypeFloat64, Nullable: true},
		{Name: "tax_percentage", Type: field.TypeFloat64, Nullable: true},
		{Name: "tax_auth_party_id", Type: field.TypeInt, Nullable: true},
		{Name: "tax_auth_geo_id", Type: field.TypeInt, Nullable: true},
		{Name: "tax_in_price", Type: field.TypeEnum, Nullable: true, Enums: []string{"Yes", "No", "Unknown"}},
		{Name: "created_date", Type: field.TypeTime, Nullable: true},
		{Name: "created_by_user_login", Type: field.TypeString, Nullable: true},
		{Name: "last_modified_date", Type: field.TypeTime, Nullable: true},
		{Name: "last_modified_by_user_login", Type: field.TypeString, Nullable: true},
		{Name: "custom_method_product_prices", Type: field.TypeInt, Nullable: true},
		{Name: "product_product_prices", Type: field.TypeInt, Nullable: true},
		{Name: "product_price_purpose_product_prices", Type: field.TypeInt, Nullable: true},
		{Name: "product_price_type_product_prices", Type: field.TypeInt, Nullable: true},
		{Name: "product_store_group_product_prices", Type: field.TypeInt, Nullable: true},
	}
	// ProductPricesTable holds the schema information for the "product_prices" table.
	ProductPricesTable = &schema.Table{
		Name:       "product_prices",
		Columns:    ProductPricesColumns,
		PrimaryKey: []*schema.Column{ProductPricesColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "product_prices_custom_methods_product_prices",
				Columns:    []*schema.Column{ProductPricesColumns[20]},
				RefColumns: []*schema.Column{CustomMethodsColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "product_prices_products_product_prices",
				Columns:    []*schema.Column{ProductPricesColumns[21]},
				RefColumns: []*schema.Column{ProductsColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "product_prices_product_price_purposes_product_prices",
				Columns:    []*schema.Column{ProductPricesColumns[22]},
				RefColumns: []*schema.Column{ProductPricePurposesColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "product_prices_product_price_types_product_prices",
				Columns:    []*schema.Column{ProductPricesColumns[23]},
				RefColumns: []*schema.Column{ProductPriceTypesColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "product_prices_product_store_groups_product_prices",
				Columns:    []*schema.Column{ProductPricesColumns[24]},
				RefColumns: []*schema.Column{ProductStoreGroupsColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// ProductPriceActionTypesColumns holds the columns for the "product_price_action_types" table.
	ProductPriceActionTypesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "create_time", Type: field.TypeTime},
		{Name: "update_time", Type: field.TypeTime},
		{Name: "string_ref", Type: field.TypeString, Nullable: true},
		{Name: "description", Type: field.TypeString, Nullable: true},
	}
	// ProductPriceActionTypesTable holds the schema information for the "product_price_action_types" table.
	ProductPriceActionTypesTable = &schema.Table{
		Name:       "product_price_action_types",
		Columns:    ProductPriceActionTypesColumns,
		PrimaryKey: []*schema.Column{ProductPriceActionTypesColumns[0]},
	}
	// ProductPricePurposesColumns holds the columns for the "product_price_purposes" table.
	ProductPricePurposesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "create_time", Type: field.TypeTime},
		{Name: "update_time", Type: field.TypeTime},
		{Name: "string_ref", Type: field.TypeString, Nullable: true},
		{Name: "description", Type: field.TypeString, Nullable: true},
	}
	// ProductPricePurposesTable holds the schema information for the "product_price_purposes" table.
	ProductPricePurposesTable = &schema.Table{
		Name:       "product_price_purposes",
		Columns:    ProductPricePurposesColumns,
		PrimaryKey: []*schema.Column{ProductPricePurposesColumns[0]},
	}
	// ProductPriceTypesColumns holds the columns for the "product_price_types" table.
	ProductPriceTypesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "create_time", Type: field.TypeTime},
		{Name: "update_time", Type: field.TypeTime},
		{Name: "string_ref", Type: field.TypeString, Nullable: true},
		{Name: "description", Type: field.TypeString, Nullable: true},
	}
	// ProductPriceTypesTable holds the schema information for the "product_price_types" table.
	ProductPriceTypesTable = &schema.Table{
		Name:       "product_price_types",
		Columns:    ProductPriceTypesColumns,
		PrimaryKey: []*schema.Column{ProductPriceTypesColumns[0]},
	}
	// ProductReviewsColumns holds the columns for the "product_reviews" table.
	ProductReviewsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "create_time", Type: field.TypeTime},
		{Name: "update_time", Type: field.TypeTime},
		{Name: "string_ref", Type: field.TypeString, Nullable: true},
		{Name: "user_login_id", Type: field.TypeString, Nullable: true},
		{Name: "posted_anonymous", Type: field.TypeEnum, Nullable: true, Enums: []string{"Yes", "No", "Unknown"}},
		{Name: "posted_date_time", Type: field.TypeTime, Nullable: true},
		{Name: "product_rating", Type: field.TypeFloat64, Nullable: true},
		{Name: "product_review", Type: field.TypeString, Nullable: true},
		{Name: "product_product_reviews", Type: field.TypeInt, Nullable: true},
		{Name: "product_store_product_reviews", Type: field.TypeInt, Nullable: true},
		{Name: "status_item_product_reviews", Type: field.TypeInt, Nullable: true},
	}
	// ProductReviewsTable holds the schema information for the "product_reviews" table.
	ProductReviewsTable = &schema.Table{
		Name:       "product_reviews",
		Columns:    ProductReviewsColumns,
		PrimaryKey: []*schema.Column{ProductReviewsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "product_reviews_products_product_reviews",
				Columns:    []*schema.Column{ProductReviewsColumns[9]},
				RefColumns: []*schema.Column{ProductsColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "product_reviews_product_stores_product_reviews",
				Columns:    []*schema.Column{ProductReviewsColumns[10]},
				RefColumns: []*schema.Column{ProductStoresColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "product_reviews_status_items_product_reviews",
				Columns:    []*schema.Column{ProductReviewsColumns[11]},
				RefColumns: []*schema.Column{StatusItemsColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// ProductStoresColumns holds the columns for the "product_stores" table.
	ProductStoresColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "create_time", Type: field.TypeTime},
		{Name: "update_time", Type: field.TypeTime},
		{Name: "string_ref", Type: field.TypeString, Nullable: true},
		{Name: "store_name", Type: field.TypeString, Nullable: true},
		{Name: "company_name", Type: field.TypeString, Nullable: true},
		{Name: "title", Type: field.TypeString, Nullable: true},
		{Name: "subtitle", Type: field.TypeString, Nullable: true},
		{Name: "pay_to_party_id", Type: field.TypeInt, Nullable: true},
		{Name: "days_to_cancel_non_pay", Type: field.TypeInt, Nullable: true},
		{Name: "manual_auth_is_capture", Type: field.TypeEnum, Nullable: true, Enums: []string{"Yes", "No", "Unknown"}},
		{Name: "prorate_shipping", Type: field.TypeEnum, Nullable: true, Enums: []string{"Yes", "No", "Unknown"}},
		{Name: "prorate_taxes", Type: field.TypeEnum, Nullable: true, Enums: []string{"Yes", "No", "Unknown"}},
		{Name: "view_cart_on_add", Type: field.TypeEnum, Nullable: true, Enums: []string{"Yes", "No", "Unknown"}},
		{Name: "auto_save_cart", Type: field.TypeEnum, Nullable: true, Enums: []string{"Yes", "No", "Unknown"}},
		{Name: "auto_approve_reviews", Type: field.TypeEnum, Nullable: true, Enums: []string{"Yes", "No", "Unknown"}},
		{Name: "is_demo_store", Type: field.TypeEnum, Nullable: true, Enums: []string{"Yes", "No", "Unknown"}},
		{Name: "is_immediately_fulfilled", Type: field.TypeEnum, Nullable: true, Enums: []string{"Yes", "No", "Unknown"}},
		{Name: "inventory_facility_id", Type: field.TypeInt, Nullable: true},
		{Name: "one_inventory_facility", Type: field.TypeEnum, Nullable: true, Enums: []string{"Yes", "No", "Unknown"}},
		{Name: "check_inventory", Type: field.TypeEnum, Nullable: true, Enums: []string{"Yes", "No", "Unknown"}},
		{Name: "reserve_inventory", Type: field.TypeEnum, Nullable: true, Enums: []string{"Yes", "No", "Unknown"}},
		{Name: "require_inventory", Type: field.TypeEnum, Nullable: true, Enums: []string{"Yes", "No", "Unknown"}},
		{Name: "balance_res_on_order_creation", Type: field.TypeEnum, Nullable: true, Enums: []string{"Yes", "No", "Unknown"}},
		{Name: "order_number_prefix", Type: field.TypeString, Nullable: true, Size: 32},
		{Name: "default_locale_string", Type: field.TypeString, Nullable: true, Size: 10},
		{Name: "default_currency_uom_id", Type: field.TypeInt, Nullable: true},
		{Name: "default_time_zone_string", Type: field.TypeString, Nullable: true, Size: 32},
		{Name: "allow_password", Type: field.TypeEnum, Nullable: true, Enums: []string{"Yes", "No", "Unknown"}},
		{Name: "default_password", Type: field.TypeString, Nullable: true},
		{Name: "explode_order_items", Type: field.TypeEnum, Nullable: true, Enums: []string{"Yes", "No", "Unknown"}},
		{Name: "check_gc_balance", Type: field.TypeEnum, Nullable: true, Enums: []string{"Yes", "No", "Unknown"}},
		{Name: "retry_failed_auths", Type: field.TypeEnum, Nullable: true, Enums: []string{"Yes", "No", "Unknown"}},
		{Name: "auth_declined_message", Type: field.TypeString, Nullable: true},
		{Name: "auth_fraud_message", Type: field.TypeString, Nullable: true},
		{Name: "auth_error_message", Type: field.TypeString, Nullable: true},
		{Name: "visual_theme_id", Type: field.TypeInt, Nullable: true},
		{Name: "use_primary_email_username", Type: field.TypeEnum, Nullable: true, Enums: []string{"Yes", "No", "Unknown"}},
		{Name: "require_customer_role", Type: field.TypeEnum, Nullable: true, Enums: []string{"Yes", "No", "Unknown"}},
		{Name: "auto_invoice_digital_items", Type: field.TypeEnum, Nullable: true, Enums: []string{"Yes", "No", "Unknown"}},
		{Name: "req_ship_addr_for_dig_items", Type: field.TypeEnum, Nullable: true, Enums: []string{"Yes", "No", "Unknown"}},
		{Name: "show_checkout_gift_options", Type: field.TypeEnum, Nullable: true, Enums: []string{"Yes", "No", "Unknown"}},
		{Name: "select_payment_type_per_item", Type: field.TypeEnum, Nullable: true, Enums: []string{"Yes", "No", "Unknown"}},
		{Name: "show_prices_with_vat_tax", Type: field.TypeEnum, Nullable: true, Enums: []string{"Yes", "No", "Unknown"}},
		{Name: "show_tax_is_exempt", Type: field.TypeEnum, Nullable: true, Enums: []string{"Yes", "No", "Unknown"}},
		{Name: "vat_tax_auth_geo_id", Type: field.TypeInt, Nullable: true},
		{Name: "vat_tax_auth_party_id", Type: field.TypeInt, Nullable: true},
		{Name: "enable_auto_suggestion_list", Type: field.TypeEnum, Nullable: true, Enums: []string{"Yes", "No", "Unknown"}},
		{Name: "enable_dig_prod_upload", Type: field.TypeEnum, Nullable: true, Enums: []string{"Yes", "No", "Unknown"}},
		{Name: "prod_search_exclude_variants", Type: field.TypeEnum, Nullable: true, Enums: []string{"Yes", "No", "Unknown"}},
		{Name: "dig_prod_upload_category_id", Type: field.TypeInt, Nullable: true},
		{Name: "auto_order_cc_try_exp", Type: field.TypeEnum, Nullable: true, Enums: []string{"Yes", "No", "Unknown"}},
		{Name: "auto_order_cc_try_other_cards", Type: field.TypeEnum, Nullable: true, Enums: []string{"Yes", "No", "Unknown"}},
		{Name: "auto_order_cc_try_later_nsf", Type: field.TypeEnum, Nullable: true, Enums: []string{"Yes", "No", "Unknown"}},
		{Name: "auto_order_cc_try_later_max", Type: field.TypeInt, Nullable: true},
		{Name: "store_credit_valid_days", Type: field.TypeInt, Nullable: true},
		{Name: "auto_approve_invoice", Type: field.TypeEnum, Nullable: true, Enums: []string{"Yes", "No", "Unknown"}},
		{Name: "auto_approve_order", Type: field.TypeEnum, Nullable: true, Enums: []string{"Yes", "No", "Unknown"}},
		{Name: "ship_if_capture_fails", Type: field.TypeEnum, Nullable: true, Enums: []string{"Yes", "No", "Unknown"}},
		{Name: "set_owner_upon_issuance", Type: field.TypeEnum, Nullable: true, Enums: []string{"Yes", "No", "Unknown"}},
		{Name: "req_return_inventory_receive", Type: field.TypeEnum, Nullable: true, Enums: []string{"Yes", "No", "Unknown"}},
		{Name: "add_to_cart_remove_incompat", Type: field.TypeEnum, Nullable: true, Enums: []string{"Yes", "No", "Unknown"}},
		{Name: "add_to_cart_replace_upsell", Type: field.TypeEnum, Nullable: true, Enums: []string{"Yes", "No", "Unknown"}},
		{Name: "split_pay_pref_per_shp_grp", Type: field.TypeEnum, Nullable: true, Enums: []string{"Yes", "No", "Unknown"}},
		{Name: "managed_by_lot", Type: field.TypeEnum, Nullable: true, Enums: []string{"Yes", "No", "Unknown"}},
		{Name: "show_out_of_stock_products", Type: field.TypeEnum, Nullable: true, Enums: []string{"Yes", "No", "Unknown"}},
		{Name: "order_decimal_quantity", Type: field.TypeEnum, Nullable: true, Enums: []string{"Yes", "No", "Unknown"}},
		{Name: "allow_comment", Type: field.TypeEnum, Nullable: true, Enums: []string{"Yes", "No", "Unknown"}},
		{Name: "allocate_inventory", Type: field.TypeEnum, Nullable: true, Enums: []string{"Yes", "No", "Unknown"}},
		{Name: "enumeration_reserve_order_product_stores", Type: field.TypeInt, Nullable: true},
		{Name: "enumeration_requirement_method_product_stores", Type: field.TypeInt, Nullable: true},
		{Name: "enumeration_default_sales_channel_product_stores", Type: field.TypeInt, Nullable: true},
		{Name: "enumeration_store_credit_account_product_stores", Type: field.TypeInt, Nullable: true},
		{Name: "product_store_group_primary_product_stores", Type: field.TypeInt, Nullable: true},
		{Name: "status_item_header_approved_product_stores", Type: field.TypeInt, Nullable: true},
		{Name: "status_item_item_approved_product_stores", Type: field.TypeInt, Nullable: true},
		{Name: "status_item_digital_item_approved_product_stores", Type: field.TypeInt, Nullable: true},
		{Name: "status_item_header_declined_product_stores", Type: field.TypeInt, Nullable: true},
		{Name: "status_item_item_declined_product_stores", Type: field.TypeInt, Nullable: true},
		{Name: "status_item_header_cancel_product_stores", Type: field.TypeInt, Nullable: true},
		{Name: "status_item_item_cancel_product_stores", Type: field.TypeInt, Nullable: true},
	}
	// ProductStoresTable holds the schema information for the "product_stores" table.
	ProductStoresTable = &schema.Table{
		Name:       "product_stores",
		Columns:    ProductStoresColumns,
		PrimaryKey: []*schema.Column{ProductStoresColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "product_stores_enumerations_reserve_order_product_stores",
				Columns:    []*schema.Column{ProductStoresColumns[69]},
				RefColumns: []*schema.Column{EnumerationsColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "product_stores_enumerations_requirement_method_product_stores",
				Columns:    []*schema.Column{ProductStoresColumns[70]},
				RefColumns: []*schema.Column{EnumerationsColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "product_stores_enumerations_default_sales_channel_product_stores",
				Columns:    []*schema.Column{ProductStoresColumns[71]},
				RefColumns: []*schema.Column{EnumerationsColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "product_stores_enumerations_store_credit_account_product_stores",
				Columns:    []*schema.Column{ProductStoresColumns[72]},
				RefColumns: []*schema.Column{EnumerationsColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "product_stores_product_store_groups_primary_product_stores",
				Columns:    []*schema.Column{ProductStoresColumns[73]},
				RefColumns: []*schema.Column{ProductStoreGroupsColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "product_stores_status_items_header_approved_product_stores",
				Columns:    []*schema.Column{ProductStoresColumns[74]},
				RefColumns: []*schema.Column{StatusItemsColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "product_stores_status_items_item_approved_product_stores",
				Columns:    []*schema.Column{ProductStoresColumns[75]},
				RefColumns: []*schema.Column{StatusItemsColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "product_stores_status_items_digital_item_approved_product_stores",
				Columns:    []*schema.Column{ProductStoresColumns[76]},
				RefColumns: []*schema.Column{StatusItemsColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "product_stores_status_items_header_declined_product_stores",
				Columns:    []*schema.Column{ProductStoresColumns[77]},
				RefColumns: []*schema.Column{StatusItemsColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "product_stores_status_items_item_declined_product_stores",
				Columns:    []*schema.Column{ProductStoresColumns[78]},
				RefColumns: []*schema.Column{StatusItemsColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "product_stores_status_items_header_cancel_product_stores",
				Columns:    []*schema.Column{ProductStoresColumns[79]},
				RefColumns: []*schema.Column{StatusItemsColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "product_stores_status_items_item_cancel_product_stores",
				Columns:    []*schema.Column{ProductStoresColumns[80]},
				RefColumns: []*schema.Column{StatusItemsColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// ProductStoreGroupsColumns holds the columns for the "product_store_groups" table.
	ProductStoreGroupsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "create_time", Type: field.TypeTime},
		{Name: "update_time", Type: field.TypeTime},
		{Name: "string_ref", Type: field.TypeString, Nullable: true},
		{Name: "product_store_group_type_id", Type: field.TypeInt, Nullable: true},
		{Name: "product_store_group_name", Type: field.TypeString, Nullable: true},
		{Name: "description", Type: field.TypeString, Nullable: true},
		{Name: "product_store_group_children", Type: field.TypeInt, Nullable: true},
	}
	// ProductStoreGroupsTable holds the schema information for the "product_store_groups" table.
	ProductStoreGroupsTable = &schema.Table{
		Name:       "product_store_groups",
		Columns:    ProductStoreGroupsColumns,
		PrimaryKey: []*schema.Column{ProductStoreGroupsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "product_store_groups_product_store_groups_children",
				Columns:    []*schema.Column{ProductStoreGroupsColumns[7]},
				RefColumns: []*schema.Column{ProductStoreGroupsColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// ProductTypesColumns holds the columns for the "product_types" table.
	ProductTypesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "create_time", Type: field.TypeTime},
		{Name: "update_time", Type: field.TypeTime},
		{Name: "string_ref", Type: field.TypeString, Nullable: true},
		{Name: "is_physical", Type: field.TypeEnum, Nullable: true, Enums: []string{"Yes", "No", "Unknown"}},
		{Name: "is_digital", Type: field.TypeEnum, Nullable: true, Enums: []string{"Yes", "No", "Unknown"}},
		{Name: "has_table", Type: field.TypeEnum, Nullable: true, Enums: []string{"Yes", "No", "Unknown"}},
		{Name: "description", Type: field.TypeString, Nullable: true},
		{Name: "product_type_children", Type: field.TypeInt, Nullable: true},
	}
	// ProductTypesTable holds the schema information for the "product_types" table.
	ProductTypesTable = &schema.Table{
		Name:       "product_types",
		Columns:    ProductTypesColumns,
		PrimaryKey: []*schema.Column{ProductTypesColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "product_types_product_types_children",
				Columns:    []*schema.Column{ProductTypesColumns[8]},
				RefColumns: []*schema.Column{ProductTypesColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// QuantityBreakTypesColumns holds the columns for the "quantity_break_types" table.
	QuantityBreakTypesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "create_time", Type: field.TypeTime},
		{Name: "update_time", Type: field.TypeTime},
		{Name: "string_ref", Type: field.TypeString, Nullable: true},
		{Name: "description", Type: field.TypeString, Nullable: true},
	}
	// QuantityBreakTypesTable holds the schema information for the "quantity_break_types" table.
	QuantityBreakTypesTable = &schema.Table{
		Name:       "quantity_break_types",
		Columns:    QuantityBreakTypesColumns,
		PrimaryKey: []*schema.Column{QuantityBreakTypesColumns[0]},
	}
	// RejectionReasonsColumns holds the columns for the "rejection_reasons" table.
	RejectionReasonsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "create_time", Type: field.TypeTime},
		{Name: "update_time", Type: field.TypeTime},
		{Name: "string_ref", Type: field.TypeString, Nullable: true},
		{Name: "description", Type: field.TypeString, Nullable: true},
	}
	// RejectionReasonsTable holds the schema information for the "rejection_reasons" table.
	RejectionReasonsTable = &schema.Table{
		Name:       "rejection_reasons",
		Columns:    RejectionReasonsColumns,
		PrimaryKey: []*schema.Column{RejectionReasonsColumns[0]},
	}
	// RoleTypesColumns holds the columns for the "role_types" table.
	RoleTypesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "create_time", Type: field.TypeTime},
		{Name: "update_time", Type: field.TypeTime},
		{Name: "string_ref", Type: field.TypeString, Nullable: true},
		{Name: "has_table", Type: field.TypeEnum, Nullable: true, Enums: []string{"Yes", "No", "Unknown"}},
		{Name: "description", Type: field.TypeString, Nullable: true},
		{Name: "role_type_children", Type: field.TypeInt, Nullable: true},
	}
	// RoleTypesTable holds the schema information for the "role_types" table.
	RoleTypesTable = &schema.Table{
		Name:       "role_types",
		Columns:    RoleTypesColumns,
		PrimaryKey: []*schema.Column{RoleTypesColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "role_types_role_types_children",
				Columns:    []*schema.Column{RoleTypesColumns[6]},
				RefColumns: []*schema.Column{RoleTypesColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// ShipmentContactMechTypesColumns holds the columns for the "shipment_contact_mech_types" table.
	ShipmentContactMechTypesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "create_time", Type: field.TypeTime},
		{Name: "update_time", Type: field.TypeTime},
		{Name: "string_ref", Type: field.TypeString, Nullable: true},
		{Name: "description", Type: field.TypeString, Nullable: true},
	}
	// ShipmentContactMechTypesTable holds the schema information for the "shipment_contact_mech_types" table.
	ShipmentContactMechTypesTable = &schema.Table{
		Name:       "shipment_contact_mech_types",
		Columns:    ShipmentContactMechTypesColumns,
		PrimaryKey: []*schema.Column{ShipmentContactMechTypesColumns[0]},
	}
	// ShipmentGatewayConfigsColumns holds the columns for the "shipment_gateway_configs" table.
	ShipmentGatewayConfigsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "create_time", Type: field.TypeTime},
		{Name: "update_time", Type: field.TypeTime},
		{Name: "string_ref", Type: field.TypeString, Nullable: true},
		{Name: "description", Type: field.TypeString, Nullable: true},
		{Name: "shipment_gateway_config_type_shipment_gateway_configs", Type: field.TypeInt, Nullable: true},
	}
	// ShipmentGatewayConfigsTable holds the schema information for the "shipment_gateway_configs" table.
	ShipmentGatewayConfigsTable = &schema.Table{
		Name:       "shipment_gateway_configs",
		Columns:    ShipmentGatewayConfigsColumns,
		PrimaryKey: []*schema.Column{ShipmentGatewayConfigsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "shipment_gateway_configs_shipment_gateway_config_types_shipment_gateway_configs",
				Columns:    []*schema.Column{ShipmentGatewayConfigsColumns[5]},
				RefColumns: []*schema.Column{ShipmentGatewayConfigTypesColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// ShipmentGatewayConfigTypesColumns holds the columns for the "shipment_gateway_config_types" table.
	ShipmentGatewayConfigTypesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "create_time", Type: field.TypeTime},
		{Name: "update_time", Type: field.TypeTime},
		{Name: "string_ref", Type: field.TypeString, Nullable: true},
		{Name: "has_table", Type: field.TypeEnum, Nullable: true, Enums: []string{"Yes", "No", "Unknown"}},
		{Name: "description", Type: field.TypeString, Nullable: true},
		{Name: "shipment_gateway_config_type_children", Type: field.TypeInt, Nullable: true},
	}
	// ShipmentGatewayConfigTypesTable holds the schema information for the "shipment_gateway_config_types" table.
	ShipmentGatewayConfigTypesTable = &schema.Table{
		Name:       "shipment_gateway_config_types",
		Columns:    ShipmentGatewayConfigTypesColumns,
		PrimaryKey: []*schema.Column{ShipmentGatewayConfigTypesColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "shipment_gateway_config_types_shipment_gateway_config_types_children",
				Columns:    []*schema.Column{ShipmentGatewayConfigTypesColumns[6]},
				RefColumns: []*schema.Column{ShipmentGatewayConfigTypesColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// ShipmentGatewayDhlsColumns holds the columns for the "shipment_gateway_dhls" table.
	ShipmentGatewayDhlsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "create_time", Type: field.TypeTime},
		{Name: "update_time", Type: field.TypeTime},
		{Name: "string_ref", Type: field.TypeString, Nullable: true},
		{Name: "connect_url", Type: field.TypeString, Nullable: true},
		{Name: "connect_timeout", Type: field.TypeInt, Nullable: true},
		{Name: "head_version", Type: field.TypeString, Nullable: true},
		{Name: "head_action", Type: field.TypeString, Nullable: true},
		{Name: "access_user_id", Type: field.TypeString, Nullable: true},
		{Name: "access_password", Type: field.TypeString, Nullable: true},
		{Name: "access_account_nbr", Type: field.TypeString, Nullable: true},
		{Name: "access_shipping_key", Type: field.TypeString, Nullable: true},
		{Name: "label_image_format", Type: field.TypeString, Nullable: true},
		{Name: "rate_estimate_template", Type: field.TypeString, Nullable: true},
		{Name: "shipment_gateway_config_shipment_gateway_dhl", Type: field.TypeInt, Unique: true, Nullable: true},
	}
	// ShipmentGatewayDhlsTable holds the schema information for the "shipment_gateway_dhls" table.
	ShipmentGatewayDhlsTable = &schema.Table{
		Name:       "shipment_gateway_dhls",
		Columns:    ShipmentGatewayDhlsColumns,
		PrimaryKey: []*schema.Column{ShipmentGatewayDhlsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "shipment_gateway_dhls_shipment_gateway_configs_shipment_gateway_dhl",
				Columns:    []*schema.Column{ShipmentGatewayDhlsColumns[14]},
				RefColumns: []*schema.Column{ShipmentGatewayConfigsColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// ShipmentGatewayFedexesColumns holds the columns for the "shipment_gateway_fedexes" table.
	ShipmentGatewayFedexesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "create_time", Type: field.TypeTime},
		{Name: "update_time", Type: field.TypeTime},
		{Name: "string_ref", Type: field.TypeString, Nullable: true},
		{Name: "connect_url", Type: field.TypeString, Nullable: true},
		{Name: "connect_soap_url", Type: field.TypeString, Nullable: true},
		{Name: "connect_timeout", Type: field.TypeInt, Nullable: true},
		{Name: "access_account_nbr", Type: field.TypeString, Nullable: true},
		{Name: "access_meter_number", Type: field.TypeString, Nullable: true},
		{Name: "access_user_key", Type: field.TypeString, Nullable: true},
		{Name: "access_user_pwd", Type: field.TypeString, Nullable: true},
		{Name: "label_image_type", Type: field.TypeString, Nullable: true},
		{Name: "default_dropoff_type", Type: field.TypeString, Nullable: true},
		{Name: "default_packaging_type", Type: field.TypeString, Nullable: true},
		{Name: "template_shipment", Type: field.TypeString, Nullable: true},
		{Name: "template_subscription", Type: field.TypeString, Nullable: true},
		{Name: "rate_estimate_template", Type: field.TypeString, Nullable: true},
		{Name: "shipment_gateway_config_shipment_gateway_fedex", Type: field.TypeInt, Unique: true, Nullable: true},
	}
	// ShipmentGatewayFedexesTable holds the schema information for the "shipment_gateway_fedexes" table.
	ShipmentGatewayFedexesTable = &schema.Table{
		Name:       "shipment_gateway_fedexes",
		Columns:    ShipmentGatewayFedexesColumns,
		PrimaryKey: []*schema.Column{ShipmentGatewayFedexesColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "shipment_gateway_fedexes_shipment_gateway_configs_shipment_gateway_fedex",
				Columns:    []*schema.Column{ShipmentGatewayFedexesColumns[17]},
				RefColumns: []*schema.Column{ShipmentGatewayConfigsColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// ShipmentGatewayUpsColumns holds the columns for the "shipment_gateway_ups" table.
	ShipmentGatewayUpsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "create_time", Type: field.TypeTime},
		{Name: "update_time", Type: field.TypeTime},
		{Name: "string_ref", Type: field.TypeString, Nullable: true},
		{Name: "connect_url", Type: field.TypeString, Nullable: true},
		{Name: "connect_timeout", Type: field.TypeInt, Nullable: true},
		{Name: "shipper_number", Type: field.TypeString, Nullable: true},
		{Name: "bill_shipper_account_number", Type: field.TypeString, Nullable: true},
		{Name: "access_license_number", Type: field.TypeString, Nullable: true},
		{Name: "access_user_id", Type: field.TypeString, Nullable: true},
		{Name: "access_password", Type: field.TypeString, Nullable: true},
		{Name: "save_cert_info", Type: field.TypeString, Nullable: true},
		{Name: "save_cert_path", Type: field.TypeString, Nullable: true},
		{Name: "shipper_pickup_type", Type: field.TypeString, Nullable: true},
		{Name: "customer_classification", Type: field.TypeString, Nullable: true},
		{Name: "max_estimate_weight", Type: field.TypeFloat64, Nullable: true},
		{Name: "min_estimate_weight", Type: field.TypeFloat64, Nullable: true},
		{Name: "cod_allow_cod", Type: field.TypeString, Nullable: true},
		{Name: "cod_surcharge_amount", Type: field.TypeFloat64, Nullable: true},
		{Name: "cod_surcharge_currency_uom_id", Type: field.TypeString, Nullable: true},
		{Name: "cod_surcharge_apply_to_package", Type: field.TypeString, Nullable: true},
		{Name: "cod_funds_code", Type: field.TypeString, Nullable: true},
		{Name: "default_return_label_memo", Type: field.TypeString, Nullable: true},
		{Name: "default_return_label_subject", Type: field.TypeString, Nullable: true},
		{Name: "shipment_gateway_config_shipment_gateway_ups", Type: field.TypeInt, Unique: true, Nullable: true},
	}
	// ShipmentGatewayUpsTable holds the schema information for the "shipment_gateway_ups" table.
	ShipmentGatewayUpsTable = &schema.Table{
		Name:       "shipment_gateway_ups",
		Columns:    ShipmentGatewayUpsColumns,
		PrimaryKey: []*schema.Column{ShipmentGatewayUpsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "shipment_gateway_ups_shipment_gateway_configs_shipment_gateway_ups",
				Columns:    []*schema.Column{ShipmentGatewayUpsColumns[24]},
				RefColumns: []*schema.Column{ShipmentGatewayConfigsColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// ShipmentGatewayUspsColumns holds the columns for the "shipment_gateway_usps" table.
	ShipmentGatewayUspsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "create_time", Type: field.TypeTime},
		{Name: "update_time", Type: field.TypeTime},
		{Name: "string_ref", Type: field.TypeString, Nullable: true},
		{Name: "connect_url", Type: field.TypeString, Nullable: true},
		{Name: "connect_url_labels", Type: field.TypeString, Nullable: true},
		{Name: "connect_timeout", Type: field.TypeInt, Nullable: true},
		{Name: "access_user_id", Type: field.TypeString, Nullable: true},
		{Name: "access_password", Type: field.TypeString, Nullable: true},
		{Name: "max_estimate_weight", Type: field.TypeInt, Nullable: true},
		{Name: "test", Type: field.TypeString, Nullable: true},
		{Name: "shipment_gateway_config_shipment_gateway_usps", Type: field.TypeInt, Unique: true, Nullable: true},
	}
	// ShipmentGatewayUspsTable holds the schema information for the "shipment_gateway_usps" table.
	ShipmentGatewayUspsTable = &schema.Table{
		Name:       "shipment_gateway_usps",
		Columns:    ShipmentGatewayUspsColumns,
		PrimaryKey: []*schema.Column{ShipmentGatewayUspsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "shipment_gateway_usps_shipment_gateway_configs_shipment_gateway_usps",
				Columns:    []*schema.Column{ShipmentGatewayUspsColumns[11]},
				RefColumns: []*schema.Column{ShipmentGatewayConfigsColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// ShipmentTypesColumns holds the columns for the "shipment_types" table.
	ShipmentTypesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "create_time", Type: field.TypeTime},
		{Name: "update_time", Type: field.TypeTime},
		{Name: "string_ref", Type: field.TypeString, Nullable: true},
		{Name: "has_table", Type: field.TypeEnum, Nullable: true, Enums: []string{"Yes", "No", "Unknown"}},
		{Name: "description", Type: field.TypeString, Nullable: true},
		{Name: "shipment_type_children", Type: field.TypeInt, Nullable: true},
	}
	// ShipmentTypesTable holds the schema information for the "shipment_types" table.
	ShipmentTypesTable = &schema.Table{
		Name:       "shipment_types",
		Columns:    ShipmentTypesColumns,
		PrimaryKey: []*schema.Column{ShipmentTypesColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "shipment_types_shipment_types_children",
				Columns:    []*schema.Column{ShipmentTypesColumns[6]},
				RefColumns: []*schema.Column{ShipmentTypesColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// StatusItemsColumns holds the columns for the "status_items" table.
	StatusItemsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "create_time", Type: field.TypeTime},
		{Name: "update_time", Type: field.TypeTime},
		{Name: "string_ref", Type: field.TypeString, Nullable: true},
		{Name: "status_code", Type: field.TypeString, Nullable: true},
		{Name: "sequence_id", Type: field.TypeInt, Nullable: true},
		{Name: "description", Type: field.TypeString, Nullable: true},
		{Name: "status_type_status_items", Type: field.TypeInt, Nullable: true},
	}
	// StatusItemsTable holds the schema information for the "status_items" table.
	StatusItemsTable = &schema.Table{
		Name:       "status_items",
		Columns:    StatusItemsColumns,
		PrimaryKey: []*schema.Column{StatusItemsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "status_items_status_types_status_items",
				Columns:    []*schema.Column{StatusItemsColumns[7]},
				RefColumns: []*schema.Column{StatusTypesColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// StatusTypesColumns holds the columns for the "status_types" table.
	StatusTypesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "create_time", Type: field.TypeTime},
		{Name: "update_time", Type: field.TypeTime},
		{Name: "string_ref", Type: field.TypeString, Nullable: true},
		{Name: "has_table", Type: field.TypeEnum, Nullable: true, Enums: []string{"Yes", "No", "Unknown"}},
		{Name: "description", Type: field.TypeString, Nullable: true},
		{Name: "status_type_children", Type: field.TypeInt, Nullable: true},
	}
	// StatusTypesTable holds the schema information for the "status_types" table.
	StatusTypesTable = &schema.Table{
		Name:       "status_types",
		Columns:    StatusTypesColumns,
		PrimaryKey: []*schema.Column{StatusTypesColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "status_types_status_types_children",
				Columns:    []*schema.Column{StatusTypesColumns[6]},
				RefColumns: []*schema.Column{StatusTypesColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// StatusValidChangesColumns holds the columns for the "status_valid_changes" table.
	StatusValidChangesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "create_time", Type: field.TypeTime},
		{Name: "update_time", Type: field.TypeTime},
		{Name: "string_ref", Type: field.TypeString, Nullable: true},
		{Name: "condition_expression", Type: field.TypeString, Nullable: true},
		{Name: "transition_name", Type: field.TypeString, Nullable: true},
		{Name: "order_item_status_valid_changes", Type: field.TypeInt, Nullable: true},
		{Name: "status_item_main_status_valid_changes", Type: field.TypeInt, Nullable: true},
		{Name: "status_item_to_status_valid_changes", Type: field.TypeInt, Nullable: true},
	}
	// StatusValidChangesTable holds the schema information for the "status_valid_changes" table.
	StatusValidChangesTable = &schema.Table{
		Name:       "status_valid_changes",
		Columns:    StatusValidChangesColumns,
		PrimaryKey: []*schema.Column{StatusValidChangesColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "status_valid_changes_order_items_status_valid_changes",
				Columns:    []*schema.Column{StatusValidChangesColumns[6]},
				RefColumns: []*schema.Column{OrderItemsColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "status_valid_changes_status_items_main_status_valid_changes",
				Columns:    []*schema.Column{StatusValidChangesColumns[7]},
				RefColumns: []*schema.Column{StatusItemsColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "status_valid_changes_status_items_to_status_valid_changes",
				Columns:    []*schema.Column{StatusValidChangesColumns[8]},
				RefColumns: []*schema.Column{StatusItemsColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// SubscriptionTypesColumns holds the columns for the "subscription_types" table.
	SubscriptionTypesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "create_time", Type: field.TypeTime},
		{Name: "update_time", Type: field.TypeTime},
		{Name: "string_ref", Type: field.TypeString, Nullable: true},
		{Name: "has_table", Type: field.TypeEnum, Nullable: true, Enums: []string{"Yes", "No", "Unknown"}},
		{Name: "description", Type: field.TypeString, Nullable: true},
		{Name: "subscription_type_children", Type: field.TypeInt, Nullable: true},
	}
	// SubscriptionTypesTable holds the schema information for the "subscription_types" table.
	SubscriptionTypesTable = &schema.Table{
		Name:       "subscription_types",
		Columns:    SubscriptionTypesColumns,
		PrimaryKey: []*schema.Column{SubscriptionTypesColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "subscription_types_subscription_types_children",
				Columns:    []*schema.Column{SubscriptionTypesColumns[6]},
				RefColumns: []*schema.Column{SubscriptionTypesColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// SupplierPrefOrdersColumns holds the columns for the "supplier_pref_orders" table.
	SupplierPrefOrdersColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "create_time", Type: field.TypeTime},
		{Name: "update_time", Type: field.TypeTime},
		{Name: "string_ref", Type: field.TypeString, Nullable: true},
		{Name: "description", Type: field.TypeString, Nullable: true},
	}
	// SupplierPrefOrdersTable holds the schema information for the "supplier_pref_orders" table.
	SupplierPrefOrdersTable = &schema.Table{
		Name:       "supplier_pref_orders",
		Columns:    SupplierPrefOrdersColumns,
		PrimaryKey: []*schema.Column{SupplierPrefOrdersColumns[0]},
	}
	// VarianceReasonsColumns holds the columns for the "variance_reasons" table.
	VarianceReasonsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "create_time", Type: field.TypeTime},
		{Name: "update_time", Type: field.TypeTime},
		{Name: "string_ref", Type: field.TypeString, Nullable: true},
		{Name: "description", Type: field.TypeString, Nullable: true},
	}
	// VarianceReasonsTable holds the schema information for the "variance_reasons" table.
	VarianceReasonsTable = &schema.Table{
		Name:       "variance_reasons",
		Columns:    VarianceReasonsColumns,
		PrimaryKey: []*schema.Column{VarianceReasonsColumns[0]},
	}
	// ContentTypeChildContentTypesColumns holds the columns for the "content_type_child_content_types" table.
	ContentTypeChildContentTypesColumns = []*schema.Column{
		{Name: "content_type_id", Type: field.TypeInt},
		{Name: "child_content_type_id", Type: field.TypeInt},
	}
	// ContentTypeChildContentTypesTable holds the schema information for the "content_type_child_content_types" table.
	ContentTypeChildContentTypesTable = &schema.Table{
		Name:       "content_type_child_content_types",
		Columns:    ContentTypeChildContentTypesColumns,
		PrimaryKey: []*schema.Column{ContentTypeChildContentTypesColumns[0], ContentTypeChildContentTypesColumns[1]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "content_type_child_content_types_content_type_id",
				Columns:    []*schema.Column{ContentTypeChildContentTypesColumns[0]},
				RefColumns: []*schema.Column{ContentTypesColumns[0]},
				OnDelete:   schema.Cascade,
			},
			{
				Symbol:     "content_type_child_content_types_child_content_type_id",
				Columns:    []*schema.Column{ContentTypeChildContentTypesColumns[1]},
				RefColumns: []*schema.Column{ContentTypesColumns[0]},
				OnDelete:   schema.Cascade,
			},
		},
	}
	// CostComponentTypeChildCostComponentTypesColumns holds the columns for the "cost_component_type_child_cost_component_types" table.
	CostComponentTypeChildCostComponentTypesColumns = []*schema.Column{
		{Name: "cost_component_type_id", Type: field.TypeInt},
		{Name: "child_cost_component_type_id", Type: field.TypeInt},
	}
	// CostComponentTypeChildCostComponentTypesTable holds the schema information for the "cost_component_type_child_cost_component_types" table.
	CostComponentTypeChildCostComponentTypesTable = &schema.Table{
		Name:       "cost_component_type_child_cost_component_types",
		Columns:    CostComponentTypeChildCostComponentTypesColumns,
		PrimaryKey: []*schema.Column{CostComponentTypeChildCostComponentTypesColumns[0], CostComponentTypeChildCostComponentTypesColumns[1]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "cost_component_type_child_cost_component_types_cost_component_type_id",
				Columns:    []*schema.Column{CostComponentTypeChildCostComponentTypesColumns[0]},
				RefColumns: []*schema.Column{CostComponentTypesColumns[0]},
				OnDelete:   schema.Cascade,
			},
			{
				Symbol:     "cost_component_type_child_cost_component_types_child_cost_component_type_id",
				Columns:    []*schema.Column{CostComponentTypeChildCostComponentTypesColumns[1]},
				RefColumns: []*schema.Column{CostComponentTypesColumns[0]},
				OnDelete:   schema.Cascade,
			},
		},
	}
	// CustomMethodTypeChildCustomMethodTypesColumns holds the columns for the "custom_method_type_child_custom_method_types" table.
	CustomMethodTypeChildCustomMethodTypesColumns = []*schema.Column{
		{Name: "custom_method_type_id", Type: field.TypeInt},
		{Name: "child_custom_method_type_id", Type: field.TypeInt},
	}
	// CustomMethodTypeChildCustomMethodTypesTable holds the schema information for the "custom_method_type_child_custom_method_types" table.
	CustomMethodTypeChildCustomMethodTypesTable = &schema.Table{
		Name:       "custom_method_type_child_custom_method_types",
		Columns:    CustomMethodTypeChildCustomMethodTypesColumns,
		PrimaryKey: []*schema.Column{CustomMethodTypeChildCustomMethodTypesColumns[0], CustomMethodTypeChildCustomMethodTypesColumns[1]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "custom_method_type_child_custom_method_types_custom_method_type_id",
				Columns:    []*schema.Column{CustomMethodTypeChildCustomMethodTypesColumns[0]},
				RefColumns: []*schema.Column{CustomMethodTypesColumns[0]},
				OnDelete:   schema.Cascade,
			},
			{
				Symbol:     "custom_method_type_child_custom_method_types_child_custom_method_type_id",
				Columns:    []*schema.Column{CustomMethodTypeChildCustomMethodTypesColumns[1]},
				RefColumns: []*schema.Column{CustomMethodTypesColumns[0]},
				OnDelete:   schema.Cascade,
			},
		},
	}
	// EnumerationTypeChildEnumerationTypesColumns holds the columns for the "enumeration_type_child_enumeration_types" table.
	EnumerationTypeChildEnumerationTypesColumns = []*schema.Column{
		{Name: "enumeration_type_id", Type: field.TypeInt},
		{Name: "child_enumeration_type_id", Type: field.TypeInt},
	}
	// EnumerationTypeChildEnumerationTypesTable holds the schema information for the "enumeration_type_child_enumeration_types" table.
	EnumerationTypeChildEnumerationTypesTable = &schema.Table{
		Name:       "enumeration_type_child_enumeration_types",
		Columns:    EnumerationTypeChildEnumerationTypesColumns,
		PrimaryKey: []*schema.Column{EnumerationTypeChildEnumerationTypesColumns[0], EnumerationTypeChildEnumerationTypesColumns[1]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "enumeration_type_child_enumeration_types_enumeration_type_id",
				Columns:    []*schema.Column{EnumerationTypeChildEnumerationTypesColumns[0]},
				RefColumns: []*schema.Column{EnumerationTypesColumns[0]},
				OnDelete:   schema.Cascade,
			},
			{
				Symbol:     "enumeration_type_child_enumeration_types_child_enumeration_type_id",
				Columns:    []*schema.Column{EnumerationTypeChildEnumerationTypesColumns[1]},
				RefColumns: []*schema.Column{EnumerationTypesColumns[0]},
				OnDelete:   schema.Cascade,
			},
		},
	}
	// FacilityTypeChildFacilityTypesColumns holds the columns for the "facility_type_child_facility_types" table.
	FacilityTypeChildFacilityTypesColumns = []*schema.Column{
		{Name: "facility_type_id", Type: field.TypeInt},
		{Name: "child_facility_type_id", Type: field.TypeInt},
	}
	// FacilityTypeChildFacilityTypesTable holds the schema information for the "facility_type_child_facility_types" table.
	FacilityTypeChildFacilityTypesTable = &schema.Table{
		Name:       "facility_type_child_facility_types",
		Columns:    FacilityTypeChildFacilityTypesColumns,
		PrimaryKey: []*schema.Column{FacilityTypeChildFacilityTypesColumns[0], FacilityTypeChildFacilityTypesColumns[1]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "facility_type_child_facility_types_facility_type_id",
				Columns:    []*schema.Column{FacilityTypeChildFacilityTypesColumns[0]},
				RefColumns: []*schema.Column{FacilityTypesColumns[0]},
				OnDelete:   schema.Cascade,
			},
			{
				Symbol:     "facility_type_child_facility_types_child_facility_type_id",
				Columns:    []*schema.Column{FacilityTypeChildFacilityTypesColumns[1]},
				RefColumns: []*schema.Column{FacilityTypesColumns[0]},
				OnDelete:   schema.Cascade,
			},
		},
	}
	// GoodIdentificationTypeChildGoodIdentificationTypesColumns holds the columns for the "good_identification_type_child_good_identification_types" table.
	GoodIdentificationTypeChildGoodIdentificationTypesColumns = []*schema.Column{
		{Name: "good_identification_type_id", Type: field.TypeInt},
		{Name: "child_good_identification_type_id", Type: field.TypeInt},
	}
	// GoodIdentificationTypeChildGoodIdentificationTypesTable holds the schema information for the "good_identification_type_child_good_identification_types" table.
	GoodIdentificationTypeChildGoodIdentificationTypesTable = &schema.Table{
		Name:       "good_identification_type_child_good_identification_types",
		Columns:    GoodIdentificationTypeChildGoodIdentificationTypesColumns,
		PrimaryKey: []*schema.Column{GoodIdentificationTypeChildGoodIdentificationTypesColumns[0], GoodIdentificationTypeChildGoodIdentificationTypesColumns[1]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "good_identification_type_child_good_identification_types_good_identification_type_id",
				Columns:    []*schema.Column{GoodIdentificationTypeChildGoodIdentificationTypesColumns[0]},
				RefColumns: []*schema.Column{GoodIdentificationTypesColumns[0]},
				OnDelete:   schema.Cascade,
			},
			{
				Symbol:     "good_identification_type_child_good_identification_types_child_good_identification_type_id",
				Columns:    []*schema.Column{GoodIdentificationTypeChildGoodIdentificationTypesColumns[1]},
				RefColumns: []*schema.Column{GoodIdentificationTypesColumns[0]},
				OnDelete:   schema.Cascade,
			},
		},
	}
	// InventoryItemTypeChildInventoryItemTypesColumns holds the columns for the "inventory_item_type_child_inventory_item_types" table.
	InventoryItemTypeChildInventoryItemTypesColumns = []*schema.Column{
		{Name: "inventory_item_type_id", Type: field.TypeInt},
		{Name: "child_inventory_item_type_id", Type: field.TypeInt},
	}
	// InventoryItemTypeChildInventoryItemTypesTable holds the schema information for the "inventory_item_type_child_inventory_item_types" table.
	InventoryItemTypeChildInventoryItemTypesTable = &schema.Table{
		Name:       "inventory_item_type_child_inventory_item_types",
		Columns:    InventoryItemTypeChildInventoryItemTypesColumns,
		PrimaryKey: []*schema.Column{InventoryItemTypeChildInventoryItemTypesColumns[0], InventoryItemTypeChildInventoryItemTypesColumns[1]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "inventory_item_type_child_inventory_item_types_inventory_item_type_id",
				Columns:    []*schema.Column{InventoryItemTypeChildInventoryItemTypesColumns[0]},
				RefColumns: []*schema.Column{InventoryItemTypesColumns[0]},
				OnDelete:   schema.Cascade,
			},
			{
				Symbol:     "inventory_item_type_child_inventory_item_types_child_inventory_item_type_id",
				Columns:    []*schema.Column{InventoryItemTypeChildInventoryItemTypesColumns[1]},
				RefColumns: []*schema.Column{InventoryItemTypesColumns[0]},
				OnDelete:   schema.Cascade,
			},
		},
	}
	// ProdCatalogCategoryTypeChildProdCatalogCategoryTypesColumns holds the columns for the "prod_catalog_category_type_child_prod_catalog_category_types" table.
	ProdCatalogCategoryTypeChildProdCatalogCategoryTypesColumns = []*schema.Column{
		{Name: "prod_catalog_category_type_id", Type: field.TypeInt},
		{Name: "child_prod_catalog_category_type_id", Type: field.TypeInt},
	}
	// ProdCatalogCategoryTypeChildProdCatalogCategoryTypesTable holds the schema information for the "prod_catalog_category_type_child_prod_catalog_category_types" table.
	ProdCatalogCategoryTypeChildProdCatalogCategoryTypesTable = &schema.Table{
		Name:       "prod_catalog_category_type_child_prod_catalog_category_types",
		Columns:    ProdCatalogCategoryTypeChildProdCatalogCategoryTypesColumns,
		PrimaryKey: []*schema.Column{ProdCatalogCategoryTypeChildProdCatalogCategoryTypesColumns[0], ProdCatalogCategoryTypeChildProdCatalogCategoryTypesColumns[1]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "prod_catalog_category_type_child_prod_catalog_category_types_prod_catalog_category_type_id",
				Columns:    []*schema.Column{ProdCatalogCategoryTypeChildProdCatalogCategoryTypesColumns[0]},
				RefColumns: []*schema.Column{ProdCatalogCategoryTypesColumns[0]},
				OnDelete:   schema.Cascade,
			},
			{
				Symbol:     "prod_catalog_category_type_child_prod_catalog_category_types_child_prod_catalog_category_type_id",
				Columns:    []*schema.Column{ProdCatalogCategoryTypeChildProdCatalogCategoryTypesColumns[1]},
				RefColumns: []*schema.Column{ProdCatalogCategoryTypesColumns[0]},
				OnDelete:   schema.Cascade,
			},
		},
	}
	// ProdConfItemContentTypeChildProdConfItemContentTypesColumns holds the columns for the "prod_conf_item_content_type_child_prod_conf_item_content_types" table.
	ProdConfItemContentTypeChildProdConfItemContentTypesColumns = []*schema.Column{
		{Name: "prod_conf_item_content_type_id", Type: field.TypeInt},
		{Name: "child_prod_conf_item_content_type_id", Type: field.TypeInt},
	}
	// ProdConfItemContentTypeChildProdConfItemContentTypesTable holds the schema information for the "prod_conf_item_content_type_child_prod_conf_item_content_types" table.
	ProdConfItemContentTypeChildProdConfItemContentTypesTable = &schema.Table{
		Name:       "prod_conf_item_content_type_child_prod_conf_item_content_types",
		Columns:    ProdConfItemContentTypeChildProdConfItemContentTypesColumns,
		PrimaryKey: []*schema.Column{ProdConfItemContentTypeChildProdConfItemContentTypesColumns[0], ProdConfItemContentTypeChildProdConfItemContentTypesColumns[1]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "prod_conf_item_content_type_child_prod_conf_item_content_types_prod_conf_item_content_type_id",
				Columns:    []*schema.Column{ProdConfItemContentTypeChildProdConfItemContentTypesColumns[0]},
				RefColumns: []*schema.Column{ProdConfItemContentTypesColumns[0]},
				OnDelete:   schema.Cascade,
			},
			{
				Symbol:     "prod_conf_item_content_type_child_prod_conf_item_content_types_child_prod_conf_item_content_type_id",
				Columns:    []*schema.Column{ProdConfItemContentTypeChildProdConfItemContentTypesColumns[1]},
				RefColumns: []*schema.Column{ProdConfItemContentTypesColumns[0]},
				OnDelete:   schema.Cascade,
			},
		},
	}
	// ProductAssocTypeChildProductAssocTypesColumns holds the columns for the "product_assoc_type_child_product_assoc_types" table.
	ProductAssocTypeChildProductAssocTypesColumns = []*schema.Column{
		{Name: "product_assoc_type_id", Type: field.TypeInt},
		{Name: "child_product_assoc_type_id", Type: field.TypeInt},
	}
	// ProductAssocTypeChildProductAssocTypesTable holds the schema information for the "product_assoc_type_child_product_assoc_types" table.
	ProductAssocTypeChildProductAssocTypesTable = &schema.Table{
		Name:       "product_assoc_type_child_product_assoc_types",
		Columns:    ProductAssocTypeChildProductAssocTypesColumns,
		PrimaryKey: []*schema.Column{ProductAssocTypeChildProductAssocTypesColumns[0], ProductAssocTypeChildProductAssocTypesColumns[1]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "product_assoc_type_child_product_assoc_types_product_assoc_type_id",
				Columns:    []*schema.Column{ProductAssocTypeChildProductAssocTypesColumns[0]},
				RefColumns: []*schema.Column{ProductAssocTypesColumns[0]},
				OnDelete:   schema.Cascade,
			},
			{
				Symbol:     "product_assoc_type_child_product_assoc_types_child_product_assoc_type_id",
				Columns:    []*schema.Column{ProductAssocTypeChildProductAssocTypesColumns[1]},
				RefColumns: []*schema.Column{ProductAssocTypesColumns[0]},
				OnDelete:   schema.Cascade,
			},
		},
	}
	// ProductCategoryPrimaryChildProductCategoriesColumns holds the columns for the "product_category_primary_child_product_categories" table.
	ProductCategoryPrimaryChildProductCategoriesColumns = []*schema.Column{
		{Name: "product_category_id", Type: field.TypeInt},
		{Name: "primary_child_product_category_id", Type: field.TypeInt},
	}
	// ProductCategoryPrimaryChildProductCategoriesTable holds the schema information for the "product_category_primary_child_product_categories" table.
	ProductCategoryPrimaryChildProductCategoriesTable = &schema.Table{
		Name:       "product_category_primary_child_product_categories",
		Columns:    ProductCategoryPrimaryChildProductCategoriesColumns,
		PrimaryKey: []*schema.Column{ProductCategoryPrimaryChildProductCategoriesColumns[0], ProductCategoryPrimaryChildProductCategoriesColumns[1]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "product_category_primary_child_product_categories_product_category_id",
				Columns:    []*schema.Column{ProductCategoryPrimaryChildProductCategoriesColumns[0]},
				RefColumns: []*schema.Column{ProductCategoriesColumns[0]},
				OnDelete:   schema.Cascade,
			},
			{
				Symbol:     "product_category_primary_child_product_categories_primary_child_product_category_id",
				Columns:    []*schema.Column{ProductCategoryPrimaryChildProductCategoriesColumns[1]},
				RefColumns: []*schema.Column{ProductCategoriesColumns[0]},
				OnDelete:   schema.Cascade,
			},
		},
	}
	// ProductCategoryContentTypeChildProductCategoryContentTypesColumns holds the columns for the "product_category_content_type_child_product_category_content_types" table.
	ProductCategoryContentTypeChildProductCategoryContentTypesColumns = []*schema.Column{
		{Name: "product_category_content_type_id", Type: field.TypeInt},
		{Name: "child_product_category_content_type_id", Type: field.TypeInt},
	}
	// ProductCategoryContentTypeChildProductCategoryContentTypesTable holds the schema information for the "product_category_content_type_child_product_category_content_types" table.
	ProductCategoryContentTypeChildProductCategoryContentTypesTable = &schema.Table{
		Name:       "product_category_content_type_child_product_category_content_types",
		Columns:    ProductCategoryContentTypeChildProductCategoryContentTypesColumns,
		PrimaryKey: []*schema.Column{ProductCategoryContentTypeChildProductCategoryContentTypesColumns[0], ProductCategoryContentTypeChildProductCategoryContentTypesColumns[1]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "product_category_content_type_child_product_category_content_types_product_category_content_type_id",
				Columns:    []*schema.Column{ProductCategoryContentTypeChildProductCategoryContentTypesColumns[0]},
				RefColumns: []*schema.Column{ProductCategoryContentTypesColumns[0]},
				OnDelete:   schema.Cascade,
			},
			{
				Symbol:     "product_category_content_type_child_product_category_content_types_child_product_category_content_type_id",
				Columns:    []*schema.Column{ProductCategoryContentTypeChildProductCategoryContentTypesColumns[1]},
				RefColumns: []*schema.Column{ProductCategoryContentTypesColumns[0]},
				OnDelete:   schema.Cascade,
			},
		},
	}
	// ProductCategoryTypeChildProductCategoryTypesColumns holds the columns for the "product_category_type_child_product_category_types" table.
	ProductCategoryTypeChildProductCategoryTypesColumns = []*schema.Column{
		{Name: "product_category_type_id", Type: field.TypeInt},
		{Name: "child_product_category_type_id", Type: field.TypeInt},
	}
	// ProductCategoryTypeChildProductCategoryTypesTable holds the schema information for the "product_category_type_child_product_category_types" table.
	ProductCategoryTypeChildProductCategoryTypesTable = &schema.Table{
		Name:       "product_category_type_child_product_category_types",
		Columns:    ProductCategoryTypeChildProductCategoryTypesColumns,
		PrimaryKey: []*schema.Column{ProductCategoryTypeChildProductCategoryTypesColumns[0], ProductCategoryTypeChildProductCategoryTypesColumns[1]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "product_category_type_child_product_category_types_product_category_type_id",
				Columns:    []*schema.Column{ProductCategoryTypeChildProductCategoryTypesColumns[0]},
				RefColumns: []*schema.Column{ProductCategoryTypesColumns[0]},
				OnDelete:   schema.Cascade,
			},
			{
				Symbol:     "product_category_type_child_product_category_types_child_product_category_type_id",
				Columns:    []*schema.Column{ProductCategoryTypeChildProductCategoryTypesColumns[1]},
				RefColumns: []*schema.Column{ProductCategoryTypesColumns[0]},
				OnDelete:   schema.Cascade,
			},
		},
	}
	// ProductContentTypeChildProductContentTypesColumns holds the columns for the "product_content_type_child_product_content_types" table.
	ProductContentTypeChildProductContentTypesColumns = []*schema.Column{
		{Name: "product_content_type_id", Type: field.TypeInt},
		{Name: "child_product_content_type_id", Type: field.TypeInt},
	}
	// ProductContentTypeChildProductContentTypesTable holds the schema information for the "product_content_type_child_product_content_types" table.
	ProductContentTypeChildProductContentTypesTable = &schema.Table{
		Name:       "product_content_type_child_product_content_types",
		Columns:    ProductContentTypeChildProductContentTypesColumns,
		PrimaryKey: []*schema.Column{ProductContentTypeChildProductContentTypesColumns[0], ProductContentTypeChildProductContentTypesColumns[1]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "product_content_type_child_product_content_types_product_content_type_id",
				Columns:    []*schema.Column{ProductContentTypeChildProductContentTypesColumns[0]},
				RefColumns: []*schema.Column{ProductContentTypesColumns[0]},
				OnDelete:   schema.Cascade,
			},
			{
				Symbol:     "product_content_type_child_product_content_types_child_product_content_type_id",
				Columns:    []*schema.Column{ProductContentTypeChildProductContentTypesColumns[1]},
				RefColumns: []*schema.Column{ProductContentTypesColumns[0]},
				OnDelete:   schema.Cascade,
			},
		},
	}
	// ProductFeatureApplTypeChildProductFeatureApplTypesColumns holds the columns for the "product_feature_appl_type_child_product_feature_appl_types" table.
	ProductFeatureApplTypeChildProductFeatureApplTypesColumns = []*schema.Column{
		{Name: "product_feature_appl_type_id", Type: field.TypeInt},
		{Name: "child_product_feature_appl_type_id", Type: field.TypeInt},
	}
	// ProductFeatureApplTypeChildProductFeatureApplTypesTable holds the schema information for the "product_feature_appl_type_child_product_feature_appl_types" table.
	ProductFeatureApplTypeChildProductFeatureApplTypesTable = &schema.Table{
		Name:       "product_feature_appl_type_child_product_feature_appl_types",
		Columns:    ProductFeatureApplTypeChildProductFeatureApplTypesColumns,
		PrimaryKey: []*schema.Column{ProductFeatureApplTypeChildProductFeatureApplTypesColumns[0], ProductFeatureApplTypeChildProductFeatureApplTypesColumns[1]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "product_feature_appl_type_child_product_feature_appl_types_product_feature_appl_type_id",
				Columns:    []*schema.Column{ProductFeatureApplTypeChildProductFeatureApplTypesColumns[0]},
				RefColumns: []*schema.Column{ProductFeatureApplTypesColumns[0]},
				OnDelete:   schema.Cascade,
			},
			{
				Symbol:     "product_feature_appl_type_child_product_feature_appl_types_child_product_feature_appl_type_id",
				Columns:    []*schema.Column{ProductFeatureApplTypeChildProductFeatureApplTypesColumns[1]},
				RefColumns: []*schema.Column{ProductFeatureApplTypesColumns[0]},
				OnDelete:   schema.Cascade,
			},
		},
	}
	// ProductFeatureCategoryChildProductFeatureCategoriesColumns holds the columns for the "product_feature_category_child_product_feature_categories" table.
	ProductFeatureCategoryChildProductFeatureCategoriesColumns = []*schema.Column{
		{Name: "product_feature_category_id", Type: field.TypeInt},
		{Name: "child_product_feature_category_id", Type: field.TypeInt},
	}
	// ProductFeatureCategoryChildProductFeatureCategoriesTable holds the schema information for the "product_feature_category_child_product_feature_categories" table.
	ProductFeatureCategoryChildProductFeatureCategoriesTable = &schema.Table{
		Name:       "product_feature_category_child_product_feature_categories",
		Columns:    ProductFeatureCategoryChildProductFeatureCategoriesColumns,
		PrimaryKey: []*schema.Column{ProductFeatureCategoryChildProductFeatureCategoriesColumns[0], ProductFeatureCategoryChildProductFeatureCategoriesColumns[1]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "product_feature_category_child_product_feature_categories_product_feature_category_id",
				Columns:    []*schema.Column{ProductFeatureCategoryChildProductFeatureCategoriesColumns[0]},
				RefColumns: []*schema.Column{ProductFeatureCategoriesColumns[0]},
				OnDelete:   schema.Cascade,
			},
			{
				Symbol:     "product_feature_category_child_product_feature_categories_child_product_feature_category_id",
				Columns:    []*schema.Column{ProductFeatureCategoryChildProductFeatureCategoriesColumns[1]},
				RefColumns: []*schema.Column{ProductFeatureCategoriesColumns[0]},
				OnDelete:   schema.Cascade,
			},
		},
	}
	// ProductFeatureIactnTypeChildProductFeatureIactnTypesColumns holds the columns for the "product_feature_iactn_type_child_product_feature_iactn_types" table.
	ProductFeatureIactnTypeChildProductFeatureIactnTypesColumns = []*schema.Column{
		{Name: "product_feature_iactn_type_id", Type: field.TypeInt},
		{Name: "child_product_feature_iactn_type_id", Type: field.TypeInt},
	}
	// ProductFeatureIactnTypeChildProductFeatureIactnTypesTable holds the schema information for the "product_feature_iactn_type_child_product_feature_iactn_types" table.
	ProductFeatureIactnTypeChildProductFeatureIactnTypesTable = &schema.Table{
		Name:       "product_feature_iactn_type_child_product_feature_iactn_types",
		Columns:    ProductFeatureIactnTypeChildProductFeatureIactnTypesColumns,
		PrimaryKey: []*schema.Column{ProductFeatureIactnTypeChildProductFeatureIactnTypesColumns[0], ProductFeatureIactnTypeChildProductFeatureIactnTypesColumns[1]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "product_feature_iactn_type_child_product_feature_iactn_types_product_feature_iactn_type_id",
				Columns:    []*schema.Column{ProductFeatureIactnTypeChildProductFeatureIactnTypesColumns[0]},
				RefColumns: []*schema.Column{ProductFeatureIactnTypesColumns[0]},
				OnDelete:   schema.Cascade,
			},
			{
				Symbol:     "product_feature_iactn_type_child_product_feature_iactn_types_child_product_feature_iactn_type_id",
				Columns:    []*schema.Column{ProductFeatureIactnTypeChildProductFeatureIactnTypesColumns[1]},
				RefColumns: []*schema.Column{ProductFeatureIactnTypesColumns[0]},
				OnDelete:   schema.Cascade,
			},
		},
	}
	// ProductFeatureTypeChildProductFeatureTypesColumns holds the columns for the "product_feature_type_child_product_feature_types" table.
	ProductFeatureTypeChildProductFeatureTypesColumns = []*schema.Column{
		{Name: "product_feature_type_id", Type: field.TypeInt},
		{Name: "child_product_feature_type_id", Type: field.TypeInt},
	}
	// ProductFeatureTypeChildProductFeatureTypesTable holds the schema information for the "product_feature_type_child_product_feature_types" table.
	ProductFeatureTypeChildProductFeatureTypesTable = &schema.Table{
		Name:       "product_feature_type_child_product_feature_types",
		Columns:    ProductFeatureTypeChildProductFeatureTypesColumns,
		PrimaryKey: []*schema.Column{ProductFeatureTypeChildProductFeatureTypesColumns[0], ProductFeatureTypeChildProductFeatureTypesColumns[1]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "product_feature_type_child_product_feature_types_product_feature_type_id",
				Columns:    []*schema.Column{ProductFeatureTypeChildProductFeatureTypesColumns[0]},
				RefColumns: []*schema.Column{ProductFeatureTypesColumns[0]},
				OnDelete:   schema.Cascade,
			},
			{
				Symbol:     "product_feature_type_child_product_feature_types_child_product_feature_type_id",
				Columns:    []*schema.Column{ProductFeatureTypeChildProductFeatureTypesColumns[1]},
				RefColumns: []*schema.Column{ProductFeatureTypesColumns[0]},
				OnDelete:   schema.Cascade,
			},
		},
	}
	// ProductMaintTypeChildProductMaintTypesColumns holds the columns for the "product_maint_type_child_product_maint_types" table.
	ProductMaintTypeChildProductMaintTypesColumns = []*schema.Column{
		{Name: "product_maint_type_id", Type: field.TypeInt},
		{Name: "child_product_maint_type_id", Type: field.TypeInt},
	}
	// ProductMaintTypeChildProductMaintTypesTable holds the schema information for the "product_maint_type_child_product_maint_types" table.
	ProductMaintTypeChildProductMaintTypesTable = &schema.Table{
		Name:       "product_maint_type_child_product_maint_types",
		Columns:    ProductMaintTypeChildProductMaintTypesColumns,
		PrimaryKey: []*schema.Column{ProductMaintTypeChildProductMaintTypesColumns[0], ProductMaintTypeChildProductMaintTypesColumns[1]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "product_maint_type_child_product_maint_types_product_maint_type_id",
				Columns:    []*schema.Column{ProductMaintTypeChildProductMaintTypesColumns[0]},
				RefColumns: []*schema.Column{ProductMaintTypesColumns[0]},
				OnDelete:   schema.Cascade,
			},
			{
				Symbol:     "product_maint_type_child_product_maint_types_child_product_maint_type_id",
				Columns:    []*schema.Column{ProductMaintTypeChildProductMaintTypesColumns[1]},
				RefColumns: []*schema.Column{ProductMaintTypesColumns[0]},
				OnDelete:   schema.Cascade,
			},
		},
	}
	// ProductTypeChildProductTypesColumns holds the columns for the "product_type_child_product_types" table.
	ProductTypeChildProductTypesColumns = []*schema.Column{
		{Name: "product_type_id", Type: field.TypeInt},
		{Name: "child_product_type_id", Type: field.TypeInt},
	}
	// ProductTypeChildProductTypesTable holds the schema information for the "product_type_child_product_types" table.
	ProductTypeChildProductTypesTable = &schema.Table{
		Name:       "product_type_child_product_types",
		Columns:    ProductTypeChildProductTypesColumns,
		PrimaryKey: []*schema.Column{ProductTypeChildProductTypesColumns[0], ProductTypeChildProductTypesColumns[1]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "product_type_child_product_types_product_type_id",
				Columns:    []*schema.Column{ProductTypeChildProductTypesColumns[0]},
				RefColumns: []*schema.Column{ProductTypesColumns[0]},
				OnDelete:   schema.Cascade,
			},
			{
				Symbol:     "product_type_child_product_types_child_product_type_id",
				Columns:    []*schema.Column{ProductTypeChildProductTypesColumns[1]},
				RefColumns: []*schema.Column{ProductTypesColumns[0]},
				OnDelete:   schema.Cascade,
			},
		},
	}
	// RoleTypeChildRoleTypesColumns holds the columns for the "role_type_child_role_types" table.
	RoleTypeChildRoleTypesColumns = []*schema.Column{
		{Name: "role_type_id", Type: field.TypeInt},
		{Name: "child_role_type_id", Type: field.TypeInt},
	}
	// RoleTypeChildRoleTypesTable holds the schema information for the "role_type_child_role_types" table.
	RoleTypeChildRoleTypesTable = &schema.Table{
		Name:       "role_type_child_role_types",
		Columns:    RoleTypeChildRoleTypesColumns,
		PrimaryKey: []*schema.Column{RoleTypeChildRoleTypesColumns[0], RoleTypeChildRoleTypesColumns[1]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "role_type_child_role_types_role_type_id",
				Columns:    []*schema.Column{RoleTypeChildRoleTypesColumns[0]},
				RefColumns: []*schema.Column{RoleTypesColumns[0]},
				OnDelete:   schema.Cascade,
			},
			{
				Symbol:     "role_type_child_role_types_child_role_type_id",
				Columns:    []*schema.Column{RoleTypeChildRoleTypesColumns[1]},
				RefColumns: []*schema.Column{RoleTypesColumns[0]},
				OnDelete:   schema.Cascade,
			},
		},
	}
	// ShipmentGatewayConfigTypeSiblingShipmentGatewayConfigTypesColumns holds the columns for the "shipment_gateway_config_type_sibling_shipment_gateway_config_types" table.
	ShipmentGatewayConfigTypeSiblingShipmentGatewayConfigTypesColumns = []*schema.Column{
		{Name: "shipment_gateway_config_type_id", Type: field.TypeInt},
		{Name: "sibling_shipment_gateway_config_type_id", Type: field.TypeInt},
	}
	// ShipmentGatewayConfigTypeSiblingShipmentGatewayConfigTypesTable holds the schema information for the "shipment_gateway_config_type_sibling_shipment_gateway_config_types" table.
	ShipmentGatewayConfigTypeSiblingShipmentGatewayConfigTypesTable = &schema.Table{
		Name:       "shipment_gateway_config_type_sibling_shipment_gateway_config_types",
		Columns:    ShipmentGatewayConfigTypeSiblingShipmentGatewayConfigTypesColumns,
		PrimaryKey: []*schema.Column{ShipmentGatewayConfigTypeSiblingShipmentGatewayConfigTypesColumns[0], ShipmentGatewayConfigTypeSiblingShipmentGatewayConfigTypesColumns[1]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "shipment_gateway_config_type_sibling_shipment_gateway_config_types_shipment_gateway_config_type_id",
				Columns:    []*schema.Column{ShipmentGatewayConfigTypeSiblingShipmentGatewayConfigTypesColumns[0]},
				RefColumns: []*schema.Column{ShipmentGatewayConfigTypesColumns[0]},
				OnDelete:   schema.Cascade,
			},
			{
				Symbol:     "shipment_gateway_config_type_sibling_shipment_gateway_config_types_sibling_shipment_gateway_config_type_id",
				Columns:    []*schema.Column{ShipmentGatewayConfigTypeSiblingShipmentGatewayConfigTypesColumns[1]},
				RefColumns: []*schema.Column{ShipmentGatewayConfigTypesColumns[0]},
				OnDelete:   schema.Cascade,
			},
		},
	}
	// ShipmentGatewayConfigTypeChildShipmentGatewayConfigTypesColumns holds the columns for the "shipment_gateway_config_type_child_shipment_gateway_config_types" table.
	ShipmentGatewayConfigTypeChildShipmentGatewayConfigTypesColumns = []*schema.Column{
		{Name: "shipment_gateway_config_type_id", Type: field.TypeInt},
		{Name: "child_shipment_gateway_config_type_id", Type: field.TypeInt},
	}
	// ShipmentGatewayConfigTypeChildShipmentGatewayConfigTypesTable holds the schema information for the "shipment_gateway_config_type_child_shipment_gateway_config_types" table.
	ShipmentGatewayConfigTypeChildShipmentGatewayConfigTypesTable = &schema.Table{
		Name:       "shipment_gateway_config_type_child_shipment_gateway_config_types",
		Columns:    ShipmentGatewayConfigTypeChildShipmentGatewayConfigTypesColumns,
		PrimaryKey: []*schema.Column{ShipmentGatewayConfigTypeChildShipmentGatewayConfigTypesColumns[0], ShipmentGatewayConfigTypeChildShipmentGatewayConfigTypesColumns[1]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "shipment_gateway_config_type_child_shipment_gateway_config_types_shipment_gateway_config_type_id",
				Columns:    []*schema.Column{ShipmentGatewayConfigTypeChildShipmentGatewayConfigTypesColumns[0]},
				RefColumns: []*schema.Column{ShipmentGatewayConfigTypesColumns[0]},
				OnDelete:   schema.Cascade,
			},
			{
				Symbol:     "shipment_gateway_config_type_child_shipment_gateway_config_types_child_shipment_gateway_config_type_id",
				Columns:    []*schema.Column{ShipmentGatewayConfigTypeChildShipmentGatewayConfigTypesColumns[1]},
				RefColumns: []*schema.Column{ShipmentGatewayConfigTypesColumns[0]},
				OnDelete:   schema.Cascade,
			},
		},
	}
	// ShipmentTypeChildShipmentTypesColumns holds the columns for the "shipment_type_child_shipment_types" table.
	ShipmentTypeChildShipmentTypesColumns = []*schema.Column{
		{Name: "shipment_type_id", Type: field.TypeInt},
		{Name: "child_shipment_type_id", Type: field.TypeInt},
	}
	// ShipmentTypeChildShipmentTypesTable holds the schema information for the "shipment_type_child_shipment_types" table.
	ShipmentTypeChildShipmentTypesTable = &schema.Table{
		Name:       "shipment_type_child_shipment_types",
		Columns:    ShipmentTypeChildShipmentTypesColumns,
		PrimaryKey: []*schema.Column{ShipmentTypeChildShipmentTypesColumns[0], ShipmentTypeChildShipmentTypesColumns[1]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "shipment_type_child_shipment_types_shipment_type_id",
				Columns:    []*schema.Column{ShipmentTypeChildShipmentTypesColumns[0]},
				RefColumns: []*schema.Column{ShipmentTypesColumns[0]},
				OnDelete:   schema.Cascade,
			},
			{
				Symbol:     "shipment_type_child_shipment_types_child_shipment_type_id",
				Columns:    []*schema.Column{ShipmentTypeChildShipmentTypesColumns[1]},
				RefColumns: []*schema.Column{ShipmentTypesColumns[0]},
				OnDelete:   schema.Cascade,
			},
		},
	}
	// StatusTypeChildStatusTypesColumns holds the columns for the "status_type_child_status_types" table.
	StatusTypeChildStatusTypesColumns = []*schema.Column{
		{Name: "status_type_id", Type: field.TypeInt},
		{Name: "child_status_type_id", Type: field.TypeInt},
	}
	// StatusTypeChildStatusTypesTable holds the schema information for the "status_type_child_status_types" table.
	StatusTypeChildStatusTypesTable = &schema.Table{
		Name:       "status_type_child_status_types",
		Columns:    StatusTypeChildStatusTypesColumns,
		PrimaryKey: []*schema.Column{StatusTypeChildStatusTypesColumns[0], StatusTypeChildStatusTypesColumns[1]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "status_type_child_status_types_status_type_id",
				Columns:    []*schema.Column{StatusTypeChildStatusTypesColumns[0]},
				RefColumns: []*schema.Column{StatusTypesColumns[0]},
				OnDelete:   schema.Cascade,
			},
			{
				Symbol:     "status_type_child_status_types_child_status_type_id",
				Columns:    []*schema.Column{StatusTypeChildStatusTypesColumns[1]},
				RefColumns: []*schema.Column{StatusTypesColumns[0]},
				OnDelete:   schema.Cascade,
			},
		},
	}
	// SubscriptionTypeChildSubscriptionTypesColumns holds the columns for the "subscription_type_child_subscription_types" table.
	SubscriptionTypeChildSubscriptionTypesColumns = []*schema.Column{
		{Name: "subscription_type_id", Type: field.TypeInt},
		{Name: "child_subscription_type_id", Type: field.TypeInt},
	}
	// SubscriptionTypeChildSubscriptionTypesTable holds the schema information for the "subscription_type_child_subscription_types" table.
	SubscriptionTypeChildSubscriptionTypesTable = &schema.Table{
		Name:       "subscription_type_child_subscription_types",
		Columns:    SubscriptionTypeChildSubscriptionTypesColumns,
		PrimaryKey: []*schema.Column{SubscriptionTypeChildSubscriptionTypesColumns[0], SubscriptionTypeChildSubscriptionTypesColumns[1]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "subscription_type_child_subscription_types_subscription_type_id",
				Columns:    []*schema.Column{SubscriptionTypeChildSubscriptionTypesColumns[0]},
				RefColumns: []*schema.Column{SubscriptionTypesColumns[0]},
				OnDelete:   schema.Cascade,
			},
			{
				Symbol:     "subscription_type_child_subscription_types_child_subscription_type_id",
				Columns:    []*schema.Column{SubscriptionTypeChildSubscriptionTypesColumns[1]},
				RefColumns: []*schema.Column{SubscriptionTypesColumns[0]},
				OnDelete:   schema.Cascade,
			},
		},
	}
	// Tables holds all the tables in the schema.
	Tables = []*schema.Table{
		ContentAssocTypesTable,
		ContentTypesTable,
		CostComponentTypesTable,
		CustomMethodsTable,
		CustomMethodTypesTable,
		EnumerationsTable,
		EnumerationTypesTable,
		FacilityAssocTypesTable,
		FacilityGroupsTable,
		FacilityGroupTypesTable,
		FacilityTypesTable,
		GoodIdentificationTypesTable,
		InventoryItemDetailsTable,
		InventoryItemTypesTable,
		OrderAdjustmentsTable,
		OrderContactMechesTable,
		OrderHeadersTable,
		OrderItemsTable,
		OrderItemShipGroupsTable,
		OrderItemShipGroupAssocsTable,
		OrderItemShipGrpInvResTable,
		OrderPaymentPreferencesTable,
		OrderRolesTable,
		OrderStatusTable,
		ProdCatalogCategoryTypesTable,
		ProdConfItemContentTypesTable,
		ProductsTable,
		ProductAssocsTable,
		ProductAssocTypesTable,
		ProductCategoriesTable,
		ProductCategoryContentTypesTable,
		ProductCategoryTypesTable,
		ProductConfigItemsTable,
		ProductContentTypesTable,
		ProductFeaturesTable,
		ProductFeatureApplTypesTable,
		ProductFeatureCategoriesTable,
		ProductFeatureIactnTypesTable,
		ProductFeatureTypesTable,
		ProductMaintTypesTable,
		ProductMeterTypesTable,
		ProductPricesTable,
		ProductPriceActionTypesTable,
		ProductPricePurposesTable,
		ProductPriceTypesTable,
		ProductReviewsTable,
		ProductStoresTable,
		ProductStoreGroupsTable,
		ProductTypesTable,
		QuantityBreakTypesTable,
		RejectionReasonsTable,
		RoleTypesTable,
		ShipmentContactMechTypesTable,
		ShipmentGatewayConfigsTable,
		ShipmentGatewayConfigTypesTable,
		ShipmentGatewayDhlsTable,
		ShipmentGatewayFedexesTable,
		ShipmentGatewayUpsTable,
		ShipmentGatewayUspsTable,
		ShipmentTypesTable,
		StatusItemsTable,
		StatusTypesTable,
		StatusValidChangesTable,
		SubscriptionTypesTable,
		SupplierPrefOrdersTable,
		VarianceReasonsTable,
		ContentTypeChildContentTypesTable,
		CostComponentTypeChildCostComponentTypesTable,
		CustomMethodTypeChildCustomMethodTypesTable,
		EnumerationTypeChildEnumerationTypesTable,
		FacilityTypeChildFacilityTypesTable,
		GoodIdentificationTypeChildGoodIdentificationTypesTable,
		InventoryItemTypeChildInventoryItemTypesTable,
		ProdCatalogCategoryTypeChildProdCatalogCategoryTypesTable,
		ProdConfItemContentTypeChildProdConfItemContentTypesTable,
		ProductAssocTypeChildProductAssocTypesTable,
		ProductCategoryPrimaryChildProductCategoriesTable,
		ProductCategoryContentTypeChildProductCategoryContentTypesTable,
		ProductCategoryTypeChildProductCategoryTypesTable,
		ProductContentTypeChildProductContentTypesTable,
		ProductFeatureApplTypeChildProductFeatureApplTypesTable,
		ProductFeatureCategoryChildProductFeatureCategoriesTable,
		ProductFeatureIactnTypeChildProductFeatureIactnTypesTable,
		ProductFeatureTypeChildProductFeatureTypesTable,
		ProductMaintTypeChildProductMaintTypesTable,
		ProductTypeChildProductTypesTable,
		RoleTypeChildRoleTypesTable,
		ShipmentGatewayConfigTypeSiblingShipmentGatewayConfigTypesTable,
		ShipmentGatewayConfigTypeChildShipmentGatewayConfigTypesTable,
		ShipmentTypeChildShipmentTypesTable,
		StatusTypeChildStatusTypesTable,
		SubscriptionTypeChildSubscriptionTypesTable,
	}
)

func init() {
	ContentTypesTable.ForeignKeys[0].RefTable = ContentTypesTable
	CostComponentTypesTable.ForeignKeys[0].RefTable = CostComponentTypesTable
	CustomMethodsTable.ForeignKeys[0].RefTable = CustomMethodTypesTable
	CustomMethodTypesTable.ForeignKeys[0].RefTable = CustomMethodTypesTable
	EnumerationsTable.ForeignKeys[0].RefTable = EnumerationTypesTable
	EnumerationTypesTable.ForeignKeys[0].RefTable = EnumerationTypesTable
	FacilityGroupsTable.ForeignKeys[0].RefTable = FacilityGroupsTable
	FacilityGroupsTable.ForeignKeys[1].RefTable = FacilityGroupTypesTable
	FacilityTypesTable.ForeignKeys[0].RefTable = FacilityTypesTable
	GoodIdentificationTypesTable.ForeignKeys[0].RefTable = GoodIdentificationTypesTable
	InventoryItemDetailsTable.ForeignKeys[0].RefTable = EnumerationsTable
	InventoryItemDetailsTable.ForeignKeys[1].RefTable = OrderItemShipGrpInvResTable
	InventoryItemTypesTable.ForeignKeys[0].RefTable = InventoryItemTypesTable
	OrderAdjustmentsTable.ForeignKeys[0].RefTable = OrderAdjustmentsTable
	OrderAdjustmentsTable.ForeignKeys[1].RefTable = OrderHeadersTable
	OrderAdjustmentsTable.ForeignKeys[2].RefTable = OrderItemsTable
	OrderAdjustmentsTable.ForeignKeys[3].RefTable = OrderItemShipGroupsTable
	OrderAdjustmentsTable.ForeignKeys[4].RefTable = OrderItemShipGroupAssocsTable
	OrderContactMechesTable.ForeignKeys[0].RefTable = OrderHeadersTable
	OrderHeadersTable.ForeignKeys[0].RefTable = EnumerationsTable
	OrderHeadersTable.ForeignKeys[1].RefTable = ProductStoresTable
	OrderHeadersTable.ForeignKeys[2].RefTable = StatusItemsTable
	OrderHeadersTable.ForeignKeys[3].RefTable = StatusItemsTable
	OrderItemsTable.ForeignKeys[0].RefTable = OrderHeadersTable
	OrderItemsTable.ForeignKeys[1].RefTable = OrderRolesTable
	OrderItemsTable.ForeignKeys[2].RefTable = ProductsTable
	OrderItemsTable.ForeignKeys[3].RefTable = StatusItemsTable
	OrderItemsTable.ForeignKeys[4].RefTable = StatusItemsTable
	OrderItemShipGroupsTable.ForeignKeys[0].RefTable = OrderHeadersTable
	OrderItemShipGroupAssocsTable.ForeignKeys[0].RefTable = OrderHeadersTable
	OrderItemShipGroupAssocsTable.ForeignKeys[1].RefTable = OrderItemsTable
	OrderItemShipGroupAssocsTable.ForeignKeys[2].RefTable = OrderItemShipGroupsTable
	OrderItemShipGrpInvResTable.ForeignKeys[0].RefTable = OrderHeadersTable
	OrderItemShipGrpInvResTable.ForeignKeys[1].RefTable = OrderItemsTable
	OrderItemShipGrpInvResTable.ForeignKeys[2].RefTable = OrderItemShipGroupsTable
	OrderItemShipGrpInvResTable.ForeignKeys[3].RefTable = OrderItemShipGroupAssocsTable
	OrderPaymentPreferencesTable.ForeignKeys[0].RefTable = OrderHeadersTable
	OrderPaymentPreferencesTable.ForeignKeys[1].RefTable = OrderItemsTable
	OrderPaymentPreferencesTable.ForeignKeys[2].RefTable = OrderItemShipGroupsTable
	OrderPaymentPreferencesTable.ForeignKeys[3].RefTable = ProductPricePurposesTable
	OrderPaymentPreferencesTable.ForeignKeys[4].RefTable = StatusItemsTable
	OrderRolesTable.ForeignKeys[0].RefTable = OrderHeadersTable
	OrderRolesTable.ForeignKeys[1].RefTable = RoleTypesTable
	OrderStatusTable.ForeignKeys[0].RefTable = OrderHeadersTable
	OrderStatusTable.ForeignKeys[1].RefTable = OrderItemsTable
	OrderStatusTable.ForeignKeys[2].RefTable = OrderPaymentPreferencesTable
	OrderStatusTable.ForeignKeys[3].RefTable = StatusItemsTable
	ProdCatalogCategoryTypesTable.ForeignKeys[0].RefTable = ProdCatalogCategoryTypesTable
	ProdConfItemContentTypesTable.ForeignKeys[0].RefTable = ProdConfItemContentTypesTable
	ProductsTable.ForeignKeys[0].RefTable = EnumerationsTable
	ProductsTable.ForeignKeys[1].RefTable = EnumerationsTable
	ProductsTable.ForeignKeys[2].RefTable = EnumerationsTable
	ProductsTable.ForeignKeys[3].RefTable = InventoryItemTypesTable
	ProductsTable.ForeignKeys[4].RefTable = ProductCategoriesTable
	ProductsTable.ForeignKeys[5].RefTable = ProductTypesTable
	ProductAssocsTable.ForeignKeys[0].RefTable = CustomMethodsTable
	ProductAssocsTable.ForeignKeys[1].RefTable = ProductsTable
	ProductAssocsTable.ForeignKeys[2].RefTable = ProductsTable
	ProductAssocsTable.ForeignKeys[3].RefTable = ProductAssocTypesTable
	ProductAssocTypesTable.ForeignKeys[0].RefTable = ProductAssocTypesTable
	ProductCategoriesTable.ForeignKeys[0].RefTable = ProductCategoriesTable
	ProductCategoriesTable.ForeignKeys[1].RefTable = ProductCategoryTypesTable
	ProductCategoryContentTypesTable.ForeignKeys[0].RefTable = ProductCategoryContentTypesTable
	ProductCategoryTypesTable.ForeignKeys[0].RefTable = ProductCategoryTypesTable
	ProductContentTypesTable.ForeignKeys[0].RefTable = ProductContentTypesTable
	ProductFeaturesTable.ForeignKeys[0].RefTable = ProductFeatureCategoriesTable
	ProductFeaturesTable.ForeignKeys[1].RefTable = ProductFeatureTypesTable
	ProductFeatureApplTypesTable.ForeignKeys[0].RefTable = ProductFeatureApplTypesTable
	ProductFeatureCategoriesTable.ForeignKeys[0].RefTable = ProductFeatureCategoriesTable
	ProductFeatureIactnTypesTable.ForeignKeys[0].RefTable = ProductFeatureIactnTypesTable
	ProductFeatureTypesTable.ForeignKeys[0].RefTable = ProductFeatureTypesTable
	ProductMaintTypesTable.ForeignKeys[0].RefTable = ProductMaintTypesTable
	ProductPricesTable.ForeignKeys[0].RefTable = CustomMethodsTable
	ProductPricesTable.ForeignKeys[1].RefTable = ProductsTable
	ProductPricesTable.ForeignKeys[2].RefTable = ProductPricePurposesTable
	ProductPricesTable.ForeignKeys[3].RefTable = ProductPriceTypesTable
	ProductPricesTable.ForeignKeys[4].RefTable = ProductStoreGroupsTable
	ProductReviewsTable.ForeignKeys[0].RefTable = ProductsTable
	ProductReviewsTable.ForeignKeys[1].RefTable = ProductStoresTable
	ProductReviewsTable.ForeignKeys[2].RefTable = StatusItemsTable
	ProductStoresTable.ForeignKeys[0].RefTable = EnumerationsTable
	ProductStoresTable.ForeignKeys[1].RefTable = EnumerationsTable
	ProductStoresTable.ForeignKeys[2].RefTable = EnumerationsTable
	ProductStoresTable.ForeignKeys[3].RefTable = EnumerationsTable
	ProductStoresTable.ForeignKeys[4].RefTable = ProductStoreGroupsTable
	ProductStoresTable.ForeignKeys[5].RefTable = StatusItemsTable
	ProductStoresTable.ForeignKeys[6].RefTable = StatusItemsTable
	ProductStoresTable.ForeignKeys[7].RefTable = StatusItemsTable
	ProductStoresTable.ForeignKeys[8].RefTable = StatusItemsTable
	ProductStoresTable.ForeignKeys[9].RefTable = StatusItemsTable
	ProductStoresTable.ForeignKeys[10].RefTable = StatusItemsTable
	ProductStoresTable.ForeignKeys[11].RefTable = StatusItemsTable
	ProductStoreGroupsTable.ForeignKeys[0].RefTable = ProductStoreGroupsTable
	ProductTypesTable.ForeignKeys[0].RefTable = ProductTypesTable
	RoleTypesTable.ForeignKeys[0].RefTable = RoleTypesTable
	ShipmentGatewayConfigsTable.ForeignKeys[0].RefTable = ShipmentGatewayConfigTypesTable
	ShipmentGatewayConfigTypesTable.ForeignKeys[0].RefTable = ShipmentGatewayConfigTypesTable
	ShipmentGatewayDhlsTable.ForeignKeys[0].RefTable = ShipmentGatewayConfigsTable
	ShipmentGatewayFedexesTable.ForeignKeys[0].RefTable = ShipmentGatewayConfigsTable
	ShipmentGatewayUpsTable.ForeignKeys[0].RefTable = ShipmentGatewayConfigsTable
	ShipmentGatewayUspsTable.ForeignKeys[0].RefTable = ShipmentGatewayConfigsTable
	ShipmentTypesTable.ForeignKeys[0].RefTable = ShipmentTypesTable
	StatusItemsTable.ForeignKeys[0].RefTable = StatusTypesTable
	StatusTypesTable.ForeignKeys[0].RefTable = StatusTypesTable
	StatusValidChangesTable.ForeignKeys[0].RefTable = OrderItemsTable
	StatusValidChangesTable.ForeignKeys[1].RefTable = StatusItemsTable
	StatusValidChangesTable.ForeignKeys[2].RefTable = StatusItemsTable
	SubscriptionTypesTable.ForeignKeys[0].RefTable = SubscriptionTypesTable
	ContentTypeChildContentTypesTable.ForeignKeys[0].RefTable = ContentTypesTable
	ContentTypeChildContentTypesTable.ForeignKeys[1].RefTable = ContentTypesTable
	CostComponentTypeChildCostComponentTypesTable.ForeignKeys[0].RefTable = CostComponentTypesTable
	CostComponentTypeChildCostComponentTypesTable.ForeignKeys[1].RefTable = CostComponentTypesTable
	CustomMethodTypeChildCustomMethodTypesTable.ForeignKeys[0].RefTable = CustomMethodTypesTable
	CustomMethodTypeChildCustomMethodTypesTable.ForeignKeys[1].RefTable = CustomMethodTypesTable
	EnumerationTypeChildEnumerationTypesTable.ForeignKeys[0].RefTable = EnumerationTypesTable
	EnumerationTypeChildEnumerationTypesTable.ForeignKeys[1].RefTable = EnumerationTypesTable
	FacilityTypeChildFacilityTypesTable.ForeignKeys[0].RefTable = FacilityTypesTable
	FacilityTypeChildFacilityTypesTable.ForeignKeys[1].RefTable = FacilityTypesTable
	GoodIdentificationTypeChildGoodIdentificationTypesTable.ForeignKeys[0].RefTable = GoodIdentificationTypesTable
	GoodIdentificationTypeChildGoodIdentificationTypesTable.ForeignKeys[1].RefTable = GoodIdentificationTypesTable
	InventoryItemTypeChildInventoryItemTypesTable.ForeignKeys[0].RefTable = InventoryItemTypesTable
	InventoryItemTypeChildInventoryItemTypesTable.ForeignKeys[1].RefTable = InventoryItemTypesTable
	ProdCatalogCategoryTypeChildProdCatalogCategoryTypesTable.ForeignKeys[0].RefTable = ProdCatalogCategoryTypesTable
	ProdCatalogCategoryTypeChildProdCatalogCategoryTypesTable.ForeignKeys[1].RefTable = ProdCatalogCategoryTypesTable
	ProdConfItemContentTypeChildProdConfItemContentTypesTable.ForeignKeys[0].RefTable = ProdConfItemContentTypesTable
	ProdConfItemContentTypeChildProdConfItemContentTypesTable.ForeignKeys[1].RefTable = ProdConfItemContentTypesTable
	ProductAssocTypeChildProductAssocTypesTable.ForeignKeys[0].RefTable = ProductAssocTypesTable
	ProductAssocTypeChildProductAssocTypesTable.ForeignKeys[1].RefTable = ProductAssocTypesTable
	ProductCategoryPrimaryChildProductCategoriesTable.ForeignKeys[0].RefTable = ProductCategoriesTable
	ProductCategoryPrimaryChildProductCategoriesTable.ForeignKeys[1].RefTable = ProductCategoriesTable
	ProductCategoryContentTypeChildProductCategoryContentTypesTable.ForeignKeys[0].RefTable = ProductCategoryContentTypesTable
	ProductCategoryContentTypeChildProductCategoryContentTypesTable.ForeignKeys[1].RefTable = ProductCategoryContentTypesTable
	ProductCategoryTypeChildProductCategoryTypesTable.ForeignKeys[0].RefTable = ProductCategoryTypesTable
	ProductCategoryTypeChildProductCategoryTypesTable.ForeignKeys[1].RefTable = ProductCategoryTypesTable
	ProductContentTypeChildProductContentTypesTable.ForeignKeys[0].RefTable = ProductContentTypesTable
	ProductContentTypeChildProductContentTypesTable.ForeignKeys[1].RefTable = ProductContentTypesTable
	ProductFeatureApplTypeChildProductFeatureApplTypesTable.ForeignKeys[0].RefTable = ProductFeatureApplTypesTable
	ProductFeatureApplTypeChildProductFeatureApplTypesTable.ForeignKeys[1].RefTable = ProductFeatureApplTypesTable
	ProductFeatureCategoryChildProductFeatureCategoriesTable.ForeignKeys[0].RefTable = ProductFeatureCategoriesTable
	ProductFeatureCategoryChildProductFeatureCategoriesTable.ForeignKeys[1].RefTable = ProductFeatureCategoriesTable
	ProductFeatureIactnTypeChildProductFeatureIactnTypesTable.ForeignKeys[0].RefTable = ProductFeatureIactnTypesTable
	ProductFeatureIactnTypeChildProductFeatureIactnTypesTable.ForeignKeys[1].RefTable = ProductFeatureIactnTypesTable
	ProductFeatureTypeChildProductFeatureTypesTable.ForeignKeys[0].RefTable = ProductFeatureTypesTable
	ProductFeatureTypeChildProductFeatureTypesTable.ForeignKeys[1].RefTable = ProductFeatureTypesTable
	ProductMaintTypeChildProductMaintTypesTable.ForeignKeys[0].RefTable = ProductMaintTypesTable
	ProductMaintTypeChildProductMaintTypesTable.ForeignKeys[1].RefTable = ProductMaintTypesTable
	ProductTypeChildProductTypesTable.ForeignKeys[0].RefTable = ProductTypesTable
	ProductTypeChildProductTypesTable.ForeignKeys[1].RefTable = ProductTypesTable
	RoleTypeChildRoleTypesTable.ForeignKeys[0].RefTable = RoleTypesTable
	RoleTypeChildRoleTypesTable.ForeignKeys[1].RefTable = RoleTypesTable
	ShipmentGatewayConfigTypeSiblingShipmentGatewayConfigTypesTable.ForeignKeys[0].RefTable = ShipmentGatewayConfigTypesTable
	ShipmentGatewayConfigTypeSiblingShipmentGatewayConfigTypesTable.ForeignKeys[1].RefTable = ShipmentGatewayConfigTypesTable
	ShipmentGatewayConfigTypeChildShipmentGatewayConfigTypesTable.ForeignKeys[0].RefTable = ShipmentGatewayConfigTypesTable
	ShipmentGatewayConfigTypeChildShipmentGatewayConfigTypesTable.ForeignKeys[1].RefTable = ShipmentGatewayConfigTypesTable
	ShipmentTypeChildShipmentTypesTable.ForeignKeys[0].RefTable = ShipmentTypesTable
	ShipmentTypeChildShipmentTypesTable.ForeignKeys[1].RefTable = ShipmentTypesTable
	StatusTypeChildStatusTypesTable.ForeignKeys[0].RefTable = StatusTypesTable
	StatusTypeChildStatusTypesTable.ForeignKeys[1].RefTable = StatusTypesTable
	SubscriptionTypeChildSubscriptionTypesTable.ForeignKeys[0].RefTable = SubscriptionTypesTable
	SubscriptionTypeChildSubscriptionTypesTable.ForeignKeys[1].RefTable = SubscriptionTypesTable
}
