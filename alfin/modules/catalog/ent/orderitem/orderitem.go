// Code generated by entc, DO NOT EDIT.

package orderitem

import (
	"fmt"
	"time"
)

const (
	// Label holds the string label denoting the orderitem type in the database.
	Label = "order_item"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldCreateTime holds the string denoting the create_time field in the database.
	FieldCreateTime = "create_time"
	// FieldUpdateTime holds the string denoting the update_time field in the database.
	FieldUpdateTime = "update_time"
	// FieldStringRef holds the string denoting the string_ref field in the database.
	FieldStringRef = "string_ref"
	// FieldOrderItemSeqID holds the string denoting the order_item_seq_id field in the database.
	FieldOrderItemSeqID = "order_item_seq_id"
	// FieldExternalID holds the string denoting the external_id field in the database.
	FieldExternalID = "external_id"
	// FieldOrderItemTypeID holds the string denoting the order_item_type_id field in the database.
	FieldOrderItemTypeID = "order_item_type_id"
	// FieldOrderItemGroupSeqID holds the string denoting the order_item_group_seq_id field in the database.
	FieldOrderItemGroupSeqID = "order_item_group_seq_id"
	// FieldIsItemGroupPrimary holds the string denoting the is_item_group_primary field in the database.
	FieldIsItemGroupPrimary = "is_item_group_primary"
	// FieldFromInventoryItemID holds the string denoting the from_inventory_item_id field in the database.
	FieldFromInventoryItemID = "from_inventory_item_id"
	// FieldBudgetID holds the string denoting the budget_id field in the database.
	FieldBudgetID = "budget_id"
	// FieldBudgetItemSeqID holds the string denoting the budget_item_seq_id field in the database.
	FieldBudgetItemSeqID = "budget_item_seq_id"
	// FieldSupplierProductID holds the string denoting the supplier_product_id field in the database.
	FieldSupplierProductID = "supplier_product_id"
	// FieldProductFeatureID holds the string denoting the product_feature_id field in the database.
	FieldProductFeatureID = "product_feature_id"
	// FieldProdCatalogID holds the string denoting the prod_catalog_id field in the database.
	FieldProdCatalogID = "prod_catalog_id"
	// FieldProductCategoryID holds the string denoting the product_category_id field in the database.
	FieldProductCategoryID = "product_category_id"
	// FieldIsPromo holds the string denoting the is_promo field in the database.
	FieldIsPromo = "is_promo"
	// FieldQuoteID holds the string denoting the quote_id field in the database.
	FieldQuoteID = "quote_id"
	// FieldQuoteItemSeqID holds the string denoting the quote_item_seq_id field in the database.
	FieldQuoteItemSeqID = "quote_item_seq_id"
	// FieldShoppingListID holds the string denoting the shopping_list_id field in the database.
	FieldShoppingListID = "shopping_list_id"
	// FieldShoppingListItemSeqID holds the string denoting the shopping_list_item_seq_id field in the database.
	FieldShoppingListItemSeqID = "shopping_list_item_seq_id"
	// FieldSubscriptionID holds the string denoting the subscription_id field in the database.
	FieldSubscriptionID = "subscription_id"
	// FieldDeploymentID holds the string denoting the deployment_id field in the database.
	FieldDeploymentID = "deployment_id"
	// FieldQuantity holds the string denoting the quantity field in the database.
	FieldQuantity = "quantity"
	// FieldCancelQuantity holds the string denoting the cancel_quantity field in the database.
	FieldCancelQuantity = "cancel_quantity"
	// FieldSelectedAmount holds the string denoting the selected_amount field in the database.
	FieldSelectedAmount = "selected_amount"
	// FieldUnitPrice holds the string denoting the unit_price field in the database.
	FieldUnitPrice = "unit_price"
	// FieldUnitListPrice holds the string denoting the unit_list_price field in the database.
	FieldUnitListPrice = "unit_list_price"
	// FieldUnitAverageCost holds the string denoting the unit_average_cost field in the database.
	FieldUnitAverageCost = "unit_average_cost"
	// FieldUnitRecurringPrice holds the string denoting the unit_recurring_price field in the database.
	FieldUnitRecurringPrice = "unit_recurring_price"
	// FieldIsModifiedPrice holds the string denoting the is_modified_price field in the database.
	FieldIsModifiedPrice = "is_modified_price"
	// FieldRecurringFreqUomID holds the string denoting the recurring_freq_uom_id field in the database.
	FieldRecurringFreqUomID = "recurring_freq_uom_id"
	// FieldItemDescription holds the string denoting the item_description field in the database.
	FieldItemDescription = "item_description"
	// FieldComments holds the string denoting the comments field in the database.
	FieldComments = "comments"
	// FieldCorrespondingPoID holds the string denoting the corresponding_po_id field in the database.
	FieldCorrespondingPoID = "corresponding_po_id"
	// FieldEstimatedShipDate holds the string denoting the estimated_ship_date field in the database.
	FieldEstimatedShipDate = "estimated_ship_date"
	// FieldEstimatedDeliveryDate holds the string denoting the estimated_delivery_date field in the database.
	FieldEstimatedDeliveryDate = "estimated_delivery_date"
	// FieldAutoCancelDate holds the string denoting the auto_cancel_date field in the database.
	FieldAutoCancelDate = "auto_cancel_date"
	// FieldDontCancelSetDate holds the string denoting the dont_cancel_set_date field in the database.
	FieldDontCancelSetDate = "dont_cancel_set_date"
	// FieldDontCancelSetUserLogin holds the string denoting the dont_cancel_set_user_login field in the database.
	FieldDontCancelSetUserLogin = "dont_cancel_set_user_login"
	// FieldShipBeforeDate holds the string denoting the ship_before_date field in the database.
	FieldShipBeforeDate = "ship_before_date"
	// FieldShipAfterDate holds the string denoting the ship_after_date field in the database.
	FieldShipAfterDate = "ship_after_date"
	// FieldReserveAfterDate holds the string denoting the reserve_after_date field in the database.
	FieldReserveAfterDate = "reserve_after_date"
	// FieldCancelBackOrderDate holds the string denoting the cancel_back_order_date field in the database.
	FieldCancelBackOrderDate = "cancel_back_order_date"
	// FieldOverrideGlAccountID holds the string denoting the override_gl_account_id field in the database.
	FieldOverrideGlAccountID = "override_gl_account_id"
	// FieldSalesOpportunityID holds the string denoting the sales_opportunity_id field in the database.
	FieldSalesOpportunityID = "sales_opportunity_id"
	// FieldChangeByUserLoginID holds the string denoting the change_by_user_login_id field in the database.
	FieldChangeByUserLoginID = "change_by_user_login_id"
	// EdgeOrderHeader holds the string denoting the order_header edge name in mutations.
	EdgeOrderHeader = "order_header"
	// EdgeProduct holds the string denoting the product edge name in mutations.
	EdgeProduct = "product"
	// EdgeStatusItem holds the string denoting the status_item edge name in mutations.
	EdgeStatusItem = "status_item"
	// EdgeStatusValidChanges holds the string denoting the status_valid_changes edge name in mutations.
	EdgeStatusValidChanges = "status_valid_changes"
	// EdgeSyncStatusItem holds the string denoting the sync_status_item edge name in mutations.
	EdgeSyncStatusItem = "sync_status_item"
	// EdgeOrderAdjustments holds the string denoting the order_adjustments edge name in mutations.
	EdgeOrderAdjustments = "order_adjustments"
	// EdgeOrderItemShipGroupAssocs holds the string denoting the order_item_ship_group_assocs edge name in mutations.
	EdgeOrderItemShipGroupAssocs = "order_item_ship_group_assocs"
	// EdgeOrderItemShipGrpInvRes holds the string denoting the order_item_ship_grp_inv_res edge name in mutations.
	EdgeOrderItemShipGrpInvRes = "order_item_ship_grp_inv_res"
	// EdgeOrderPaymentPreferences holds the string denoting the order_payment_preferences edge name in mutations.
	EdgeOrderPaymentPreferences = "order_payment_preferences"
	// EdgeOrderStatuses holds the string denoting the order_statuses edge name in mutations.
	EdgeOrderStatuses = "order_statuses"
	// Table holds the table name of the orderitem in the database.
	Table = "order_items"
	// OrderHeaderTable is the table the holds the order_header relation/edge.
	OrderHeaderTable = "order_items"
	// OrderHeaderInverseTable is the table name for the OrderHeader entity.
	// It exists in this package in order to avoid circular dependency with the "orderheader" package.
	OrderHeaderInverseTable = "order_headers"
	// OrderHeaderColumn is the table column denoting the order_header relation/edge.
	OrderHeaderColumn = "order_header_order_items"
	// ProductTable is the table the holds the product relation/edge.
	ProductTable = "order_items"
	// ProductInverseTable is the table name for the Product entity.
	// It exists in this package in order to avoid circular dependency with the "product" package.
	ProductInverseTable = "products"
	// ProductColumn is the table column denoting the product relation/edge.
	ProductColumn = "product_order_items"
	// StatusItemTable is the table the holds the status_item relation/edge.
	StatusItemTable = "order_items"
	// StatusItemInverseTable is the table name for the StatusItem entity.
	// It exists in this package in order to avoid circular dependency with the "statusitem" package.
	StatusItemInverseTable = "status_items"
	// StatusItemColumn is the table column denoting the status_item relation/edge.
	StatusItemColumn = "status_item_order_items"
	// StatusValidChangesTable is the table the holds the status_valid_changes relation/edge.
	StatusValidChangesTable = "status_valid_changes"
	// StatusValidChangesInverseTable is the table name for the StatusValidChange entity.
	// It exists in this package in order to avoid circular dependency with the "statusvalidchange" package.
	StatusValidChangesInverseTable = "status_valid_changes"
	// StatusValidChangesColumn is the table column denoting the status_valid_changes relation/edge.
	StatusValidChangesColumn = "order_item_status_valid_changes"
	// SyncStatusItemTable is the table the holds the sync_status_item relation/edge.
	SyncStatusItemTable = "order_items"
	// SyncStatusItemInverseTable is the table name for the StatusItem entity.
	// It exists in this package in order to avoid circular dependency with the "statusitem" package.
	SyncStatusItemInverseTable = "status_items"
	// SyncStatusItemColumn is the table column denoting the sync_status_item relation/edge.
	SyncStatusItemColumn = "status_item_sync_order_items"
	// OrderAdjustmentsTable is the table the holds the order_adjustments relation/edge.
	OrderAdjustmentsTable = "order_adjustments"
	// OrderAdjustmentsInverseTable is the table name for the OrderAdjustment entity.
	// It exists in this package in order to avoid circular dependency with the "orderadjustment" package.
	OrderAdjustmentsInverseTable = "order_adjustments"
	// OrderAdjustmentsColumn is the table column denoting the order_adjustments relation/edge.
	OrderAdjustmentsColumn = "order_item_order_adjustments"
	// OrderItemShipGroupAssocsTable is the table the holds the order_item_ship_group_assocs relation/edge.
	OrderItemShipGroupAssocsTable = "order_item_ship_group_assocs"
	// OrderItemShipGroupAssocsInverseTable is the table name for the OrderItemShipGroupAssoc entity.
	// It exists in this package in order to avoid circular dependency with the "orderitemshipgroupassoc" package.
	OrderItemShipGroupAssocsInverseTable = "order_item_ship_group_assocs"
	// OrderItemShipGroupAssocsColumn is the table column denoting the order_item_ship_group_assocs relation/edge.
	OrderItemShipGroupAssocsColumn = "order_item_order_item_ship_group_assocs"
	// OrderItemShipGrpInvResTable is the table the holds the order_item_ship_grp_inv_res relation/edge.
	OrderItemShipGrpInvResTable = "order_item_ship_grp_inv_res"
	// OrderItemShipGrpInvResInverseTable is the table name for the OrderItemShipGrpInvRes entity.
	// It exists in this package in order to avoid circular dependency with the "orderitemshipgrpinvres" package.
	OrderItemShipGrpInvResInverseTable = "order_item_ship_grp_inv_res"
	// OrderItemShipGrpInvResColumn is the table column denoting the order_item_ship_grp_inv_res relation/edge.
	OrderItemShipGrpInvResColumn = "order_item_order_item_ship_grp_inv_res"
	// OrderPaymentPreferencesTable is the table the holds the order_payment_preferences relation/edge.
	OrderPaymentPreferencesTable = "order_payment_preferences"
	// OrderPaymentPreferencesInverseTable is the table name for the OrderPaymentPreference entity.
	// It exists in this package in order to avoid circular dependency with the "orderpaymentpreference" package.
	OrderPaymentPreferencesInverseTable = "order_payment_preferences"
	// OrderPaymentPreferencesColumn is the table column denoting the order_payment_preferences relation/edge.
	OrderPaymentPreferencesColumn = "order_item_order_payment_preferences"
	// OrderStatusesTable is the table the holds the order_statuses relation/edge.
	OrderStatusesTable = "order_status"
	// OrderStatusesInverseTable is the table name for the OrderStatus entity.
	// It exists in this package in order to avoid circular dependency with the "orderstatus" package.
	OrderStatusesInverseTable = "order_status"
	// OrderStatusesColumn is the table column denoting the order_statuses relation/edge.
	OrderStatusesColumn = "order_item_order_statuses"
)

// Columns holds all SQL columns for orderitem fields.
var Columns = []string{
	FieldID,
	FieldCreateTime,
	FieldUpdateTime,
	FieldStringRef,
	FieldOrderItemSeqID,
	FieldExternalID,
	FieldOrderItemTypeID,
	FieldOrderItemGroupSeqID,
	FieldIsItemGroupPrimary,
	FieldFromInventoryItemID,
	FieldBudgetID,
	FieldBudgetItemSeqID,
	FieldSupplierProductID,
	FieldProductFeatureID,
	FieldProdCatalogID,
	FieldProductCategoryID,
	FieldIsPromo,
	FieldQuoteID,
	FieldQuoteItemSeqID,
	FieldShoppingListID,
	FieldShoppingListItemSeqID,
	FieldSubscriptionID,
	FieldDeploymentID,
	FieldQuantity,
	FieldCancelQuantity,
	FieldSelectedAmount,
	FieldUnitPrice,
	FieldUnitListPrice,
	FieldUnitAverageCost,
	FieldUnitRecurringPrice,
	FieldIsModifiedPrice,
	FieldRecurringFreqUomID,
	FieldItemDescription,
	FieldComments,
	FieldCorrespondingPoID,
	FieldEstimatedShipDate,
	FieldEstimatedDeliveryDate,
	FieldAutoCancelDate,
	FieldDontCancelSetDate,
	FieldDontCancelSetUserLogin,
	FieldShipBeforeDate,
	FieldShipAfterDate,
	FieldReserveAfterDate,
	FieldCancelBackOrderDate,
	FieldOverrideGlAccountID,
	FieldSalesOpportunityID,
	FieldChangeByUserLoginID,
}

// ForeignKeys holds the SQL foreign-keys that are owned by the "order_items"
// table and are not defined as standalone fields in the schema.
var ForeignKeys = []string{
	"order_header_order_items",
	"order_role_order_items",
	"product_order_items",
	"status_item_order_items",
	"status_item_sync_order_items",
}

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	for i := range ForeignKeys {
		if column == ForeignKeys[i] {
			return true
		}
	}
	return false
}

var (
	// DefaultCreateTime holds the default value on creation for the "create_time" field.
	DefaultCreateTime func() time.Time
	// DefaultUpdateTime holds the default value on creation for the "update_time" field.
	DefaultUpdateTime func() time.Time
	// UpdateDefaultUpdateTime holds the default value on update for the "update_time" field.
	UpdateDefaultUpdateTime func() time.Time
	// SupplierProductIDValidator is a validator for the "supplier_product_id" field. It is called by the builders before save.
	SupplierProductIDValidator func(string) error
	// DefaultEstimatedShipDate holds the default value on creation for the "estimated_ship_date" field.
	DefaultEstimatedShipDate func() time.Time
	// DefaultEstimatedDeliveryDate holds the default value on creation for the "estimated_delivery_date" field.
	DefaultEstimatedDeliveryDate func() time.Time
	// DefaultAutoCancelDate holds the default value on creation for the "auto_cancel_date" field.
	DefaultAutoCancelDate func() time.Time
	// DefaultDontCancelSetDate holds the default value on creation for the "dont_cancel_set_date" field.
	DefaultDontCancelSetDate func() time.Time
	// DefaultShipBeforeDate holds the default value on creation for the "ship_before_date" field.
	DefaultShipBeforeDate func() time.Time
	// DefaultShipAfterDate holds the default value on creation for the "ship_after_date" field.
	DefaultShipAfterDate func() time.Time
	// DefaultReserveAfterDate holds the default value on creation for the "reserve_after_date" field.
	DefaultReserveAfterDate func() time.Time
	// DefaultCancelBackOrderDate holds the default value on creation for the "cancel_back_order_date" field.
	DefaultCancelBackOrderDate func() time.Time
)

// IsItemGroupPrimary defines the type for the "is_item_group_primary" enum field.
type IsItemGroupPrimary string

// IsItemGroupPrimary values.
const (
	IsItemGroupPrimaryYes     IsItemGroupPrimary = "Yes"
	IsItemGroupPrimaryNo      IsItemGroupPrimary = "No"
	IsItemGroupPrimaryUnknown IsItemGroupPrimary = "Unknown"
)

func (iigp IsItemGroupPrimary) String() string {
	return string(iigp)
}

// IsItemGroupPrimaryValidator is a validator for the "is_item_group_primary" field enum values. It is called by the builders before save.
func IsItemGroupPrimaryValidator(iigp IsItemGroupPrimary) error {
	switch iigp {
	case IsItemGroupPrimaryYes, IsItemGroupPrimaryNo, IsItemGroupPrimaryUnknown:
		return nil
	default:
		return fmt.Errorf("orderitem: invalid enum value for is_item_group_primary field: %q", iigp)
	}
}

// IsPromo defines the type for the "is_promo" enum field.
type IsPromo string

// IsPromo values.
const (
	IsPromoYes     IsPromo = "Yes"
	IsPromoNo      IsPromo = "No"
	IsPromoUnknown IsPromo = "Unknown"
)

func (ip IsPromo) String() string {
	return string(ip)
}

// IsPromoValidator is a validator for the "is_promo" field enum values. It is called by the builders before save.
func IsPromoValidator(ip IsPromo) error {
	switch ip {
	case IsPromoYes, IsPromoNo, IsPromoUnknown:
		return nil
	default:
		return fmt.Errorf("orderitem: invalid enum value for is_promo field: %q", ip)
	}
}

// IsModifiedPrice defines the type for the "is_modified_price" enum field.
type IsModifiedPrice string

// IsModifiedPrice values.
const (
	IsModifiedPriceYes     IsModifiedPrice = "Yes"
	IsModifiedPriceNo      IsModifiedPrice = "No"
	IsModifiedPriceUnknown IsModifiedPrice = "Unknown"
)

func (imp IsModifiedPrice) String() string {
	return string(imp)
}

// IsModifiedPriceValidator is a validator for the "is_modified_price" field enum values. It is called by the builders before save.
func IsModifiedPriceValidator(imp IsModifiedPrice) error {
	switch imp {
	case IsModifiedPriceYes, IsModifiedPriceNo, IsModifiedPriceUnknown:
		return nil
	default:
		return fmt.Errorf("orderitem: invalid enum value for is_modified_price field: %q", imp)
	}
}
