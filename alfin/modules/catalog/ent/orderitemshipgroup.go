// Code generated by entc, DO NOT EDIT.

package ent

import (
	"fmt"
	"strings"
	"time"

	"entgo.io/ent/dialect/sql"
	"github.com/samlet/petrel/alfin/modules/catalog/ent/orderheader"
	"github.com/samlet/petrel/alfin/modules/catalog/ent/orderitemshipgroup"
)

// OrderItemShipGroup is the model entity for the OrderItemShipGroup schema.
type OrderItemShipGroup struct {
	config `json:"-"`
	// ID of the ent.
	ID int `json:"id,omitempty"`
	// CreateTime holds the value of the "create_time" field.
	CreateTime time.Time `json:"create_time,omitempty"`
	// UpdateTime holds the value of the "update_time" field.
	UpdateTime time.Time `json:"update_time,omitempty"`
	// StringRef holds the value of the "string_ref" field.
	StringRef string `json:"string_ref,omitempty"`
	// ShipGroupSeqID holds the value of the "ship_group_seq_id" field.
	ShipGroupSeqID int `json:"ship_group_seq_id,omitempty"`
	// ShipmentMethodTypeID holds the value of the "shipment_method_type_id" field.
	ShipmentMethodTypeID int `json:"shipment_method_type_id,omitempty"`
	// SupplierPartyID holds the value of the "supplier_party_id" field.
	SupplierPartyID int `json:"supplier_party_id,omitempty"`
	// SupplierAgreementID holds the value of the "supplier_agreement_id" field.
	SupplierAgreementID int `json:"supplier_agreement_id,omitempty"`
	// VendorPartyID holds the value of the "vendor_party_id" field.
	VendorPartyID int `json:"vendor_party_id,omitempty"`
	// CarrierPartyID holds the value of the "carrier_party_id" field.
	CarrierPartyID int `json:"carrier_party_id,omitempty"`
	// CarrierRoleTypeID holds the value of the "carrier_role_type_id" field.
	CarrierRoleTypeID int `json:"carrier_role_type_id,omitempty"`
	// FacilityID holds the value of the "facility_id" field.
	FacilityID int `json:"facility_id,omitempty"`
	// ContactMechID holds the value of the "contact_mech_id" field.
	ContactMechID int `json:"contact_mech_id,omitempty"`
	// TelecomContactMechID holds the value of the "telecom_contact_mech_id" field.
	TelecomContactMechID int `json:"telecom_contact_mech_id,omitempty"`
	// TrackingNumber holds the value of the "tracking_number" field.
	TrackingNumber string `json:"tracking_number,omitempty"`
	// ShippingInstructions holds the value of the "shipping_instructions" field.
	ShippingInstructions string `json:"shipping_instructions,omitempty"`
	// MaySplit holds the value of the "may_split" field.
	MaySplit orderitemshipgroup.MaySplit `json:"may_split,omitempty"`
	// GiftMessage holds the value of the "gift_message" field.
	GiftMessage string `json:"gift_message,omitempty"`
	// IsGift holds the value of the "is_gift" field.
	IsGift orderitemshipgroup.IsGift `json:"is_gift,omitempty"`
	// ShipAfterDate holds the value of the "ship_after_date" field.
	ShipAfterDate time.Time `json:"ship_after_date,omitempty"`
	// ShipByDate holds the value of the "ship_by_date" field.
	ShipByDate time.Time `json:"ship_by_date,omitempty"`
	// EstimatedShipDate holds the value of the "estimated_ship_date" field.
	EstimatedShipDate time.Time `json:"estimated_ship_date,omitempty"`
	// EstimatedDeliveryDate holds the value of the "estimated_delivery_date" field.
	EstimatedDeliveryDate time.Time `json:"estimated_delivery_date,omitempty"`
	// Edges holds the relations/edges for other nodes in the graph.
	// The values are being populated by the OrderItemShipGroupQuery when eager-loading is set.
	Edges                               OrderItemShipGroupEdges `json:"edges"`
	order_header_order_item_ship_groups *int
}

// OrderItemShipGroupEdges holds the relations/edges for other nodes in the graph.
type OrderItemShipGroupEdges struct {
	// OrderHeader holds the value of the order_header edge.
	OrderHeader *OrderHeader `json:"order_header,omitempty"`
	// OrderAdjustments holds the value of the order_adjustments edge.
	OrderAdjustments []*OrderAdjustment `json:"order_adjustments,omitempty"`
	// OrderItemShipGroupAssocs holds the value of the order_item_ship_group_assocs edge.
	OrderItemShipGroupAssocs []*OrderItemShipGroupAssoc `json:"order_item_ship_group_assocs,omitempty"`
	// OrderItemShipGrpInvRes holds the value of the order_item_ship_grp_inv_res edge.
	OrderItemShipGrpInvRes []*OrderItemShipGrpInvRes `json:"order_item_ship_grp_inv_res,omitempty"`
	// OrderPaymentPreferences holds the value of the order_payment_preferences edge.
	OrderPaymentPreferences []*OrderPaymentPreference `json:"order_payment_preferences,omitempty"`
	// loadedTypes holds the information for reporting if a
	// type was loaded (or requested) in eager-loading or not.
	loadedTypes [5]bool
}

// OrderHeaderOrErr returns the OrderHeader value or an error if the edge
// was not loaded in eager-loading, or loaded but was not found.
func (e OrderItemShipGroupEdges) OrderHeaderOrErr() (*OrderHeader, error) {
	if e.loadedTypes[0] {
		if e.OrderHeader == nil {
			// The edge order_header was loaded in eager-loading,
			// but was not found.
			return nil, &NotFoundError{label: orderheader.Label}
		}
		return e.OrderHeader, nil
	}
	return nil, &NotLoadedError{edge: "order_header"}
}

// OrderAdjustmentsOrErr returns the OrderAdjustments value or an error if the edge
// was not loaded in eager-loading.
func (e OrderItemShipGroupEdges) OrderAdjustmentsOrErr() ([]*OrderAdjustment, error) {
	if e.loadedTypes[1] {
		return e.OrderAdjustments, nil
	}
	return nil, &NotLoadedError{edge: "order_adjustments"}
}

// OrderItemShipGroupAssocsOrErr returns the OrderItemShipGroupAssocs value or an error if the edge
// was not loaded in eager-loading.
func (e OrderItemShipGroupEdges) OrderItemShipGroupAssocsOrErr() ([]*OrderItemShipGroupAssoc, error) {
	if e.loadedTypes[2] {
		return e.OrderItemShipGroupAssocs, nil
	}
	return nil, &NotLoadedError{edge: "order_item_ship_group_assocs"}
}

// OrderItemShipGrpInvResOrErr returns the OrderItemShipGrpInvRes value or an error if the edge
// was not loaded in eager-loading.
func (e OrderItemShipGroupEdges) OrderItemShipGrpInvResOrErr() ([]*OrderItemShipGrpInvRes, error) {
	if e.loadedTypes[3] {
		return e.OrderItemShipGrpInvRes, nil
	}
	return nil, &NotLoadedError{edge: "order_item_ship_grp_inv_res"}
}

// OrderPaymentPreferencesOrErr returns the OrderPaymentPreferences value or an error if the edge
// was not loaded in eager-loading.
func (e OrderItemShipGroupEdges) OrderPaymentPreferencesOrErr() ([]*OrderPaymentPreference, error) {
	if e.loadedTypes[4] {
		return e.OrderPaymentPreferences, nil
	}
	return nil, &NotLoadedError{edge: "order_payment_preferences"}
}

// scanValues returns the types for scanning values from sql.Rows.
func (*OrderItemShipGroup) scanValues(columns []string) ([]interface{}, error) {
	values := make([]interface{}, len(columns))
	for i := range columns {
		switch columns[i] {
		case orderitemshipgroup.FieldID, orderitemshipgroup.FieldShipGroupSeqID, orderitemshipgroup.FieldShipmentMethodTypeID, orderitemshipgroup.FieldSupplierPartyID, orderitemshipgroup.FieldSupplierAgreementID, orderitemshipgroup.FieldVendorPartyID, orderitemshipgroup.FieldCarrierPartyID, orderitemshipgroup.FieldCarrierRoleTypeID, orderitemshipgroup.FieldFacilityID, orderitemshipgroup.FieldContactMechID, orderitemshipgroup.FieldTelecomContactMechID:
			values[i] = new(sql.NullInt64)
		case orderitemshipgroup.FieldStringRef, orderitemshipgroup.FieldTrackingNumber, orderitemshipgroup.FieldShippingInstructions, orderitemshipgroup.FieldMaySplit, orderitemshipgroup.FieldGiftMessage, orderitemshipgroup.FieldIsGift:
			values[i] = new(sql.NullString)
		case orderitemshipgroup.FieldCreateTime, orderitemshipgroup.FieldUpdateTime, orderitemshipgroup.FieldShipAfterDate, orderitemshipgroup.FieldShipByDate, orderitemshipgroup.FieldEstimatedShipDate, orderitemshipgroup.FieldEstimatedDeliveryDate:
			values[i] = new(sql.NullTime)
		case orderitemshipgroup.ForeignKeys[0]: // order_header_order_item_ship_groups
			values[i] = new(sql.NullInt64)
		default:
			return nil, fmt.Errorf("unexpected column %q for type OrderItemShipGroup", columns[i])
		}
	}
	return values, nil
}

// assignValues assigns the values that were returned from sql.Rows (after scanning)
// to the OrderItemShipGroup fields.
func (oisg *OrderItemShipGroup) assignValues(columns []string, values []interface{}) error {
	if m, n := len(values), len(columns); m < n {
		return fmt.Errorf("mismatch number of scan values: %d != %d", m, n)
	}
	for i := range columns {
		switch columns[i] {
		case orderitemshipgroup.FieldID:
			value, ok := values[i].(*sql.NullInt64)
			if !ok {
				return fmt.Errorf("unexpected type %T for field id", value)
			}
			oisg.ID = int(value.Int64)
		case orderitemshipgroup.FieldCreateTime:
			if value, ok := values[i].(*sql.NullTime); !ok {
				return fmt.Errorf("unexpected type %T for field create_time", values[i])
			} else if value.Valid {
				oisg.CreateTime = value.Time
			}
		case orderitemshipgroup.FieldUpdateTime:
			if value, ok := values[i].(*sql.NullTime); !ok {
				return fmt.Errorf("unexpected type %T for field update_time", values[i])
			} else if value.Valid {
				oisg.UpdateTime = value.Time
			}
		case orderitemshipgroup.FieldStringRef:
			if value, ok := values[i].(*sql.NullString); !ok {
				return fmt.Errorf("unexpected type %T for field string_ref", values[i])
			} else if value.Valid {
				oisg.StringRef = value.String
			}
		case orderitemshipgroup.FieldShipGroupSeqID:
			if value, ok := values[i].(*sql.NullInt64); !ok {
				return fmt.Errorf("unexpected type %T for field ship_group_seq_id", values[i])
			} else if value.Valid {
				oisg.ShipGroupSeqID = int(value.Int64)
			}
		case orderitemshipgroup.FieldShipmentMethodTypeID:
			if value, ok := values[i].(*sql.NullInt64); !ok {
				return fmt.Errorf("unexpected type %T for field shipment_method_type_id", values[i])
			} else if value.Valid {
				oisg.ShipmentMethodTypeID = int(value.Int64)
			}
		case orderitemshipgroup.FieldSupplierPartyID:
			if value, ok := values[i].(*sql.NullInt64); !ok {
				return fmt.Errorf("unexpected type %T for field supplier_party_id", values[i])
			} else if value.Valid {
				oisg.SupplierPartyID = int(value.Int64)
			}
		case orderitemshipgroup.FieldSupplierAgreementID:
			if value, ok := values[i].(*sql.NullInt64); !ok {
				return fmt.Errorf("unexpected type %T for field supplier_agreement_id", values[i])
			} else if value.Valid {
				oisg.SupplierAgreementID = int(value.Int64)
			}
		case orderitemshipgroup.FieldVendorPartyID:
			if value, ok := values[i].(*sql.NullInt64); !ok {
				return fmt.Errorf("unexpected type %T for field vendor_party_id", values[i])
			} else if value.Valid {
				oisg.VendorPartyID = int(value.Int64)
			}
		case orderitemshipgroup.FieldCarrierPartyID:
			if value, ok := values[i].(*sql.NullInt64); !ok {
				return fmt.Errorf("unexpected type %T for field carrier_party_id", values[i])
			} else if value.Valid {
				oisg.CarrierPartyID = int(value.Int64)
			}
		case orderitemshipgroup.FieldCarrierRoleTypeID:
			if value, ok := values[i].(*sql.NullInt64); !ok {
				return fmt.Errorf("unexpected type %T for field carrier_role_type_id", values[i])
			} else if value.Valid {
				oisg.CarrierRoleTypeID = int(value.Int64)
			}
		case orderitemshipgroup.FieldFacilityID:
			if value, ok := values[i].(*sql.NullInt64); !ok {
				return fmt.Errorf("unexpected type %T for field facility_id", values[i])
			} else if value.Valid {
				oisg.FacilityID = int(value.Int64)
			}
		case orderitemshipgroup.FieldContactMechID:
			if value, ok := values[i].(*sql.NullInt64); !ok {
				return fmt.Errorf("unexpected type %T for field contact_mech_id", values[i])
			} else if value.Valid {
				oisg.ContactMechID = int(value.Int64)
			}
		case orderitemshipgroup.FieldTelecomContactMechID:
			if value, ok := values[i].(*sql.NullInt64); !ok {
				return fmt.Errorf("unexpected type %T for field telecom_contact_mech_id", values[i])
			} else if value.Valid {
				oisg.TelecomContactMechID = int(value.Int64)
			}
		case orderitemshipgroup.FieldTrackingNumber:
			if value, ok := values[i].(*sql.NullString); !ok {
				return fmt.Errorf("unexpected type %T for field tracking_number", values[i])
			} else if value.Valid {
				oisg.TrackingNumber = value.String
			}
		case orderitemshipgroup.FieldShippingInstructions:
			if value, ok := values[i].(*sql.NullString); !ok {
				return fmt.Errorf("unexpected type %T for field shipping_instructions", values[i])
			} else if value.Valid {
				oisg.ShippingInstructions = value.String
			}
		case orderitemshipgroup.FieldMaySplit:
			if value, ok := values[i].(*sql.NullString); !ok {
				return fmt.Errorf("unexpected type %T for field may_split", values[i])
			} else if value.Valid {
				oisg.MaySplit = orderitemshipgroup.MaySplit(value.String)
			}
		case orderitemshipgroup.FieldGiftMessage:
			if value, ok := values[i].(*sql.NullString); !ok {
				return fmt.Errorf("unexpected type %T for field gift_message", values[i])
			} else if value.Valid {
				oisg.GiftMessage = value.String
			}
		case orderitemshipgroup.FieldIsGift:
			if value, ok := values[i].(*sql.NullString); !ok {
				return fmt.Errorf("unexpected type %T for field is_gift", values[i])
			} else if value.Valid {
				oisg.IsGift = orderitemshipgroup.IsGift(value.String)
			}
		case orderitemshipgroup.FieldShipAfterDate:
			if value, ok := values[i].(*sql.NullTime); !ok {
				return fmt.Errorf("unexpected type %T for field ship_after_date", values[i])
			} else if value.Valid {
				oisg.ShipAfterDate = value.Time
			}
		case orderitemshipgroup.FieldShipByDate:
			if value, ok := values[i].(*sql.NullTime); !ok {
				return fmt.Errorf("unexpected type %T for field ship_by_date", values[i])
			} else if value.Valid {
				oisg.ShipByDate = value.Time
			}
		case orderitemshipgroup.FieldEstimatedShipDate:
			if value, ok := values[i].(*sql.NullTime); !ok {
				return fmt.Errorf("unexpected type %T for field estimated_ship_date", values[i])
			} else if value.Valid {
				oisg.EstimatedShipDate = value.Time
			}
		case orderitemshipgroup.FieldEstimatedDeliveryDate:
			if value, ok := values[i].(*sql.NullTime); !ok {
				return fmt.Errorf("unexpected type %T for field estimated_delivery_date", values[i])
			} else if value.Valid {
				oisg.EstimatedDeliveryDate = value.Time
			}
		case orderitemshipgroup.ForeignKeys[0]:
			if value, ok := values[i].(*sql.NullInt64); !ok {
				return fmt.Errorf("unexpected type %T for edge-field order_header_order_item_ship_groups", value)
			} else if value.Valid {
				oisg.order_header_order_item_ship_groups = new(int)
				*oisg.order_header_order_item_ship_groups = int(value.Int64)
			}
		}
	}
	return nil
}

// QueryOrderHeader queries the "order_header" edge of the OrderItemShipGroup entity.
func (oisg *OrderItemShipGroup) QueryOrderHeader() *OrderHeaderQuery {
	return (&OrderItemShipGroupClient{config: oisg.config}).QueryOrderHeader(oisg)
}

// QueryOrderAdjustments queries the "order_adjustments" edge of the OrderItemShipGroup entity.
func (oisg *OrderItemShipGroup) QueryOrderAdjustments() *OrderAdjustmentQuery {
	return (&OrderItemShipGroupClient{config: oisg.config}).QueryOrderAdjustments(oisg)
}

// QueryOrderItemShipGroupAssocs queries the "order_item_ship_group_assocs" edge of the OrderItemShipGroup entity.
func (oisg *OrderItemShipGroup) QueryOrderItemShipGroupAssocs() *OrderItemShipGroupAssocQuery {
	return (&OrderItemShipGroupClient{config: oisg.config}).QueryOrderItemShipGroupAssocs(oisg)
}

// QueryOrderItemShipGrpInvRes queries the "order_item_ship_grp_inv_res" edge of the OrderItemShipGroup entity.
func (oisg *OrderItemShipGroup) QueryOrderItemShipGrpInvRes() *OrderItemShipGrpInvResQuery {
	return (&OrderItemShipGroupClient{config: oisg.config}).QueryOrderItemShipGrpInvRes(oisg)
}

// QueryOrderPaymentPreferences queries the "order_payment_preferences" edge of the OrderItemShipGroup entity.
func (oisg *OrderItemShipGroup) QueryOrderPaymentPreferences() *OrderPaymentPreferenceQuery {
	return (&OrderItemShipGroupClient{config: oisg.config}).QueryOrderPaymentPreferences(oisg)
}

// Update returns a builder for updating this OrderItemShipGroup.
// Note that you need to call OrderItemShipGroup.Unwrap() before calling this method if this OrderItemShipGroup
// was returned from a transaction, and the transaction was committed or rolled back.
func (oisg *OrderItemShipGroup) Update() *OrderItemShipGroupUpdateOne {
	return (&OrderItemShipGroupClient{config: oisg.config}).UpdateOne(oisg)
}

// Unwrap unwraps the OrderItemShipGroup entity that was returned from a transaction after it was closed,
// so that all future queries will be executed through the driver which created the transaction.
func (oisg *OrderItemShipGroup) Unwrap() *OrderItemShipGroup {
	tx, ok := oisg.config.driver.(*txDriver)
	if !ok {
		panic("ent: OrderItemShipGroup is not a transactional entity")
	}
	oisg.config.driver = tx.drv
	return oisg
}

// String implements the fmt.Stringer.
func (oisg *OrderItemShipGroup) String() string {
	var builder strings.Builder
	builder.WriteString("OrderItemShipGroup(")
	builder.WriteString(fmt.Sprintf("id=%v", oisg.ID))
	builder.WriteString(", create_time=")
	builder.WriteString(oisg.CreateTime.Format(time.ANSIC))
	builder.WriteString(", update_time=")
	builder.WriteString(oisg.UpdateTime.Format(time.ANSIC))
	builder.WriteString(", string_ref=")
	builder.WriteString(oisg.StringRef)
	builder.WriteString(", ship_group_seq_id=")
	builder.WriteString(fmt.Sprintf("%v", oisg.ShipGroupSeqID))
	builder.WriteString(", shipment_method_type_id=")
	builder.WriteString(fmt.Sprintf("%v", oisg.ShipmentMethodTypeID))
	builder.WriteString(", supplier_party_id=")
	builder.WriteString(fmt.Sprintf("%v", oisg.SupplierPartyID))
	builder.WriteString(", supplier_agreement_id=")
	builder.WriteString(fmt.Sprintf("%v", oisg.SupplierAgreementID))
	builder.WriteString(", vendor_party_id=")
	builder.WriteString(fmt.Sprintf("%v", oisg.VendorPartyID))
	builder.WriteString(", carrier_party_id=")
	builder.WriteString(fmt.Sprintf("%v", oisg.CarrierPartyID))
	builder.WriteString(", carrier_role_type_id=")
	builder.WriteString(fmt.Sprintf("%v", oisg.CarrierRoleTypeID))
	builder.WriteString(", facility_id=")
	builder.WriteString(fmt.Sprintf("%v", oisg.FacilityID))
	builder.WriteString(", contact_mech_id=")
	builder.WriteString(fmt.Sprintf("%v", oisg.ContactMechID))
	builder.WriteString(", telecom_contact_mech_id=")
	builder.WriteString(fmt.Sprintf("%v", oisg.TelecomContactMechID))
	builder.WriteString(", tracking_number=")
	builder.WriteString(oisg.TrackingNumber)
	builder.WriteString(", shipping_instructions=")
	builder.WriteString(oisg.ShippingInstructions)
	builder.WriteString(", may_split=")
	builder.WriteString(fmt.Sprintf("%v", oisg.MaySplit))
	builder.WriteString(", gift_message=")
	builder.WriteString(oisg.GiftMessage)
	builder.WriteString(", is_gift=")
	builder.WriteString(fmt.Sprintf("%v", oisg.IsGift))
	builder.WriteString(", ship_after_date=")
	builder.WriteString(oisg.ShipAfterDate.Format(time.ANSIC))
	builder.WriteString(", ship_by_date=")
	builder.WriteString(oisg.ShipByDate.Format(time.ANSIC))
	builder.WriteString(", estimated_ship_date=")
	builder.WriteString(oisg.EstimatedShipDate.Format(time.ANSIC))
	builder.WriteString(", estimated_delivery_date=")
	builder.WriteString(oisg.EstimatedDeliveryDate.Format(time.ANSIC))
	builder.WriteByte(')')
	return builder.String()
}

// OrderItemShipGroups is a parsable slice of OrderItemShipGroup.
type OrderItemShipGroups []*OrderItemShipGroup

func (oisg OrderItemShipGroups) config(cfg config) {
	for _i := range oisg {
		oisg[_i].config = cfg
	}
}
