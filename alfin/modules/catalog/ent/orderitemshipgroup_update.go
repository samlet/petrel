// Code generated by entc, DO NOT EDIT.

package ent

import (
	"context"
	"fmt"
	"time"

	"entgo.io/ent/dialect/sql"
	"entgo.io/ent/dialect/sql/sqlgraph"
	"entgo.io/ent/schema/field"
	"github.com/samlet/petrel/alfin/modules/catalog/ent/orderadjustment"
	"github.com/samlet/petrel/alfin/modules/catalog/ent/orderheader"
	"github.com/samlet/petrel/alfin/modules/catalog/ent/orderitemshipgroup"
	"github.com/samlet/petrel/alfin/modules/catalog/ent/orderitemshipgroupassoc"
	"github.com/samlet/petrel/alfin/modules/catalog/ent/orderitemshipgrpinvres"
	"github.com/samlet/petrel/alfin/modules/catalog/ent/orderpaymentpreference"
	"github.com/samlet/petrel/alfin/modules/catalog/ent/predicate"
)

// OrderItemShipGroupUpdate is the builder for updating OrderItemShipGroup entities.
type OrderItemShipGroupUpdate struct {
	config
	hooks    []Hook
	mutation *OrderItemShipGroupMutation
}

// Where adds a new predicate for the OrderItemShipGroupUpdate builder.
func (oisgu *OrderItemShipGroupUpdate) Where(ps ...predicate.OrderItemShipGroup) *OrderItemShipGroupUpdate {
	oisgu.mutation.predicates = append(oisgu.mutation.predicates, ps...)
	return oisgu
}

// SetStringRef sets the "string_ref" field.
func (oisgu *OrderItemShipGroupUpdate) SetStringRef(s string) *OrderItemShipGroupUpdate {
	oisgu.mutation.SetStringRef(s)
	return oisgu
}

// SetNillableStringRef sets the "string_ref" field if the given value is not nil.
func (oisgu *OrderItemShipGroupUpdate) SetNillableStringRef(s *string) *OrderItemShipGroupUpdate {
	if s != nil {
		oisgu.SetStringRef(*s)
	}
	return oisgu
}

// ClearStringRef clears the value of the "string_ref" field.
func (oisgu *OrderItemShipGroupUpdate) ClearStringRef() *OrderItemShipGroupUpdate {
	oisgu.mutation.ClearStringRef()
	return oisgu
}

// SetShipGroupSeqID sets the "ship_group_seq_id" field.
func (oisgu *OrderItemShipGroupUpdate) SetShipGroupSeqID(i int) *OrderItemShipGroupUpdate {
	oisgu.mutation.ResetShipGroupSeqID()
	oisgu.mutation.SetShipGroupSeqID(i)
	return oisgu
}

// AddShipGroupSeqID adds i to the "ship_group_seq_id" field.
func (oisgu *OrderItemShipGroupUpdate) AddShipGroupSeqID(i int) *OrderItemShipGroupUpdate {
	oisgu.mutation.AddShipGroupSeqID(i)
	return oisgu
}

// SetShipmentMethodTypeID sets the "shipment_method_type_id" field.
func (oisgu *OrderItemShipGroupUpdate) SetShipmentMethodTypeID(i int) *OrderItemShipGroupUpdate {
	oisgu.mutation.ResetShipmentMethodTypeID()
	oisgu.mutation.SetShipmentMethodTypeID(i)
	return oisgu
}

// SetNillableShipmentMethodTypeID sets the "shipment_method_type_id" field if the given value is not nil.
func (oisgu *OrderItemShipGroupUpdate) SetNillableShipmentMethodTypeID(i *int) *OrderItemShipGroupUpdate {
	if i != nil {
		oisgu.SetShipmentMethodTypeID(*i)
	}
	return oisgu
}

// AddShipmentMethodTypeID adds i to the "shipment_method_type_id" field.
func (oisgu *OrderItemShipGroupUpdate) AddShipmentMethodTypeID(i int) *OrderItemShipGroupUpdate {
	oisgu.mutation.AddShipmentMethodTypeID(i)
	return oisgu
}

// ClearShipmentMethodTypeID clears the value of the "shipment_method_type_id" field.
func (oisgu *OrderItemShipGroupUpdate) ClearShipmentMethodTypeID() *OrderItemShipGroupUpdate {
	oisgu.mutation.ClearShipmentMethodTypeID()
	return oisgu
}

// SetSupplierPartyID sets the "supplier_party_id" field.
func (oisgu *OrderItemShipGroupUpdate) SetSupplierPartyID(i int) *OrderItemShipGroupUpdate {
	oisgu.mutation.ResetSupplierPartyID()
	oisgu.mutation.SetSupplierPartyID(i)
	return oisgu
}

// SetNillableSupplierPartyID sets the "supplier_party_id" field if the given value is not nil.
func (oisgu *OrderItemShipGroupUpdate) SetNillableSupplierPartyID(i *int) *OrderItemShipGroupUpdate {
	if i != nil {
		oisgu.SetSupplierPartyID(*i)
	}
	return oisgu
}

// AddSupplierPartyID adds i to the "supplier_party_id" field.
func (oisgu *OrderItemShipGroupUpdate) AddSupplierPartyID(i int) *OrderItemShipGroupUpdate {
	oisgu.mutation.AddSupplierPartyID(i)
	return oisgu
}

// ClearSupplierPartyID clears the value of the "supplier_party_id" field.
func (oisgu *OrderItemShipGroupUpdate) ClearSupplierPartyID() *OrderItemShipGroupUpdate {
	oisgu.mutation.ClearSupplierPartyID()
	return oisgu
}

// SetSupplierAgreementID sets the "supplier_agreement_id" field.
func (oisgu *OrderItemShipGroupUpdate) SetSupplierAgreementID(i int) *OrderItemShipGroupUpdate {
	oisgu.mutation.ResetSupplierAgreementID()
	oisgu.mutation.SetSupplierAgreementID(i)
	return oisgu
}

// SetNillableSupplierAgreementID sets the "supplier_agreement_id" field if the given value is not nil.
func (oisgu *OrderItemShipGroupUpdate) SetNillableSupplierAgreementID(i *int) *OrderItemShipGroupUpdate {
	if i != nil {
		oisgu.SetSupplierAgreementID(*i)
	}
	return oisgu
}

// AddSupplierAgreementID adds i to the "supplier_agreement_id" field.
func (oisgu *OrderItemShipGroupUpdate) AddSupplierAgreementID(i int) *OrderItemShipGroupUpdate {
	oisgu.mutation.AddSupplierAgreementID(i)
	return oisgu
}

// ClearSupplierAgreementID clears the value of the "supplier_agreement_id" field.
func (oisgu *OrderItemShipGroupUpdate) ClearSupplierAgreementID() *OrderItemShipGroupUpdate {
	oisgu.mutation.ClearSupplierAgreementID()
	return oisgu
}

// SetVendorPartyID sets the "vendor_party_id" field.
func (oisgu *OrderItemShipGroupUpdate) SetVendorPartyID(i int) *OrderItemShipGroupUpdate {
	oisgu.mutation.ResetVendorPartyID()
	oisgu.mutation.SetVendorPartyID(i)
	return oisgu
}

// SetNillableVendorPartyID sets the "vendor_party_id" field if the given value is not nil.
func (oisgu *OrderItemShipGroupUpdate) SetNillableVendorPartyID(i *int) *OrderItemShipGroupUpdate {
	if i != nil {
		oisgu.SetVendorPartyID(*i)
	}
	return oisgu
}

// AddVendorPartyID adds i to the "vendor_party_id" field.
func (oisgu *OrderItemShipGroupUpdate) AddVendorPartyID(i int) *OrderItemShipGroupUpdate {
	oisgu.mutation.AddVendorPartyID(i)
	return oisgu
}

// ClearVendorPartyID clears the value of the "vendor_party_id" field.
func (oisgu *OrderItemShipGroupUpdate) ClearVendorPartyID() *OrderItemShipGroupUpdate {
	oisgu.mutation.ClearVendorPartyID()
	return oisgu
}

// SetCarrierPartyID sets the "carrier_party_id" field.
func (oisgu *OrderItemShipGroupUpdate) SetCarrierPartyID(i int) *OrderItemShipGroupUpdate {
	oisgu.mutation.ResetCarrierPartyID()
	oisgu.mutation.SetCarrierPartyID(i)
	return oisgu
}

// SetNillableCarrierPartyID sets the "carrier_party_id" field if the given value is not nil.
func (oisgu *OrderItemShipGroupUpdate) SetNillableCarrierPartyID(i *int) *OrderItemShipGroupUpdate {
	if i != nil {
		oisgu.SetCarrierPartyID(*i)
	}
	return oisgu
}

// AddCarrierPartyID adds i to the "carrier_party_id" field.
func (oisgu *OrderItemShipGroupUpdate) AddCarrierPartyID(i int) *OrderItemShipGroupUpdate {
	oisgu.mutation.AddCarrierPartyID(i)
	return oisgu
}

// ClearCarrierPartyID clears the value of the "carrier_party_id" field.
func (oisgu *OrderItemShipGroupUpdate) ClearCarrierPartyID() *OrderItemShipGroupUpdate {
	oisgu.mutation.ClearCarrierPartyID()
	return oisgu
}

// SetCarrierRoleTypeID sets the "carrier_role_type_id" field.
func (oisgu *OrderItemShipGroupUpdate) SetCarrierRoleTypeID(i int) *OrderItemShipGroupUpdate {
	oisgu.mutation.ResetCarrierRoleTypeID()
	oisgu.mutation.SetCarrierRoleTypeID(i)
	return oisgu
}

// SetNillableCarrierRoleTypeID sets the "carrier_role_type_id" field if the given value is not nil.
func (oisgu *OrderItemShipGroupUpdate) SetNillableCarrierRoleTypeID(i *int) *OrderItemShipGroupUpdate {
	if i != nil {
		oisgu.SetCarrierRoleTypeID(*i)
	}
	return oisgu
}

// AddCarrierRoleTypeID adds i to the "carrier_role_type_id" field.
func (oisgu *OrderItemShipGroupUpdate) AddCarrierRoleTypeID(i int) *OrderItemShipGroupUpdate {
	oisgu.mutation.AddCarrierRoleTypeID(i)
	return oisgu
}

// ClearCarrierRoleTypeID clears the value of the "carrier_role_type_id" field.
func (oisgu *OrderItemShipGroupUpdate) ClearCarrierRoleTypeID() *OrderItemShipGroupUpdate {
	oisgu.mutation.ClearCarrierRoleTypeID()
	return oisgu
}

// SetFacilityID sets the "facility_id" field.
func (oisgu *OrderItemShipGroupUpdate) SetFacilityID(i int) *OrderItemShipGroupUpdate {
	oisgu.mutation.ResetFacilityID()
	oisgu.mutation.SetFacilityID(i)
	return oisgu
}

// SetNillableFacilityID sets the "facility_id" field if the given value is not nil.
func (oisgu *OrderItemShipGroupUpdate) SetNillableFacilityID(i *int) *OrderItemShipGroupUpdate {
	if i != nil {
		oisgu.SetFacilityID(*i)
	}
	return oisgu
}

// AddFacilityID adds i to the "facility_id" field.
func (oisgu *OrderItemShipGroupUpdate) AddFacilityID(i int) *OrderItemShipGroupUpdate {
	oisgu.mutation.AddFacilityID(i)
	return oisgu
}

// ClearFacilityID clears the value of the "facility_id" field.
func (oisgu *OrderItemShipGroupUpdate) ClearFacilityID() *OrderItemShipGroupUpdate {
	oisgu.mutation.ClearFacilityID()
	return oisgu
}

// SetContactMechID sets the "contact_mech_id" field.
func (oisgu *OrderItemShipGroupUpdate) SetContactMechID(i int) *OrderItemShipGroupUpdate {
	oisgu.mutation.ResetContactMechID()
	oisgu.mutation.SetContactMechID(i)
	return oisgu
}

// SetNillableContactMechID sets the "contact_mech_id" field if the given value is not nil.
func (oisgu *OrderItemShipGroupUpdate) SetNillableContactMechID(i *int) *OrderItemShipGroupUpdate {
	if i != nil {
		oisgu.SetContactMechID(*i)
	}
	return oisgu
}

// AddContactMechID adds i to the "contact_mech_id" field.
func (oisgu *OrderItemShipGroupUpdate) AddContactMechID(i int) *OrderItemShipGroupUpdate {
	oisgu.mutation.AddContactMechID(i)
	return oisgu
}

// ClearContactMechID clears the value of the "contact_mech_id" field.
func (oisgu *OrderItemShipGroupUpdate) ClearContactMechID() *OrderItemShipGroupUpdate {
	oisgu.mutation.ClearContactMechID()
	return oisgu
}

// SetTelecomContactMechID sets the "telecom_contact_mech_id" field.
func (oisgu *OrderItemShipGroupUpdate) SetTelecomContactMechID(i int) *OrderItemShipGroupUpdate {
	oisgu.mutation.ResetTelecomContactMechID()
	oisgu.mutation.SetTelecomContactMechID(i)
	return oisgu
}

// SetNillableTelecomContactMechID sets the "telecom_contact_mech_id" field if the given value is not nil.
func (oisgu *OrderItemShipGroupUpdate) SetNillableTelecomContactMechID(i *int) *OrderItemShipGroupUpdate {
	if i != nil {
		oisgu.SetTelecomContactMechID(*i)
	}
	return oisgu
}

// AddTelecomContactMechID adds i to the "telecom_contact_mech_id" field.
func (oisgu *OrderItemShipGroupUpdate) AddTelecomContactMechID(i int) *OrderItemShipGroupUpdate {
	oisgu.mutation.AddTelecomContactMechID(i)
	return oisgu
}

// ClearTelecomContactMechID clears the value of the "telecom_contact_mech_id" field.
func (oisgu *OrderItemShipGroupUpdate) ClearTelecomContactMechID() *OrderItemShipGroupUpdate {
	oisgu.mutation.ClearTelecomContactMechID()
	return oisgu
}

// SetTrackingNumber sets the "tracking_number" field.
func (oisgu *OrderItemShipGroupUpdate) SetTrackingNumber(s string) *OrderItemShipGroupUpdate {
	oisgu.mutation.SetTrackingNumber(s)
	return oisgu
}

// SetNillableTrackingNumber sets the "tracking_number" field if the given value is not nil.
func (oisgu *OrderItemShipGroupUpdate) SetNillableTrackingNumber(s *string) *OrderItemShipGroupUpdate {
	if s != nil {
		oisgu.SetTrackingNumber(*s)
	}
	return oisgu
}

// ClearTrackingNumber clears the value of the "tracking_number" field.
func (oisgu *OrderItemShipGroupUpdate) ClearTrackingNumber() *OrderItemShipGroupUpdate {
	oisgu.mutation.ClearTrackingNumber()
	return oisgu
}

// SetShippingInstructions sets the "shipping_instructions" field.
func (oisgu *OrderItemShipGroupUpdate) SetShippingInstructions(s string) *OrderItemShipGroupUpdate {
	oisgu.mutation.SetShippingInstructions(s)
	return oisgu
}

// SetNillableShippingInstructions sets the "shipping_instructions" field if the given value is not nil.
func (oisgu *OrderItemShipGroupUpdate) SetNillableShippingInstructions(s *string) *OrderItemShipGroupUpdate {
	if s != nil {
		oisgu.SetShippingInstructions(*s)
	}
	return oisgu
}

// ClearShippingInstructions clears the value of the "shipping_instructions" field.
func (oisgu *OrderItemShipGroupUpdate) ClearShippingInstructions() *OrderItemShipGroupUpdate {
	oisgu.mutation.ClearShippingInstructions()
	return oisgu
}

// SetMaySplit sets the "may_split" field.
func (oisgu *OrderItemShipGroupUpdate) SetMaySplit(os orderitemshipgroup.MaySplit) *OrderItemShipGroupUpdate {
	oisgu.mutation.SetMaySplit(os)
	return oisgu
}

// SetNillableMaySplit sets the "may_split" field if the given value is not nil.
func (oisgu *OrderItemShipGroupUpdate) SetNillableMaySplit(os *orderitemshipgroup.MaySplit) *OrderItemShipGroupUpdate {
	if os != nil {
		oisgu.SetMaySplit(*os)
	}
	return oisgu
}

// ClearMaySplit clears the value of the "may_split" field.
func (oisgu *OrderItemShipGroupUpdate) ClearMaySplit() *OrderItemShipGroupUpdate {
	oisgu.mutation.ClearMaySplit()
	return oisgu
}

// SetGiftMessage sets the "gift_message" field.
func (oisgu *OrderItemShipGroupUpdate) SetGiftMessage(s string) *OrderItemShipGroupUpdate {
	oisgu.mutation.SetGiftMessage(s)
	return oisgu
}

// SetNillableGiftMessage sets the "gift_message" field if the given value is not nil.
func (oisgu *OrderItemShipGroupUpdate) SetNillableGiftMessage(s *string) *OrderItemShipGroupUpdate {
	if s != nil {
		oisgu.SetGiftMessage(*s)
	}
	return oisgu
}

// ClearGiftMessage clears the value of the "gift_message" field.
func (oisgu *OrderItemShipGroupUpdate) ClearGiftMessage() *OrderItemShipGroupUpdate {
	oisgu.mutation.ClearGiftMessage()
	return oisgu
}

// SetIsGift sets the "is_gift" field.
func (oisgu *OrderItemShipGroupUpdate) SetIsGift(og orderitemshipgroup.IsGift) *OrderItemShipGroupUpdate {
	oisgu.mutation.SetIsGift(og)
	return oisgu
}

// SetNillableIsGift sets the "is_gift" field if the given value is not nil.
func (oisgu *OrderItemShipGroupUpdate) SetNillableIsGift(og *orderitemshipgroup.IsGift) *OrderItemShipGroupUpdate {
	if og != nil {
		oisgu.SetIsGift(*og)
	}
	return oisgu
}

// ClearIsGift clears the value of the "is_gift" field.
func (oisgu *OrderItemShipGroupUpdate) ClearIsGift() *OrderItemShipGroupUpdate {
	oisgu.mutation.ClearIsGift()
	return oisgu
}

// SetShipAfterDate sets the "ship_after_date" field.
func (oisgu *OrderItemShipGroupUpdate) SetShipAfterDate(t time.Time) *OrderItemShipGroupUpdate {
	oisgu.mutation.SetShipAfterDate(t)
	return oisgu
}

// SetNillableShipAfterDate sets the "ship_after_date" field if the given value is not nil.
func (oisgu *OrderItemShipGroupUpdate) SetNillableShipAfterDate(t *time.Time) *OrderItemShipGroupUpdate {
	if t != nil {
		oisgu.SetShipAfterDate(*t)
	}
	return oisgu
}

// ClearShipAfterDate clears the value of the "ship_after_date" field.
func (oisgu *OrderItemShipGroupUpdate) ClearShipAfterDate() *OrderItemShipGroupUpdate {
	oisgu.mutation.ClearShipAfterDate()
	return oisgu
}

// SetShipByDate sets the "ship_by_date" field.
func (oisgu *OrderItemShipGroupUpdate) SetShipByDate(t time.Time) *OrderItemShipGroupUpdate {
	oisgu.mutation.SetShipByDate(t)
	return oisgu
}

// SetNillableShipByDate sets the "ship_by_date" field if the given value is not nil.
func (oisgu *OrderItemShipGroupUpdate) SetNillableShipByDate(t *time.Time) *OrderItemShipGroupUpdate {
	if t != nil {
		oisgu.SetShipByDate(*t)
	}
	return oisgu
}

// ClearShipByDate clears the value of the "ship_by_date" field.
func (oisgu *OrderItemShipGroupUpdate) ClearShipByDate() *OrderItemShipGroupUpdate {
	oisgu.mutation.ClearShipByDate()
	return oisgu
}

// SetEstimatedShipDate sets the "estimated_ship_date" field.
func (oisgu *OrderItemShipGroupUpdate) SetEstimatedShipDate(t time.Time) *OrderItemShipGroupUpdate {
	oisgu.mutation.SetEstimatedShipDate(t)
	return oisgu
}

// SetNillableEstimatedShipDate sets the "estimated_ship_date" field if the given value is not nil.
func (oisgu *OrderItemShipGroupUpdate) SetNillableEstimatedShipDate(t *time.Time) *OrderItemShipGroupUpdate {
	if t != nil {
		oisgu.SetEstimatedShipDate(*t)
	}
	return oisgu
}

// ClearEstimatedShipDate clears the value of the "estimated_ship_date" field.
func (oisgu *OrderItemShipGroupUpdate) ClearEstimatedShipDate() *OrderItemShipGroupUpdate {
	oisgu.mutation.ClearEstimatedShipDate()
	return oisgu
}

// SetEstimatedDeliveryDate sets the "estimated_delivery_date" field.
func (oisgu *OrderItemShipGroupUpdate) SetEstimatedDeliveryDate(t time.Time) *OrderItemShipGroupUpdate {
	oisgu.mutation.SetEstimatedDeliveryDate(t)
	return oisgu
}

// SetNillableEstimatedDeliveryDate sets the "estimated_delivery_date" field if the given value is not nil.
func (oisgu *OrderItemShipGroupUpdate) SetNillableEstimatedDeliveryDate(t *time.Time) *OrderItemShipGroupUpdate {
	if t != nil {
		oisgu.SetEstimatedDeliveryDate(*t)
	}
	return oisgu
}

// ClearEstimatedDeliveryDate clears the value of the "estimated_delivery_date" field.
func (oisgu *OrderItemShipGroupUpdate) ClearEstimatedDeliveryDate() *OrderItemShipGroupUpdate {
	oisgu.mutation.ClearEstimatedDeliveryDate()
	return oisgu
}

// SetOrderHeaderID sets the "order_header" edge to the OrderHeader entity by ID.
func (oisgu *OrderItemShipGroupUpdate) SetOrderHeaderID(id int) *OrderItemShipGroupUpdate {
	oisgu.mutation.SetOrderHeaderID(id)
	return oisgu
}

// SetNillableOrderHeaderID sets the "order_header" edge to the OrderHeader entity by ID if the given value is not nil.
func (oisgu *OrderItemShipGroupUpdate) SetNillableOrderHeaderID(id *int) *OrderItemShipGroupUpdate {
	if id != nil {
		oisgu = oisgu.SetOrderHeaderID(*id)
	}
	return oisgu
}

// SetOrderHeader sets the "order_header" edge to the OrderHeader entity.
func (oisgu *OrderItemShipGroupUpdate) SetOrderHeader(o *OrderHeader) *OrderItemShipGroupUpdate {
	return oisgu.SetOrderHeaderID(o.ID)
}

// AddOrderAdjustmentIDs adds the "order_adjustments" edge to the OrderAdjustment entity by IDs.
func (oisgu *OrderItemShipGroupUpdate) AddOrderAdjustmentIDs(ids ...int) *OrderItemShipGroupUpdate {
	oisgu.mutation.AddOrderAdjustmentIDs(ids...)
	return oisgu
}

// AddOrderAdjustments adds the "order_adjustments" edges to the OrderAdjustment entity.
func (oisgu *OrderItemShipGroupUpdate) AddOrderAdjustments(o ...*OrderAdjustment) *OrderItemShipGroupUpdate {
	ids := make([]int, len(o))
	for i := range o {
		ids[i] = o[i].ID
	}
	return oisgu.AddOrderAdjustmentIDs(ids...)
}

// AddOrderItemShipGroupAssocIDs adds the "order_item_ship_group_assocs" edge to the OrderItemShipGroupAssoc entity by IDs.
func (oisgu *OrderItemShipGroupUpdate) AddOrderItemShipGroupAssocIDs(ids ...int) *OrderItemShipGroupUpdate {
	oisgu.mutation.AddOrderItemShipGroupAssocIDs(ids...)
	return oisgu
}

// AddOrderItemShipGroupAssocs adds the "order_item_ship_group_assocs" edges to the OrderItemShipGroupAssoc entity.
func (oisgu *OrderItemShipGroupUpdate) AddOrderItemShipGroupAssocs(o ...*OrderItemShipGroupAssoc) *OrderItemShipGroupUpdate {
	ids := make([]int, len(o))
	for i := range o {
		ids[i] = o[i].ID
	}
	return oisgu.AddOrderItemShipGroupAssocIDs(ids...)
}

// AddOrderItemShipGrpInvReIDs adds the "order_item_ship_grp_inv_res" edge to the OrderItemShipGrpInvRes entity by IDs.
func (oisgu *OrderItemShipGroupUpdate) AddOrderItemShipGrpInvReIDs(ids ...int) *OrderItemShipGroupUpdate {
	oisgu.mutation.AddOrderItemShipGrpInvReIDs(ids...)
	return oisgu
}

// AddOrderItemShipGrpInvRes adds the "order_item_ship_grp_inv_res" edges to the OrderItemShipGrpInvRes entity.
func (oisgu *OrderItemShipGroupUpdate) AddOrderItemShipGrpInvRes(o ...*OrderItemShipGrpInvRes) *OrderItemShipGroupUpdate {
	ids := make([]int, len(o))
	for i := range o {
		ids[i] = o[i].ID
	}
	return oisgu.AddOrderItemShipGrpInvReIDs(ids...)
}

// AddOrderPaymentPreferenceIDs adds the "order_payment_preferences" edge to the OrderPaymentPreference entity by IDs.
func (oisgu *OrderItemShipGroupUpdate) AddOrderPaymentPreferenceIDs(ids ...int) *OrderItemShipGroupUpdate {
	oisgu.mutation.AddOrderPaymentPreferenceIDs(ids...)
	return oisgu
}

// AddOrderPaymentPreferences adds the "order_payment_preferences" edges to the OrderPaymentPreference entity.
func (oisgu *OrderItemShipGroupUpdate) AddOrderPaymentPreferences(o ...*OrderPaymentPreference) *OrderItemShipGroupUpdate {
	ids := make([]int, len(o))
	for i := range o {
		ids[i] = o[i].ID
	}
	return oisgu.AddOrderPaymentPreferenceIDs(ids...)
}

// Mutation returns the OrderItemShipGroupMutation object of the builder.
func (oisgu *OrderItemShipGroupUpdate) Mutation() *OrderItemShipGroupMutation {
	return oisgu.mutation
}

// ClearOrderHeader clears the "order_header" edge to the OrderHeader entity.
func (oisgu *OrderItemShipGroupUpdate) ClearOrderHeader() *OrderItemShipGroupUpdate {
	oisgu.mutation.ClearOrderHeader()
	return oisgu
}

// ClearOrderAdjustments clears all "order_adjustments" edges to the OrderAdjustment entity.
func (oisgu *OrderItemShipGroupUpdate) ClearOrderAdjustments() *OrderItemShipGroupUpdate {
	oisgu.mutation.ClearOrderAdjustments()
	return oisgu
}

// RemoveOrderAdjustmentIDs removes the "order_adjustments" edge to OrderAdjustment entities by IDs.
func (oisgu *OrderItemShipGroupUpdate) RemoveOrderAdjustmentIDs(ids ...int) *OrderItemShipGroupUpdate {
	oisgu.mutation.RemoveOrderAdjustmentIDs(ids...)
	return oisgu
}

// RemoveOrderAdjustments removes "order_adjustments" edges to OrderAdjustment entities.
func (oisgu *OrderItemShipGroupUpdate) RemoveOrderAdjustments(o ...*OrderAdjustment) *OrderItemShipGroupUpdate {
	ids := make([]int, len(o))
	for i := range o {
		ids[i] = o[i].ID
	}
	return oisgu.RemoveOrderAdjustmentIDs(ids...)
}

// ClearOrderItemShipGroupAssocs clears all "order_item_ship_group_assocs" edges to the OrderItemShipGroupAssoc entity.
func (oisgu *OrderItemShipGroupUpdate) ClearOrderItemShipGroupAssocs() *OrderItemShipGroupUpdate {
	oisgu.mutation.ClearOrderItemShipGroupAssocs()
	return oisgu
}

// RemoveOrderItemShipGroupAssocIDs removes the "order_item_ship_group_assocs" edge to OrderItemShipGroupAssoc entities by IDs.
func (oisgu *OrderItemShipGroupUpdate) RemoveOrderItemShipGroupAssocIDs(ids ...int) *OrderItemShipGroupUpdate {
	oisgu.mutation.RemoveOrderItemShipGroupAssocIDs(ids...)
	return oisgu
}

// RemoveOrderItemShipGroupAssocs removes "order_item_ship_group_assocs" edges to OrderItemShipGroupAssoc entities.
func (oisgu *OrderItemShipGroupUpdate) RemoveOrderItemShipGroupAssocs(o ...*OrderItemShipGroupAssoc) *OrderItemShipGroupUpdate {
	ids := make([]int, len(o))
	for i := range o {
		ids[i] = o[i].ID
	}
	return oisgu.RemoveOrderItemShipGroupAssocIDs(ids...)
}

// ClearOrderItemShipGrpInvRes clears all "order_item_ship_grp_inv_res" edges to the OrderItemShipGrpInvRes entity.
func (oisgu *OrderItemShipGroupUpdate) ClearOrderItemShipGrpInvRes() *OrderItemShipGroupUpdate {
	oisgu.mutation.ClearOrderItemShipGrpInvRes()
	return oisgu
}

// RemoveOrderItemShipGrpInvReIDs removes the "order_item_ship_grp_inv_res" edge to OrderItemShipGrpInvRes entities by IDs.
func (oisgu *OrderItemShipGroupUpdate) RemoveOrderItemShipGrpInvReIDs(ids ...int) *OrderItemShipGroupUpdate {
	oisgu.mutation.RemoveOrderItemShipGrpInvReIDs(ids...)
	return oisgu
}

// RemoveOrderItemShipGrpInvRes removes "order_item_ship_grp_inv_res" edges to OrderItemShipGrpInvRes entities.
func (oisgu *OrderItemShipGroupUpdate) RemoveOrderItemShipGrpInvRes(o ...*OrderItemShipGrpInvRes) *OrderItemShipGroupUpdate {
	ids := make([]int, len(o))
	for i := range o {
		ids[i] = o[i].ID
	}
	return oisgu.RemoveOrderItemShipGrpInvReIDs(ids...)
}

// ClearOrderPaymentPreferences clears all "order_payment_preferences" edges to the OrderPaymentPreference entity.
func (oisgu *OrderItemShipGroupUpdate) ClearOrderPaymentPreferences() *OrderItemShipGroupUpdate {
	oisgu.mutation.ClearOrderPaymentPreferences()
	return oisgu
}

// RemoveOrderPaymentPreferenceIDs removes the "order_payment_preferences" edge to OrderPaymentPreference entities by IDs.
func (oisgu *OrderItemShipGroupUpdate) RemoveOrderPaymentPreferenceIDs(ids ...int) *OrderItemShipGroupUpdate {
	oisgu.mutation.RemoveOrderPaymentPreferenceIDs(ids...)
	return oisgu
}

// RemoveOrderPaymentPreferences removes "order_payment_preferences" edges to OrderPaymentPreference entities.
func (oisgu *OrderItemShipGroupUpdate) RemoveOrderPaymentPreferences(o ...*OrderPaymentPreference) *OrderItemShipGroupUpdate {
	ids := make([]int, len(o))
	for i := range o {
		ids[i] = o[i].ID
	}
	return oisgu.RemoveOrderPaymentPreferenceIDs(ids...)
}

// Save executes the query and returns the number of nodes affected by the update operation.
func (oisgu *OrderItemShipGroupUpdate) Save(ctx context.Context) (int, error) {
	var (
		err      error
		affected int
	)
	oisgu.defaults()
	if len(oisgu.hooks) == 0 {
		if err = oisgu.check(); err != nil {
			return 0, err
		}
		affected, err = oisgu.sqlSave(ctx)
	} else {
		var mut Mutator = MutateFunc(func(ctx context.Context, m Mutation) (Value, error) {
			mutation, ok := m.(*OrderItemShipGroupMutation)
			if !ok {
				return nil, fmt.Errorf("unexpected mutation type %T", m)
			}
			if err = oisgu.check(); err != nil {
				return 0, err
			}
			oisgu.mutation = mutation
			affected, err = oisgu.sqlSave(ctx)
			mutation.done = true
			return affected, err
		})
		for i := len(oisgu.hooks) - 1; i >= 0; i-- {
			mut = oisgu.hooks[i](mut)
		}
		if _, err := mut.Mutate(ctx, oisgu.mutation); err != nil {
			return 0, err
		}
	}
	return affected, err
}

// SaveX is like Save, but panics if an error occurs.
func (oisgu *OrderItemShipGroupUpdate) SaveX(ctx context.Context) int {
	affected, err := oisgu.Save(ctx)
	if err != nil {
		panic(err)
	}
	return affected
}

// Exec executes the query.
func (oisgu *OrderItemShipGroupUpdate) Exec(ctx context.Context) error {
	_, err := oisgu.Save(ctx)
	return err
}

// ExecX is like Exec, but panics if an error occurs.
func (oisgu *OrderItemShipGroupUpdate) ExecX(ctx context.Context) {
	if err := oisgu.Exec(ctx); err != nil {
		panic(err)
	}
}

// defaults sets the default values of the builder before save.
func (oisgu *OrderItemShipGroupUpdate) defaults() {
	if _, ok := oisgu.mutation.UpdateTime(); !ok {
		v := orderitemshipgroup.UpdateDefaultUpdateTime()
		oisgu.mutation.SetUpdateTime(v)
	}
}

// check runs all checks and user-defined validators on the builder.
func (oisgu *OrderItemShipGroupUpdate) check() error {
	if v, ok := oisgu.mutation.MaySplit(); ok {
		if err := orderitemshipgroup.MaySplitValidator(v); err != nil {
			return &ValidationError{Name: "may_split", err: fmt.Errorf("ent: validator failed for field \"may_split\": %w", err)}
		}
	}
	if v, ok := oisgu.mutation.IsGift(); ok {
		if err := orderitemshipgroup.IsGiftValidator(v); err != nil {
			return &ValidationError{Name: "is_gift", err: fmt.Errorf("ent: validator failed for field \"is_gift\": %w", err)}
		}
	}
	return nil
}

func (oisgu *OrderItemShipGroupUpdate) sqlSave(ctx context.Context) (n int, err error) {
	_spec := &sqlgraph.UpdateSpec{
		Node: &sqlgraph.NodeSpec{
			Table:   orderitemshipgroup.Table,
			Columns: orderitemshipgroup.Columns,
			ID: &sqlgraph.FieldSpec{
				Type:   field.TypeInt,
				Column: orderitemshipgroup.FieldID,
			},
		},
	}
	if ps := oisgu.mutation.predicates; len(ps) > 0 {
		_spec.Predicate = func(selector *sql.Selector) {
			for i := range ps {
				ps[i](selector)
			}
		}
	}
	if value, ok := oisgu.mutation.UpdateTime(); ok {
		_spec.Fields.Set = append(_spec.Fields.Set, &sqlgraph.FieldSpec{
			Type:   field.TypeTime,
			Value:  value,
			Column: orderitemshipgroup.FieldUpdateTime,
		})
	}
	if value, ok := oisgu.mutation.StringRef(); ok {
		_spec.Fields.Set = append(_spec.Fields.Set, &sqlgraph.FieldSpec{
			Type:   field.TypeString,
			Value:  value,
			Column: orderitemshipgroup.FieldStringRef,
		})
	}
	if oisgu.mutation.StringRefCleared() {
		_spec.Fields.Clear = append(_spec.Fields.Clear, &sqlgraph.FieldSpec{
			Type:   field.TypeString,
			Column: orderitemshipgroup.FieldStringRef,
		})
	}
	if value, ok := oisgu.mutation.ShipGroupSeqID(); ok {
		_spec.Fields.Set = append(_spec.Fields.Set, &sqlgraph.FieldSpec{
			Type:   field.TypeInt,
			Value:  value,
			Column: orderitemshipgroup.FieldShipGroupSeqID,
		})
	}
	if value, ok := oisgu.mutation.AddedShipGroupSeqID(); ok {
		_spec.Fields.Add = append(_spec.Fields.Add, &sqlgraph.FieldSpec{
			Type:   field.TypeInt,
			Value:  value,
			Column: orderitemshipgroup.FieldShipGroupSeqID,
		})
	}
	if value, ok := oisgu.mutation.ShipmentMethodTypeID(); ok {
		_spec.Fields.Set = append(_spec.Fields.Set, &sqlgraph.FieldSpec{
			Type:   field.TypeInt,
			Value:  value,
			Column: orderitemshipgroup.FieldShipmentMethodTypeID,
		})
	}
	if value, ok := oisgu.mutation.AddedShipmentMethodTypeID(); ok {
		_spec.Fields.Add = append(_spec.Fields.Add, &sqlgraph.FieldSpec{
			Type:   field.TypeInt,
			Value:  value,
			Column: orderitemshipgroup.FieldShipmentMethodTypeID,
		})
	}
	if oisgu.mutation.ShipmentMethodTypeIDCleared() {
		_spec.Fields.Clear = append(_spec.Fields.Clear, &sqlgraph.FieldSpec{
			Type:   field.TypeInt,
			Column: orderitemshipgroup.FieldShipmentMethodTypeID,
		})
	}
	if value, ok := oisgu.mutation.SupplierPartyID(); ok {
		_spec.Fields.Set = append(_spec.Fields.Set, &sqlgraph.FieldSpec{
			Type:   field.TypeInt,
			Value:  value,
			Column: orderitemshipgroup.FieldSupplierPartyID,
		})
	}
	if value, ok := oisgu.mutation.AddedSupplierPartyID(); ok {
		_spec.Fields.Add = append(_spec.Fields.Add, &sqlgraph.FieldSpec{
			Type:   field.TypeInt,
			Value:  value,
			Column: orderitemshipgroup.FieldSupplierPartyID,
		})
	}
	if oisgu.mutation.SupplierPartyIDCleared() {
		_spec.Fields.Clear = append(_spec.Fields.Clear, &sqlgraph.FieldSpec{
			Type:   field.TypeInt,
			Column: orderitemshipgroup.FieldSupplierPartyID,
		})
	}
	if value, ok := oisgu.mutation.SupplierAgreementID(); ok {
		_spec.Fields.Set = append(_spec.Fields.Set, &sqlgraph.FieldSpec{
			Type:   field.TypeInt,
			Value:  value,
			Column: orderitemshipgroup.FieldSupplierAgreementID,
		})
	}
	if value, ok := oisgu.mutation.AddedSupplierAgreementID(); ok {
		_spec.Fields.Add = append(_spec.Fields.Add, &sqlgraph.FieldSpec{
			Type:   field.TypeInt,
			Value:  value,
			Column: orderitemshipgroup.FieldSupplierAgreementID,
		})
	}
	if oisgu.mutation.SupplierAgreementIDCleared() {
		_spec.Fields.Clear = append(_spec.Fields.Clear, &sqlgraph.FieldSpec{
			Type:   field.TypeInt,
			Column: orderitemshipgroup.FieldSupplierAgreementID,
		})
	}
	if value, ok := oisgu.mutation.VendorPartyID(); ok {
		_spec.Fields.Set = append(_spec.Fields.Set, &sqlgraph.FieldSpec{
			Type:   field.TypeInt,
			Value:  value,
			Column: orderitemshipgroup.FieldVendorPartyID,
		})
	}
	if value, ok := oisgu.mutation.AddedVendorPartyID(); ok {
		_spec.Fields.Add = append(_spec.Fields.Add, &sqlgraph.FieldSpec{
			Type:   field.TypeInt,
			Value:  value,
			Column: orderitemshipgroup.FieldVendorPartyID,
		})
	}
	if oisgu.mutation.VendorPartyIDCleared() {
		_spec.Fields.Clear = append(_spec.Fields.Clear, &sqlgraph.FieldSpec{
			Type:   field.TypeInt,
			Column: orderitemshipgroup.FieldVendorPartyID,
		})
	}
	if value, ok := oisgu.mutation.CarrierPartyID(); ok {
		_spec.Fields.Set = append(_spec.Fields.Set, &sqlgraph.FieldSpec{
			Type:   field.TypeInt,
			Value:  value,
			Column: orderitemshipgroup.FieldCarrierPartyID,
		})
	}
	if value, ok := oisgu.mutation.AddedCarrierPartyID(); ok {
		_spec.Fields.Add = append(_spec.Fields.Add, &sqlgraph.FieldSpec{
			Type:   field.TypeInt,
			Value:  value,
			Column: orderitemshipgroup.FieldCarrierPartyID,
		})
	}
	if oisgu.mutation.CarrierPartyIDCleared() {
		_spec.Fields.Clear = append(_spec.Fields.Clear, &sqlgraph.FieldSpec{
			Type:   field.TypeInt,
			Column: orderitemshipgroup.FieldCarrierPartyID,
		})
	}
	if value, ok := oisgu.mutation.CarrierRoleTypeID(); ok {
		_spec.Fields.Set = append(_spec.Fields.Set, &sqlgraph.FieldSpec{
			Type:   field.TypeInt,
			Value:  value,
			Column: orderitemshipgroup.FieldCarrierRoleTypeID,
		})
	}
	if value, ok := oisgu.mutation.AddedCarrierRoleTypeID(); ok {
		_spec.Fields.Add = append(_spec.Fields.Add, &sqlgraph.FieldSpec{
			Type:   field.TypeInt,
			Value:  value,
			Column: orderitemshipgroup.FieldCarrierRoleTypeID,
		})
	}
	if oisgu.mutation.CarrierRoleTypeIDCleared() {
		_spec.Fields.Clear = append(_spec.Fields.Clear, &sqlgraph.FieldSpec{
			Type:   field.TypeInt,
			Column: orderitemshipgroup.FieldCarrierRoleTypeID,
		})
	}
	if value, ok := oisgu.mutation.FacilityID(); ok {
		_spec.Fields.Set = append(_spec.Fields.Set, &sqlgraph.FieldSpec{
			Type:   field.TypeInt,
			Value:  value,
			Column: orderitemshipgroup.FieldFacilityID,
		})
	}
	if value, ok := oisgu.mutation.AddedFacilityID(); ok {
		_spec.Fields.Add = append(_spec.Fields.Add, &sqlgraph.FieldSpec{
			Type:   field.TypeInt,
			Value:  value,
			Column: orderitemshipgroup.FieldFacilityID,
		})
	}
	if oisgu.mutation.FacilityIDCleared() {
		_spec.Fields.Clear = append(_spec.Fields.Clear, &sqlgraph.FieldSpec{
			Type:   field.TypeInt,
			Column: orderitemshipgroup.FieldFacilityID,
		})
	}
	if value, ok := oisgu.mutation.ContactMechID(); ok {
		_spec.Fields.Set = append(_spec.Fields.Set, &sqlgraph.FieldSpec{
			Type:   field.TypeInt,
			Value:  value,
			Column: orderitemshipgroup.FieldContactMechID,
		})
	}
	if value, ok := oisgu.mutation.AddedContactMechID(); ok {
		_spec.Fields.Add = append(_spec.Fields.Add, &sqlgraph.FieldSpec{
			Type:   field.TypeInt,
			Value:  value,
			Column: orderitemshipgroup.FieldContactMechID,
		})
	}
	if oisgu.mutation.ContactMechIDCleared() {
		_spec.Fields.Clear = append(_spec.Fields.Clear, &sqlgraph.FieldSpec{
			Type:   field.TypeInt,
			Column: orderitemshipgroup.FieldContactMechID,
		})
	}
	if value, ok := oisgu.mutation.TelecomContactMechID(); ok {
		_spec.Fields.Set = append(_spec.Fields.Set, &sqlgraph.FieldSpec{
			Type:   field.TypeInt,
			Value:  value,
			Column: orderitemshipgroup.FieldTelecomContactMechID,
		})
	}
	if value, ok := oisgu.mutation.AddedTelecomContactMechID(); ok {
		_spec.Fields.Add = append(_spec.Fields.Add, &sqlgraph.FieldSpec{
			Type:   field.TypeInt,
			Value:  value,
			Column: orderitemshipgroup.FieldTelecomContactMechID,
		})
	}
	if oisgu.mutation.TelecomContactMechIDCleared() {
		_spec.Fields.Clear = append(_spec.Fields.Clear, &sqlgraph.FieldSpec{
			Type:   field.TypeInt,
			Column: orderitemshipgroup.FieldTelecomContactMechID,
		})
	}
	if value, ok := oisgu.mutation.TrackingNumber(); ok {
		_spec.Fields.Set = append(_spec.Fields.Set, &sqlgraph.FieldSpec{
			Type:   field.TypeString,
			Value:  value,
			Column: orderitemshipgroup.FieldTrackingNumber,
		})
	}
	if oisgu.mutation.TrackingNumberCleared() {
		_spec.Fields.Clear = append(_spec.Fields.Clear, &sqlgraph.FieldSpec{
			Type:   field.TypeString,
			Column: orderitemshipgroup.FieldTrackingNumber,
		})
	}
	if value, ok := oisgu.mutation.ShippingInstructions(); ok {
		_spec.Fields.Set = append(_spec.Fields.Set, &sqlgraph.FieldSpec{
			Type:   field.TypeString,
			Value:  value,
			Column: orderitemshipgroup.FieldShippingInstructions,
		})
	}
	if oisgu.mutation.ShippingInstructionsCleared() {
		_spec.Fields.Clear = append(_spec.Fields.Clear, &sqlgraph.FieldSpec{
			Type:   field.TypeString,
			Column: orderitemshipgroup.FieldShippingInstructions,
		})
	}
	if value, ok := oisgu.mutation.MaySplit(); ok {
		_spec.Fields.Set = append(_spec.Fields.Set, &sqlgraph.FieldSpec{
			Type:   field.TypeEnum,
			Value:  value,
			Column: orderitemshipgroup.FieldMaySplit,
		})
	}
	if oisgu.mutation.MaySplitCleared() {
		_spec.Fields.Clear = append(_spec.Fields.Clear, &sqlgraph.FieldSpec{
			Type:   field.TypeEnum,
			Column: orderitemshipgroup.FieldMaySplit,
		})
	}
	if value, ok := oisgu.mutation.GiftMessage(); ok {
		_spec.Fields.Set = append(_spec.Fields.Set, &sqlgraph.FieldSpec{
			Type:   field.TypeString,
			Value:  value,
			Column: orderitemshipgroup.FieldGiftMessage,
		})
	}
	if oisgu.mutation.GiftMessageCleared() {
		_spec.Fields.Clear = append(_spec.Fields.Clear, &sqlgraph.FieldSpec{
			Type:   field.TypeString,
			Column: orderitemshipgroup.FieldGiftMessage,
		})
	}
	if value, ok := oisgu.mutation.IsGift(); ok {
		_spec.Fields.Set = append(_spec.Fields.Set, &sqlgraph.FieldSpec{
			Type:   field.TypeEnum,
			Value:  value,
			Column: orderitemshipgroup.FieldIsGift,
		})
	}
	if oisgu.mutation.IsGiftCleared() {
		_spec.Fields.Clear = append(_spec.Fields.Clear, &sqlgraph.FieldSpec{
			Type:   field.TypeEnum,
			Column: orderitemshipgroup.FieldIsGift,
		})
	}
	if value, ok := oisgu.mutation.ShipAfterDate(); ok {
		_spec.Fields.Set = append(_spec.Fields.Set, &sqlgraph.FieldSpec{
			Type:   field.TypeTime,
			Value:  value,
			Column: orderitemshipgroup.FieldShipAfterDate,
		})
	}
	if oisgu.mutation.ShipAfterDateCleared() {
		_spec.Fields.Clear = append(_spec.Fields.Clear, &sqlgraph.FieldSpec{
			Type:   field.TypeTime,
			Column: orderitemshipgroup.FieldShipAfterDate,
		})
	}
	if value, ok := oisgu.mutation.ShipByDate(); ok {
		_spec.Fields.Set = append(_spec.Fields.Set, &sqlgraph.FieldSpec{
			Type:   field.TypeTime,
			Value:  value,
			Column: orderitemshipgroup.FieldShipByDate,
		})
	}
	if oisgu.mutation.ShipByDateCleared() {
		_spec.Fields.Clear = append(_spec.Fields.Clear, &sqlgraph.FieldSpec{
			Type:   field.TypeTime,
			Column: orderitemshipgroup.FieldShipByDate,
		})
	}
	if value, ok := oisgu.mutation.EstimatedShipDate(); ok {
		_spec.Fields.Set = append(_spec.Fields.Set, &sqlgraph.FieldSpec{
			Type:   field.TypeTime,
			Value:  value,
			Column: orderitemshipgroup.FieldEstimatedShipDate,
		})
	}
	if oisgu.mutation.EstimatedShipDateCleared() {
		_spec.Fields.Clear = append(_spec.Fields.Clear, &sqlgraph.FieldSpec{
			Type:   field.TypeTime,
			Column: orderitemshipgroup.FieldEstimatedShipDate,
		})
	}
	if value, ok := oisgu.mutation.EstimatedDeliveryDate(); ok {
		_spec.Fields.Set = append(_spec.Fields.Set, &sqlgraph.FieldSpec{
			Type:   field.TypeTime,
			Value:  value,
			Column: orderitemshipgroup.FieldEstimatedDeliveryDate,
		})
	}
	if oisgu.mutation.EstimatedDeliveryDateCleared() {
		_spec.Fields.Clear = append(_spec.Fields.Clear, &sqlgraph.FieldSpec{
			Type:   field.TypeTime,
			Column: orderitemshipgroup.FieldEstimatedDeliveryDate,
		})
	}
	if oisgu.mutation.OrderHeaderCleared() {
		edge := &sqlgraph.EdgeSpec{
			Rel:     sqlgraph.M2O,
			Inverse: true,
			Table:   orderitemshipgroup.OrderHeaderTable,
			Columns: []string{orderitemshipgroup.OrderHeaderColumn},
			Bidi:    false,
			Target: &sqlgraph.EdgeTarget{
				IDSpec: &sqlgraph.FieldSpec{
					Type:   field.TypeInt,
					Column: orderheader.FieldID,
				},
			},
		}
		_spec.Edges.Clear = append(_spec.Edges.Clear, edge)
	}
	if nodes := oisgu.mutation.OrderHeaderIDs(); len(nodes) > 0 {
		edge := &sqlgraph.EdgeSpec{
			Rel:     sqlgraph.M2O,
			Inverse: true,
			Table:   orderitemshipgroup.OrderHeaderTable,
			Columns: []string{orderitemshipgroup.OrderHeaderColumn},
			Bidi:    false,
			Target: &sqlgraph.EdgeTarget{
				IDSpec: &sqlgraph.FieldSpec{
					Type:   field.TypeInt,
					Column: orderheader.FieldID,
				},
			},
		}
		for _, k := range nodes {
			edge.Target.Nodes = append(edge.Target.Nodes, k)
		}
		_spec.Edges.Add = append(_spec.Edges.Add, edge)
	}
	if oisgu.mutation.OrderAdjustmentsCleared() {
		edge := &sqlgraph.EdgeSpec{
			Rel:     sqlgraph.O2M,
			Inverse: false,
			Table:   orderitemshipgroup.OrderAdjustmentsTable,
			Columns: []string{orderitemshipgroup.OrderAdjustmentsColumn},
			Bidi:    false,
			Target: &sqlgraph.EdgeTarget{
				IDSpec: &sqlgraph.FieldSpec{
					Type:   field.TypeInt,
					Column: orderadjustment.FieldID,
				},
			},
		}
		_spec.Edges.Clear = append(_spec.Edges.Clear, edge)
	}
	if nodes := oisgu.mutation.RemovedOrderAdjustmentsIDs(); len(nodes) > 0 && !oisgu.mutation.OrderAdjustmentsCleared() {
		edge := &sqlgraph.EdgeSpec{
			Rel:     sqlgraph.O2M,
			Inverse: false,
			Table:   orderitemshipgroup.OrderAdjustmentsTable,
			Columns: []string{orderitemshipgroup.OrderAdjustmentsColumn},
			Bidi:    false,
			Target: &sqlgraph.EdgeTarget{
				IDSpec: &sqlgraph.FieldSpec{
					Type:   field.TypeInt,
					Column: orderadjustment.FieldID,
				},
			},
		}
		for _, k := range nodes {
			edge.Target.Nodes = append(edge.Target.Nodes, k)
		}
		_spec.Edges.Clear = append(_spec.Edges.Clear, edge)
	}
	if nodes := oisgu.mutation.OrderAdjustmentsIDs(); len(nodes) > 0 {
		edge := &sqlgraph.EdgeSpec{
			Rel:     sqlgraph.O2M,
			Inverse: false,
			Table:   orderitemshipgroup.OrderAdjustmentsTable,
			Columns: []string{orderitemshipgroup.OrderAdjustmentsColumn},
			Bidi:    false,
			Target: &sqlgraph.EdgeTarget{
				IDSpec: &sqlgraph.FieldSpec{
					Type:   field.TypeInt,
					Column: orderadjustment.FieldID,
				},
			},
		}
		for _, k := range nodes {
			edge.Target.Nodes = append(edge.Target.Nodes, k)
		}
		_spec.Edges.Add = append(_spec.Edges.Add, edge)
	}
	if oisgu.mutation.OrderItemShipGroupAssocsCleared() {
		edge := &sqlgraph.EdgeSpec{
			Rel:     sqlgraph.O2M,
			Inverse: false,
			Table:   orderitemshipgroup.OrderItemShipGroupAssocsTable,
			Columns: []string{orderitemshipgroup.OrderItemShipGroupAssocsColumn},
			Bidi:    false,
			Target: &sqlgraph.EdgeTarget{
				IDSpec: &sqlgraph.FieldSpec{
					Type:   field.TypeInt,
					Column: orderitemshipgroupassoc.FieldID,
				},
			},
		}
		_spec.Edges.Clear = append(_spec.Edges.Clear, edge)
	}
	if nodes := oisgu.mutation.RemovedOrderItemShipGroupAssocsIDs(); len(nodes) > 0 && !oisgu.mutation.OrderItemShipGroupAssocsCleared() {
		edge := &sqlgraph.EdgeSpec{
			Rel:     sqlgraph.O2M,
			Inverse: false,
			Table:   orderitemshipgroup.OrderItemShipGroupAssocsTable,
			Columns: []string{orderitemshipgroup.OrderItemShipGroupAssocsColumn},
			Bidi:    false,
			Target: &sqlgraph.EdgeTarget{
				IDSpec: &sqlgraph.FieldSpec{
					Type:   field.TypeInt,
					Column: orderitemshipgroupassoc.FieldID,
				},
			},
		}
		for _, k := range nodes {
			edge.Target.Nodes = append(edge.Target.Nodes, k)
		}
		_spec.Edges.Clear = append(_spec.Edges.Clear, edge)
	}
	if nodes := oisgu.mutation.OrderItemShipGroupAssocsIDs(); len(nodes) > 0 {
		edge := &sqlgraph.EdgeSpec{
			Rel:     sqlgraph.O2M,
			Inverse: false,
			Table:   orderitemshipgroup.OrderItemShipGroupAssocsTable,
			Columns: []string{orderitemshipgroup.OrderItemShipGroupAssocsColumn},
			Bidi:    false,
			Target: &sqlgraph.EdgeTarget{
				IDSpec: &sqlgraph.FieldSpec{
					Type:   field.TypeInt,
					Column: orderitemshipgroupassoc.FieldID,
				},
			},
		}
		for _, k := range nodes {
			edge.Target.Nodes = append(edge.Target.Nodes, k)
		}
		_spec.Edges.Add = append(_spec.Edges.Add, edge)
	}
	if oisgu.mutation.OrderItemShipGrpInvResCleared() {
		edge := &sqlgraph.EdgeSpec{
			Rel:     sqlgraph.O2M,
			Inverse: false,
			Table:   orderitemshipgroup.OrderItemShipGrpInvResTable,
			Columns: []string{orderitemshipgroup.OrderItemShipGrpInvResColumn},
			Bidi:    false,
			Target: &sqlgraph.EdgeTarget{
				IDSpec: &sqlgraph.FieldSpec{
					Type:   field.TypeInt,
					Column: orderitemshipgrpinvres.FieldID,
				},
			},
		}
		_spec.Edges.Clear = append(_spec.Edges.Clear, edge)
	}
	if nodes := oisgu.mutation.RemovedOrderItemShipGrpInvResIDs(); len(nodes) > 0 && !oisgu.mutation.OrderItemShipGrpInvResCleared() {
		edge := &sqlgraph.EdgeSpec{
			Rel:     sqlgraph.O2M,
			Inverse: false,
			Table:   orderitemshipgroup.OrderItemShipGrpInvResTable,
			Columns: []string{orderitemshipgroup.OrderItemShipGrpInvResColumn},
			Bidi:    false,
			Target: &sqlgraph.EdgeTarget{
				IDSpec: &sqlgraph.FieldSpec{
					Type:   field.TypeInt,
					Column: orderitemshipgrpinvres.FieldID,
				},
			},
		}
		for _, k := range nodes {
			edge.Target.Nodes = append(edge.Target.Nodes, k)
		}
		_spec.Edges.Clear = append(_spec.Edges.Clear, edge)
	}
	if nodes := oisgu.mutation.OrderItemShipGrpInvResIDs(); len(nodes) > 0 {
		edge := &sqlgraph.EdgeSpec{
			Rel:     sqlgraph.O2M,
			Inverse: false,
			Table:   orderitemshipgroup.OrderItemShipGrpInvResTable,
			Columns: []string{orderitemshipgroup.OrderItemShipGrpInvResColumn},
			Bidi:    false,
			Target: &sqlgraph.EdgeTarget{
				IDSpec: &sqlgraph.FieldSpec{
					Type:   field.TypeInt,
					Column: orderitemshipgrpinvres.FieldID,
				},
			},
		}
		for _, k := range nodes {
			edge.Target.Nodes = append(edge.Target.Nodes, k)
		}
		_spec.Edges.Add = append(_spec.Edges.Add, edge)
	}
	if oisgu.mutation.OrderPaymentPreferencesCleared() {
		edge := &sqlgraph.EdgeSpec{
			Rel:     sqlgraph.O2M,
			Inverse: false,
			Table:   orderitemshipgroup.OrderPaymentPreferencesTable,
			Columns: []string{orderitemshipgroup.OrderPaymentPreferencesColumn},
			Bidi:    false,
			Target: &sqlgraph.EdgeTarget{
				IDSpec: &sqlgraph.FieldSpec{
					Type:   field.TypeInt,
					Column: orderpaymentpreference.FieldID,
				},
			},
		}
		_spec.Edges.Clear = append(_spec.Edges.Clear, edge)
	}
	if nodes := oisgu.mutation.RemovedOrderPaymentPreferencesIDs(); len(nodes) > 0 && !oisgu.mutation.OrderPaymentPreferencesCleared() {
		edge := &sqlgraph.EdgeSpec{
			Rel:     sqlgraph.O2M,
			Inverse: false,
			Table:   orderitemshipgroup.OrderPaymentPreferencesTable,
			Columns: []string{orderitemshipgroup.OrderPaymentPreferencesColumn},
			Bidi:    false,
			Target: &sqlgraph.EdgeTarget{
				IDSpec: &sqlgraph.FieldSpec{
					Type:   field.TypeInt,
					Column: orderpaymentpreference.FieldID,
				},
			},
		}
		for _, k := range nodes {
			edge.Target.Nodes = append(edge.Target.Nodes, k)
		}
		_spec.Edges.Clear = append(_spec.Edges.Clear, edge)
	}
	if nodes := oisgu.mutation.OrderPaymentPreferencesIDs(); len(nodes) > 0 {
		edge := &sqlgraph.EdgeSpec{
			Rel:     sqlgraph.O2M,
			Inverse: false,
			Table:   orderitemshipgroup.OrderPaymentPreferencesTable,
			Columns: []string{orderitemshipgroup.OrderPaymentPreferencesColumn},
			Bidi:    false,
			Target: &sqlgraph.EdgeTarget{
				IDSpec: &sqlgraph.FieldSpec{
					Type:   field.TypeInt,
					Column: orderpaymentpreference.FieldID,
				},
			},
		}
		for _, k := range nodes {
			edge.Target.Nodes = append(edge.Target.Nodes, k)
		}
		_spec.Edges.Add = append(_spec.Edges.Add, edge)
	}
	if n, err = sqlgraph.UpdateNodes(ctx, oisgu.driver, _spec); err != nil {
		if _, ok := err.(*sqlgraph.NotFoundError); ok {
			err = &NotFoundError{orderitemshipgroup.Label}
		} else if cerr, ok := isSQLConstraintError(err); ok {
			err = cerr
		}
		return 0, err
	}
	return n, nil
}

// OrderItemShipGroupUpdateOne is the builder for updating a single OrderItemShipGroup entity.
type OrderItemShipGroupUpdateOne struct {
	config
	fields   []string
	hooks    []Hook
	mutation *OrderItemShipGroupMutation
}

// SetStringRef sets the "string_ref" field.
func (oisguo *OrderItemShipGroupUpdateOne) SetStringRef(s string) *OrderItemShipGroupUpdateOne {
	oisguo.mutation.SetStringRef(s)
	return oisguo
}

// SetNillableStringRef sets the "string_ref" field if the given value is not nil.
func (oisguo *OrderItemShipGroupUpdateOne) SetNillableStringRef(s *string) *OrderItemShipGroupUpdateOne {
	if s != nil {
		oisguo.SetStringRef(*s)
	}
	return oisguo
}

// ClearStringRef clears the value of the "string_ref" field.
func (oisguo *OrderItemShipGroupUpdateOne) ClearStringRef() *OrderItemShipGroupUpdateOne {
	oisguo.mutation.ClearStringRef()
	return oisguo
}

// SetShipGroupSeqID sets the "ship_group_seq_id" field.
func (oisguo *OrderItemShipGroupUpdateOne) SetShipGroupSeqID(i int) *OrderItemShipGroupUpdateOne {
	oisguo.mutation.ResetShipGroupSeqID()
	oisguo.mutation.SetShipGroupSeqID(i)
	return oisguo
}

// AddShipGroupSeqID adds i to the "ship_group_seq_id" field.
func (oisguo *OrderItemShipGroupUpdateOne) AddShipGroupSeqID(i int) *OrderItemShipGroupUpdateOne {
	oisguo.mutation.AddShipGroupSeqID(i)
	return oisguo
}

// SetShipmentMethodTypeID sets the "shipment_method_type_id" field.
func (oisguo *OrderItemShipGroupUpdateOne) SetShipmentMethodTypeID(i int) *OrderItemShipGroupUpdateOne {
	oisguo.mutation.ResetShipmentMethodTypeID()
	oisguo.mutation.SetShipmentMethodTypeID(i)
	return oisguo
}

// SetNillableShipmentMethodTypeID sets the "shipment_method_type_id" field if the given value is not nil.
func (oisguo *OrderItemShipGroupUpdateOne) SetNillableShipmentMethodTypeID(i *int) *OrderItemShipGroupUpdateOne {
	if i != nil {
		oisguo.SetShipmentMethodTypeID(*i)
	}
	return oisguo
}

// AddShipmentMethodTypeID adds i to the "shipment_method_type_id" field.
func (oisguo *OrderItemShipGroupUpdateOne) AddShipmentMethodTypeID(i int) *OrderItemShipGroupUpdateOne {
	oisguo.mutation.AddShipmentMethodTypeID(i)
	return oisguo
}

// ClearShipmentMethodTypeID clears the value of the "shipment_method_type_id" field.
func (oisguo *OrderItemShipGroupUpdateOne) ClearShipmentMethodTypeID() *OrderItemShipGroupUpdateOne {
	oisguo.mutation.ClearShipmentMethodTypeID()
	return oisguo
}

// SetSupplierPartyID sets the "supplier_party_id" field.
func (oisguo *OrderItemShipGroupUpdateOne) SetSupplierPartyID(i int) *OrderItemShipGroupUpdateOne {
	oisguo.mutation.ResetSupplierPartyID()
	oisguo.mutation.SetSupplierPartyID(i)
	return oisguo
}

// SetNillableSupplierPartyID sets the "supplier_party_id" field if the given value is not nil.
func (oisguo *OrderItemShipGroupUpdateOne) SetNillableSupplierPartyID(i *int) *OrderItemShipGroupUpdateOne {
	if i != nil {
		oisguo.SetSupplierPartyID(*i)
	}
	return oisguo
}

// AddSupplierPartyID adds i to the "supplier_party_id" field.
func (oisguo *OrderItemShipGroupUpdateOne) AddSupplierPartyID(i int) *OrderItemShipGroupUpdateOne {
	oisguo.mutation.AddSupplierPartyID(i)
	return oisguo
}

// ClearSupplierPartyID clears the value of the "supplier_party_id" field.
func (oisguo *OrderItemShipGroupUpdateOne) ClearSupplierPartyID() *OrderItemShipGroupUpdateOne {
	oisguo.mutation.ClearSupplierPartyID()
	return oisguo
}

// SetSupplierAgreementID sets the "supplier_agreement_id" field.
func (oisguo *OrderItemShipGroupUpdateOne) SetSupplierAgreementID(i int) *OrderItemShipGroupUpdateOne {
	oisguo.mutation.ResetSupplierAgreementID()
	oisguo.mutation.SetSupplierAgreementID(i)
	return oisguo
}

// SetNillableSupplierAgreementID sets the "supplier_agreement_id" field if the given value is not nil.
func (oisguo *OrderItemShipGroupUpdateOne) SetNillableSupplierAgreementID(i *int) *OrderItemShipGroupUpdateOne {
	if i != nil {
		oisguo.SetSupplierAgreementID(*i)
	}
	return oisguo
}

// AddSupplierAgreementID adds i to the "supplier_agreement_id" field.
func (oisguo *OrderItemShipGroupUpdateOne) AddSupplierAgreementID(i int) *OrderItemShipGroupUpdateOne {
	oisguo.mutation.AddSupplierAgreementID(i)
	return oisguo
}

// ClearSupplierAgreementID clears the value of the "supplier_agreement_id" field.
func (oisguo *OrderItemShipGroupUpdateOne) ClearSupplierAgreementID() *OrderItemShipGroupUpdateOne {
	oisguo.mutation.ClearSupplierAgreementID()
	return oisguo
}

// SetVendorPartyID sets the "vendor_party_id" field.
func (oisguo *OrderItemShipGroupUpdateOne) SetVendorPartyID(i int) *OrderItemShipGroupUpdateOne {
	oisguo.mutation.ResetVendorPartyID()
	oisguo.mutation.SetVendorPartyID(i)
	return oisguo
}

// SetNillableVendorPartyID sets the "vendor_party_id" field if the given value is not nil.
func (oisguo *OrderItemShipGroupUpdateOne) SetNillableVendorPartyID(i *int) *OrderItemShipGroupUpdateOne {
	if i != nil {
		oisguo.SetVendorPartyID(*i)
	}
	return oisguo
}

// AddVendorPartyID adds i to the "vendor_party_id" field.
func (oisguo *OrderItemShipGroupUpdateOne) AddVendorPartyID(i int) *OrderItemShipGroupUpdateOne {
	oisguo.mutation.AddVendorPartyID(i)
	return oisguo
}

// ClearVendorPartyID clears the value of the "vendor_party_id" field.
func (oisguo *OrderItemShipGroupUpdateOne) ClearVendorPartyID() *OrderItemShipGroupUpdateOne {
	oisguo.mutation.ClearVendorPartyID()
	return oisguo
}

// SetCarrierPartyID sets the "carrier_party_id" field.
func (oisguo *OrderItemShipGroupUpdateOne) SetCarrierPartyID(i int) *OrderItemShipGroupUpdateOne {
	oisguo.mutation.ResetCarrierPartyID()
	oisguo.mutation.SetCarrierPartyID(i)
	return oisguo
}

// SetNillableCarrierPartyID sets the "carrier_party_id" field if the given value is not nil.
func (oisguo *OrderItemShipGroupUpdateOne) SetNillableCarrierPartyID(i *int) *OrderItemShipGroupUpdateOne {
	if i != nil {
		oisguo.SetCarrierPartyID(*i)
	}
	return oisguo
}

// AddCarrierPartyID adds i to the "carrier_party_id" field.
func (oisguo *OrderItemShipGroupUpdateOne) AddCarrierPartyID(i int) *OrderItemShipGroupUpdateOne {
	oisguo.mutation.AddCarrierPartyID(i)
	return oisguo
}

// ClearCarrierPartyID clears the value of the "carrier_party_id" field.
func (oisguo *OrderItemShipGroupUpdateOne) ClearCarrierPartyID() *OrderItemShipGroupUpdateOne {
	oisguo.mutation.ClearCarrierPartyID()
	return oisguo
}

// SetCarrierRoleTypeID sets the "carrier_role_type_id" field.
func (oisguo *OrderItemShipGroupUpdateOne) SetCarrierRoleTypeID(i int) *OrderItemShipGroupUpdateOne {
	oisguo.mutation.ResetCarrierRoleTypeID()
	oisguo.mutation.SetCarrierRoleTypeID(i)
	return oisguo
}

// SetNillableCarrierRoleTypeID sets the "carrier_role_type_id" field if the given value is not nil.
func (oisguo *OrderItemShipGroupUpdateOne) SetNillableCarrierRoleTypeID(i *int) *OrderItemShipGroupUpdateOne {
	if i != nil {
		oisguo.SetCarrierRoleTypeID(*i)
	}
	return oisguo
}

// AddCarrierRoleTypeID adds i to the "carrier_role_type_id" field.
func (oisguo *OrderItemShipGroupUpdateOne) AddCarrierRoleTypeID(i int) *OrderItemShipGroupUpdateOne {
	oisguo.mutation.AddCarrierRoleTypeID(i)
	return oisguo
}

// ClearCarrierRoleTypeID clears the value of the "carrier_role_type_id" field.
func (oisguo *OrderItemShipGroupUpdateOne) ClearCarrierRoleTypeID() *OrderItemShipGroupUpdateOne {
	oisguo.mutation.ClearCarrierRoleTypeID()
	return oisguo
}

// SetFacilityID sets the "facility_id" field.
func (oisguo *OrderItemShipGroupUpdateOne) SetFacilityID(i int) *OrderItemShipGroupUpdateOne {
	oisguo.mutation.ResetFacilityID()
	oisguo.mutation.SetFacilityID(i)
	return oisguo
}

// SetNillableFacilityID sets the "facility_id" field if the given value is not nil.
func (oisguo *OrderItemShipGroupUpdateOne) SetNillableFacilityID(i *int) *OrderItemShipGroupUpdateOne {
	if i != nil {
		oisguo.SetFacilityID(*i)
	}
	return oisguo
}

// AddFacilityID adds i to the "facility_id" field.
func (oisguo *OrderItemShipGroupUpdateOne) AddFacilityID(i int) *OrderItemShipGroupUpdateOne {
	oisguo.mutation.AddFacilityID(i)
	return oisguo
}

// ClearFacilityID clears the value of the "facility_id" field.
func (oisguo *OrderItemShipGroupUpdateOne) ClearFacilityID() *OrderItemShipGroupUpdateOne {
	oisguo.mutation.ClearFacilityID()
	return oisguo
}

// SetContactMechID sets the "contact_mech_id" field.
func (oisguo *OrderItemShipGroupUpdateOne) SetContactMechID(i int) *OrderItemShipGroupUpdateOne {
	oisguo.mutation.ResetContactMechID()
	oisguo.mutation.SetContactMechID(i)
	return oisguo
}

// SetNillableContactMechID sets the "contact_mech_id" field if the given value is not nil.
func (oisguo *OrderItemShipGroupUpdateOne) SetNillableContactMechID(i *int) *OrderItemShipGroupUpdateOne {
	if i != nil {
		oisguo.SetContactMechID(*i)
	}
	return oisguo
}

// AddContactMechID adds i to the "contact_mech_id" field.
func (oisguo *OrderItemShipGroupUpdateOne) AddContactMechID(i int) *OrderItemShipGroupUpdateOne {
	oisguo.mutation.AddContactMechID(i)
	return oisguo
}

// ClearContactMechID clears the value of the "contact_mech_id" field.
func (oisguo *OrderItemShipGroupUpdateOne) ClearContactMechID() *OrderItemShipGroupUpdateOne {
	oisguo.mutation.ClearContactMechID()
	return oisguo
}

// SetTelecomContactMechID sets the "telecom_contact_mech_id" field.
func (oisguo *OrderItemShipGroupUpdateOne) SetTelecomContactMechID(i int) *OrderItemShipGroupUpdateOne {
	oisguo.mutation.ResetTelecomContactMechID()
	oisguo.mutation.SetTelecomContactMechID(i)
	return oisguo
}

// SetNillableTelecomContactMechID sets the "telecom_contact_mech_id" field if the given value is not nil.
func (oisguo *OrderItemShipGroupUpdateOne) SetNillableTelecomContactMechID(i *int) *OrderItemShipGroupUpdateOne {
	if i != nil {
		oisguo.SetTelecomContactMechID(*i)
	}
	return oisguo
}

// AddTelecomContactMechID adds i to the "telecom_contact_mech_id" field.
func (oisguo *OrderItemShipGroupUpdateOne) AddTelecomContactMechID(i int) *OrderItemShipGroupUpdateOne {
	oisguo.mutation.AddTelecomContactMechID(i)
	return oisguo
}

// ClearTelecomContactMechID clears the value of the "telecom_contact_mech_id" field.
func (oisguo *OrderItemShipGroupUpdateOne) ClearTelecomContactMechID() *OrderItemShipGroupUpdateOne {
	oisguo.mutation.ClearTelecomContactMechID()
	return oisguo
}

// SetTrackingNumber sets the "tracking_number" field.
func (oisguo *OrderItemShipGroupUpdateOne) SetTrackingNumber(s string) *OrderItemShipGroupUpdateOne {
	oisguo.mutation.SetTrackingNumber(s)
	return oisguo
}

// SetNillableTrackingNumber sets the "tracking_number" field if the given value is not nil.
func (oisguo *OrderItemShipGroupUpdateOne) SetNillableTrackingNumber(s *string) *OrderItemShipGroupUpdateOne {
	if s != nil {
		oisguo.SetTrackingNumber(*s)
	}
	return oisguo
}

// ClearTrackingNumber clears the value of the "tracking_number" field.
func (oisguo *OrderItemShipGroupUpdateOne) ClearTrackingNumber() *OrderItemShipGroupUpdateOne {
	oisguo.mutation.ClearTrackingNumber()
	return oisguo
}

// SetShippingInstructions sets the "shipping_instructions" field.
func (oisguo *OrderItemShipGroupUpdateOne) SetShippingInstructions(s string) *OrderItemShipGroupUpdateOne {
	oisguo.mutation.SetShippingInstructions(s)
	return oisguo
}

// SetNillableShippingInstructions sets the "shipping_instructions" field if the given value is not nil.
func (oisguo *OrderItemShipGroupUpdateOne) SetNillableShippingInstructions(s *string) *OrderItemShipGroupUpdateOne {
	if s != nil {
		oisguo.SetShippingInstructions(*s)
	}
	return oisguo
}

// ClearShippingInstructions clears the value of the "shipping_instructions" field.
func (oisguo *OrderItemShipGroupUpdateOne) ClearShippingInstructions() *OrderItemShipGroupUpdateOne {
	oisguo.mutation.ClearShippingInstructions()
	return oisguo
}

// SetMaySplit sets the "may_split" field.
func (oisguo *OrderItemShipGroupUpdateOne) SetMaySplit(os orderitemshipgroup.MaySplit) *OrderItemShipGroupUpdateOne {
	oisguo.mutation.SetMaySplit(os)
	return oisguo
}

// SetNillableMaySplit sets the "may_split" field if the given value is not nil.
func (oisguo *OrderItemShipGroupUpdateOne) SetNillableMaySplit(os *orderitemshipgroup.MaySplit) *OrderItemShipGroupUpdateOne {
	if os != nil {
		oisguo.SetMaySplit(*os)
	}
	return oisguo
}

// ClearMaySplit clears the value of the "may_split" field.
func (oisguo *OrderItemShipGroupUpdateOne) ClearMaySplit() *OrderItemShipGroupUpdateOne {
	oisguo.mutation.ClearMaySplit()
	return oisguo
}

// SetGiftMessage sets the "gift_message" field.
func (oisguo *OrderItemShipGroupUpdateOne) SetGiftMessage(s string) *OrderItemShipGroupUpdateOne {
	oisguo.mutation.SetGiftMessage(s)
	return oisguo
}

// SetNillableGiftMessage sets the "gift_message" field if the given value is not nil.
func (oisguo *OrderItemShipGroupUpdateOne) SetNillableGiftMessage(s *string) *OrderItemShipGroupUpdateOne {
	if s != nil {
		oisguo.SetGiftMessage(*s)
	}
	return oisguo
}

// ClearGiftMessage clears the value of the "gift_message" field.
func (oisguo *OrderItemShipGroupUpdateOne) ClearGiftMessage() *OrderItemShipGroupUpdateOne {
	oisguo.mutation.ClearGiftMessage()
	return oisguo
}

// SetIsGift sets the "is_gift" field.
func (oisguo *OrderItemShipGroupUpdateOne) SetIsGift(og orderitemshipgroup.IsGift) *OrderItemShipGroupUpdateOne {
	oisguo.mutation.SetIsGift(og)
	return oisguo
}

// SetNillableIsGift sets the "is_gift" field if the given value is not nil.
func (oisguo *OrderItemShipGroupUpdateOne) SetNillableIsGift(og *orderitemshipgroup.IsGift) *OrderItemShipGroupUpdateOne {
	if og != nil {
		oisguo.SetIsGift(*og)
	}
	return oisguo
}

// ClearIsGift clears the value of the "is_gift" field.
func (oisguo *OrderItemShipGroupUpdateOne) ClearIsGift() *OrderItemShipGroupUpdateOne {
	oisguo.mutation.ClearIsGift()
	return oisguo
}

// SetShipAfterDate sets the "ship_after_date" field.
func (oisguo *OrderItemShipGroupUpdateOne) SetShipAfterDate(t time.Time) *OrderItemShipGroupUpdateOne {
	oisguo.mutation.SetShipAfterDate(t)
	return oisguo
}

// SetNillableShipAfterDate sets the "ship_after_date" field if the given value is not nil.
func (oisguo *OrderItemShipGroupUpdateOne) SetNillableShipAfterDate(t *time.Time) *OrderItemShipGroupUpdateOne {
	if t != nil {
		oisguo.SetShipAfterDate(*t)
	}
	return oisguo
}

// ClearShipAfterDate clears the value of the "ship_after_date" field.
func (oisguo *OrderItemShipGroupUpdateOne) ClearShipAfterDate() *OrderItemShipGroupUpdateOne {
	oisguo.mutation.ClearShipAfterDate()
	return oisguo
}

// SetShipByDate sets the "ship_by_date" field.
func (oisguo *OrderItemShipGroupUpdateOne) SetShipByDate(t time.Time) *OrderItemShipGroupUpdateOne {
	oisguo.mutation.SetShipByDate(t)
	return oisguo
}

// SetNillableShipByDate sets the "ship_by_date" field if the given value is not nil.
func (oisguo *OrderItemShipGroupUpdateOne) SetNillableShipByDate(t *time.Time) *OrderItemShipGroupUpdateOne {
	if t != nil {
		oisguo.SetShipByDate(*t)
	}
	return oisguo
}

// ClearShipByDate clears the value of the "ship_by_date" field.
func (oisguo *OrderItemShipGroupUpdateOne) ClearShipByDate() *OrderItemShipGroupUpdateOne {
	oisguo.mutation.ClearShipByDate()
	return oisguo
}

// SetEstimatedShipDate sets the "estimated_ship_date" field.
func (oisguo *OrderItemShipGroupUpdateOne) SetEstimatedShipDate(t time.Time) *OrderItemShipGroupUpdateOne {
	oisguo.mutation.SetEstimatedShipDate(t)
	return oisguo
}

// SetNillableEstimatedShipDate sets the "estimated_ship_date" field if the given value is not nil.
func (oisguo *OrderItemShipGroupUpdateOne) SetNillableEstimatedShipDate(t *time.Time) *OrderItemShipGroupUpdateOne {
	if t != nil {
		oisguo.SetEstimatedShipDate(*t)
	}
	return oisguo
}

// ClearEstimatedShipDate clears the value of the "estimated_ship_date" field.
func (oisguo *OrderItemShipGroupUpdateOne) ClearEstimatedShipDate() *OrderItemShipGroupUpdateOne {
	oisguo.mutation.ClearEstimatedShipDate()
	return oisguo
}

// SetEstimatedDeliveryDate sets the "estimated_delivery_date" field.
func (oisguo *OrderItemShipGroupUpdateOne) SetEstimatedDeliveryDate(t time.Time) *OrderItemShipGroupUpdateOne {
	oisguo.mutation.SetEstimatedDeliveryDate(t)
	return oisguo
}

// SetNillableEstimatedDeliveryDate sets the "estimated_delivery_date" field if the given value is not nil.
func (oisguo *OrderItemShipGroupUpdateOne) SetNillableEstimatedDeliveryDate(t *time.Time) *OrderItemShipGroupUpdateOne {
	if t != nil {
		oisguo.SetEstimatedDeliveryDate(*t)
	}
	return oisguo
}

// ClearEstimatedDeliveryDate clears the value of the "estimated_delivery_date" field.
func (oisguo *OrderItemShipGroupUpdateOne) ClearEstimatedDeliveryDate() *OrderItemShipGroupUpdateOne {
	oisguo.mutation.ClearEstimatedDeliveryDate()
	return oisguo
}

// SetOrderHeaderID sets the "order_header" edge to the OrderHeader entity by ID.
func (oisguo *OrderItemShipGroupUpdateOne) SetOrderHeaderID(id int) *OrderItemShipGroupUpdateOne {
	oisguo.mutation.SetOrderHeaderID(id)
	return oisguo
}

// SetNillableOrderHeaderID sets the "order_header" edge to the OrderHeader entity by ID if the given value is not nil.
func (oisguo *OrderItemShipGroupUpdateOne) SetNillableOrderHeaderID(id *int) *OrderItemShipGroupUpdateOne {
	if id != nil {
		oisguo = oisguo.SetOrderHeaderID(*id)
	}
	return oisguo
}

// SetOrderHeader sets the "order_header" edge to the OrderHeader entity.
func (oisguo *OrderItemShipGroupUpdateOne) SetOrderHeader(o *OrderHeader) *OrderItemShipGroupUpdateOne {
	return oisguo.SetOrderHeaderID(o.ID)
}

// AddOrderAdjustmentIDs adds the "order_adjustments" edge to the OrderAdjustment entity by IDs.
func (oisguo *OrderItemShipGroupUpdateOne) AddOrderAdjustmentIDs(ids ...int) *OrderItemShipGroupUpdateOne {
	oisguo.mutation.AddOrderAdjustmentIDs(ids...)
	return oisguo
}

// AddOrderAdjustments adds the "order_adjustments" edges to the OrderAdjustment entity.
func (oisguo *OrderItemShipGroupUpdateOne) AddOrderAdjustments(o ...*OrderAdjustment) *OrderItemShipGroupUpdateOne {
	ids := make([]int, len(o))
	for i := range o {
		ids[i] = o[i].ID
	}
	return oisguo.AddOrderAdjustmentIDs(ids...)
}

// AddOrderItemShipGroupAssocIDs adds the "order_item_ship_group_assocs" edge to the OrderItemShipGroupAssoc entity by IDs.
func (oisguo *OrderItemShipGroupUpdateOne) AddOrderItemShipGroupAssocIDs(ids ...int) *OrderItemShipGroupUpdateOne {
	oisguo.mutation.AddOrderItemShipGroupAssocIDs(ids...)
	return oisguo
}

// AddOrderItemShipGroupAssocs adds the "order_item_ship_group_assocs" edges to the OrderItemShipGroupAssoc entity.
func (oisguo *OrderItemShipGroupUpdateOne) AddOrderItemShipGroupAssocs(o ...*OrderItemShipGroupAssoc) *OrderItemShipGroupUpdateOne {
	ids := make([]int, len(o))
	for i := range o {
		ids[i] = o[i].ID
	}
	return oisguo.AddOrderItemShipGroupAssocIDs(ids...)
}

// AddOrderItemShipGrpInvReIDs adds the "order_item_ship_grp_inv_res" edge to the OrderItemShipGrpInvRes entity by IDs.
func (oisguo *OrderItemShipGroupUpdateOne) AddOrderItemShipGrpInvReIDs(ids ...int) *OrderItemShipGroupUpdateOne {
	oisguo.mutation.AddOrderItemShipGrpInvReIDs(ids...)
	return oisguo
}

// AddOrderItemShipGrpInvRes adds the "order_item_ship_grp_inv_res" edges to the OrderItemShipGrpInvRes entity.
func (oisguo *OrderItemShipGroupUpdateOne) AddOrderItemShipGrpInvRes(o ...*OrderItemShipGrpInvRes) *OrderItemShipGroupUpdateOne {
	ids := make([]int, len(o))
	for i := range o {
		ids[i] = o[i].ID
	}
	return oisguo.AddOrderItemShipGrpInvReIDs(ids...)
}

// AddOrderPaymentPreferenceIDs adds the "order_payment_preferences" edge to the OrderPaymentPreference entity by IDs.
func (oisguo *OrderItemShipGroupUpdateOne) AddOrderPaymentPreferenceIDs(ids ...int) *OrderItemShipGroupUpdateOne {
	oisguo.mutation.AddOrderPaymentPreferenceIDs(ids...)
	return oisguo
}

// AddOrderPaymentPreferences adds the "order_payment_preferences" edges to the OrderPaymentPreference entity.
func (oisguo *OrderItemShipGroupUpdateOne) AddOrderPaymentPreferences(o ...*OrderPaymentPreference) *OrderItemShipGroupUpdateOne {
	ids := make([]int, len(o))
	for i := range o {
		ids[i] = o[i].ID
	}
	return oisguo.AddOrderPaymentPreferenceIDs(ids...)
}

// Mutation returns the OrderItemShipGroupMutation object of the builder.
func (oisguo *OrderItemShipGroupUpdateOne) Mutation() *OrderItemShipGroupMutation {
	return oisguo.mutation
}

// ClearOrderHeader clears the "order_header" edge to the OrderHeader entity.
func (oisguo *OrderItemShipGroupUpdateOne) ClearOrderHeader() *OrderItemShipGroupUpdateOne {
	oisguo.mutation.ClearOrderHeader()
	return oisguo
}

// ClearOrderAdjustments clears all "order_adjustments" edges to the OrderAdjustment entity.
func (oisguo *OrderItemShipGroupUpdateOne) ClearOrderAdjustments() *OrderItemShipGroupUpdateOne {
	oisguo.mutation.ClearOrderAdjustments()
	return oisguo
}

// RemoveOrderAdjustmentIDs removes the "order_adjustments" edge to OrderAdjustment entities by IDs.
func (oisguo *OrderItemShipGroupUpdateOne) RemoveOrderAdjustmentIDs(ids ...int) *OrderItemShipGroupUpdateOne {
	oisguo.mutation.RemoveOrderAdjustmentIDs(ids...)
	return oisguo
}

// RemoveOrderAdjustments removes "order_adjustments" edges to OrderAdjustment entities.
func (oisguo *OrderItemShipGroupUpdateOne) RemoveOrderAdjustments(o ...*OrderAdjustment) *OrderItemShipGroupUpdateOne {
	ids := make([]int, len(o))
	for i := range o {
		ids[i] = o[i].ID
	}
	return oisguo.RemoveOrderAdjustmentIDs(ids...)
}

// ClearOrderItemShipGroupAssocs clears all "order_item_ship_group_assocs" edges to the OrderItemShipGroupAssoc entity.
func (oisguo *OrderItemShipGroupUpdateOne) ClearOrderItemShipGroupAssocs() *OrderItemShipGroupUpdateOne {
	oisguo.mutation.ClearOrderItemShipGroupAssocs()
	return oisguo
}

// RemoveOrderItemShipGroupAssocIDs removes the "order_item_ship_group_assocs" edge to OrderItemShipGroupAssoc entities by IDs.
func (oisguo *OrderItemShipGroupUpdateOne) RemoveOrderItemShipGroupAssocIDs(ids ...int) *OrderItemShipGroupUpdateOne {
	oisguo.mutation.RemoveOrderItemShipGroupAssocIDs(ids...)
	return oisguo
}

// RemoveOrderItemShipGroupAssocs removes "order_item_ship_group_assocs" edges to OrderItemShipGroupAssoc entities.
func (oisguo *OrderItemShipGroupUpdateOne) RemoveOrderItemShipGroupAssocs(o ...*OrderItemShipGroupAssoc) *OrderItemShipGroupUpdateOne {
	ids := make([]int, len(o))
	for i := range o {
		ids[i] = o[i].ID
	}
	return oisguo.RemoveOrderItemShipGroupAssocIDs(ids...)
}

// ClearOrderItemShipGrpInvRes clears all "order_item_ship_grp_inv_res" edges to the OrderItemShipGrpInvRes entity.
func (oisguo *OrderItemShipGroupUpdateOne) ClearOrderItemShipGrpInvRes() *OrderItemShipGroupUpdateOne {
	oisguo.mutation.ClearOrderItemShipGrpInvRes()
	return oisguo
}

// RemoveOrderItemShipGrpInvReIDs removes the "order_item_ship_grp_inv_res" edge to OrderItemShipGrpInvRes entities by IDs.
func (oisguo *OrderItemShipGroupUpdateOne) RemoveOrderItemShipGrpInvReIDs(ids ...int) *OrderItemShipGroupUpdateOne {
	oisguo.mutation.RemoveOrderItemShipGrpInvReIDs(ids...)
	return oisguo
}

// RemoveOrderItemShipGrpInvRes removes "order_item_ship_grp_inv_res" edges to OrderItemShipGrpInvRes entities.
func (oisguo *OrderItemShipGroupUpdateOne) RemoveOrderItemShipGrpInvRes(o ...*OrderItemShipGrpInvRes) *OrderItemShipGroupUpdateOne {
	ids := make([]int, len(o))
	for i := range o {
		ids[i] = o[i].ID
	}
	return oisguo.RemoveOrderItemShipGrpInvReIDs(ids...)
}

// ClearOrderPaymentPreferences clears all "order_payment_preferences" edges to the OrderPaymentPreference entity.
func (oisguo *OrderItemShipGroupUpdateOne) ClearOrderPaymentPreferences() *OrderItemShipGroupUpdateOne {
	oisguo.mutation.ClearOrderPaymentPreferences()
	return oisguo
}

// RemoveOrderPaymentPreferenceIDs removes the "order_payment_preferences" edge to OrderPaymentPreference entities by IDs.
func (oisguo *OrderItemShipGroupUpdateOne) RemoveOrderPaymentPreferenceIDs(ids ...int) *OrderItemShipGroupUpdateOne {
	oisguo.mutation.RemoveOrderPaymentPreferenceIDs(ids...)
	return oisguo
}

// RemoveOrderPaymentPreferences removes "order_payment_preferences" edges to OrderPaymentPreference entities.
func (oisguo *OrderItemShipGroupUpdateOne) RemoveOrderPaymentPreferences(o ...*OrderPaymentPreference) *OrderItemShipGroupUpdateOne {
	ids := make([]int, len(o))
	for i := range o {
		ids[i] = o[i].ID
	}
	return oisguo.RemoveOrderPaymentPreferenceIDs(ids...)
}

// Select allows selecting one or more fields (columns) of the returned entity.
// The default is selecting all fields defined in the entity schema.
func (oisguo *OrderItemShipGroupUpdateOne) Select(field string, fields ...string) *OrderItemShipGroupUpdateOne {
	oisguo.fields = append([]string{field}, fields...)
	return oisguo
}

// Save executes the query and returns the updated OrderItemShipGroup entity.
func (oisguo *OrderItemShipGroupUpdateOne) Save(ctx context.Context) (*OrderItemShipGroup, error) {
	var (
		err  error
		node *OrderItemShipGroup
	)
	oisguo.defaults()
	if len(oisguo.hooks) == 0 {
		if err = oisguo.check(); err != nil {
			return nil, err
		}
		node, err = oisguo.sqlSave(ctx)
	} else {
		var mut Mutator = MutateFunc(func(ctx context.Context, m Mutation) (Value, error) {
			mutation, ok := m.(*OrderItemShipGroupMutation)
			if !ok {
				return nil, fmt.Errorf("unexpected mutation type %T", m)
			}
			if err = oisguo.check(); err != nil {
				return nil, err
			}
			oisguo.mutation = mutation
			node, err = oisguo.sqlSave(ctx)
			mutation.done = true
			return node, err
		})
		for i := len(oisguo.hooks) - 1; i >= 0; i-- {
			mut = oisguo.hooks[i](mut)
		}
		if _, err := mut.Mutate(ctx, oisguo.mutation); err != nil {
			return nil, err
		}
	}
	return node, err
}

// SaveX is like Save, but panics if an error occurs.
func (oisguo *OrderItemShipGroupUpdateOne) SaveX(ctx context.Context) *OrderItemShipGroup {
	node, err := oisguo.Save(ctx)
	if err != nil {
		panic(err)
	}
	return node
}

// Exec executes the query on the entity.
func (oisguo *OrderItemShipGroupUpdateOne) Exec(ctx context.Context) error {
	_, err := oisguo.Save(ctx)
	return err
}

// ExecX is like Exec, but panics if an error occurs.
func (oisguo *OrderItemShipGroupUpdateOne) ExecX(ctx context.Context) {
	if err := oisguo.Exec(ctx); err != nil {
		panic(err)
	}
}

// defaults sets the default values of the builder before save.
func (oisguo *OrderItemShipGroupUpdateOne) defaults() {
	if _, ok := oisguo.mutation.UpdateTime(); !ok {
		v := orderitemshipgroup.UpdateDefaultUpdateTime()
		oisguo.mutation.SetUpdateTime(v)
	}
}

// check runs all checks and user-defined validators on the builder.
func (oisguo *OrderItemShipGroupUpdateOne) check() error {
	if v, ok := oisguo.mutation.MaySplit(); ok {
		if err := orderitemshipgroup.MaySplitValidator(v); err != nil {
			return &ValidationError{Name: "may_split", err: fmt.Errorf("ent: validator failed for field \"may_split\": %w", err)}
		}
	}
	if v, ok := oisguo.mutation.IsGift(); ok {
		if err := orderitemshipgroup.IsGiftValidator(v); err != nil {
			return &ValidationError{Name: "is_gift", err: fmt.Errorf("ent: validator failed for field \"is_gift\": %w", err)}
		}
	}
	return nil
}

func (oisguo *OrderItemShipGroupUpdateOne) sqlSave(ctx context.Context) (_node *OrderItemShipGroup, err error) {
	_spec := &sqlgraph.UpdateSpec{
		Node: &sqlgraph.NodeSpec{
			Table:   orderitemshipgroup.Table,
			Columns: orderitemshipgroup.Columns,
			ID: &sqlgraph.FieldSpec{
				Type:   field.TypeInt,
				Column: orderitemshipgroup.FieldID,
			},
		},
	}
	id, ok := oisguo.mutation.ID()
	if !ok {
		return nil, &ValidationError{Name: "ID", err: fmt.Errorf("missing OrderItemShipGroup.ID for update")}
	}
	_spec.Node.ID.Value = id
	if fields := oisguo.fields; len(fields) > 0 {
		_spec.Node.Columns = make([]string, 0, len(fields))
		_spec.Node.Columns = append(_spec.Node.Columns, orderitemshipgroup.FieldID)
		for _, f := range fields {
			if !orderitemshipgroup.ValidColumn(f) {
				return nil, &ValidationError{Name: f, err: fmt.Errorf("ent: invalid field %q for query", f)}
			}
			if f != orderitemshipgroup.FieldID {
				_spec.Node.Columns = append(_spec.Node.Columns, f)
			}
		}
	}
	if ps := oisguo.mutation.predicates; len(ps) > 0 {
		_spec.Predicate = func(selector *sql.Selector) {
			for i := range ps {
				ps[i](selector)
			}
		}
	}
	if value, ok := oisguo.mutation.UpdateTime(); ok {
		_spec.Fields.Set = append(_spec.Fields.Set, &sqlgraph.FieldSpec{
			Type:   field.TypeTime,
			Value:  value,
			Column: orderitemshipgroup.FieldUpdateTime,
		})
	}
	if value, ok := oisguo.mutation.StringRef(); ok {
		_spec.Fields.Set = append(_spec.Fields.Set, &sqlgraph.FieldSpec{
			Type:   field.TypeString,
			Value:  value,
			Column: orderitemshipgroup.FieldStringRef,
		})
	}
	if oisguo.mutation.StringRefCleared() {
		_spec.Fields.Clear = append(_spec.Fields.Clear, &sqlgraph.FieldSpec{
			Type:   field.TypeString,
			Column: orderitemshipgroup.FieldStringRef,
		})
	}
	if value, ok := oisguo.mutation.ShipGroupSeqID(); ok {
		_spec.Fields.Set = append(_spec.Fields.Set, &sqlgraph.FieldSpec{
			Type:   field.TypeInt,
			Value:  value,
			Column: orderitemshipgroup.FieldShipGroupSeqID,
		})
	}
	if value, ok := oisguo.mutation.AddedShipGroupSeqID(); ok {
		_spec.Fields.Add = append(_spec.Fields.Add, &sqlgraph.FieldSpec{
			Type:   field.TypeInt,
			Value:  value,
			Column: orderitemshipgroup.FieldShipGroupSeqID,
		})
	}
	if value, ok := oisguo.mutation.ShipmentMethodTypeID(); ok {
		_spec.Fields.Set = append(_spec.Fields.Set, &sqlgraph.FieldSpec{
			Type:   field.TypeInt,
			Value:  value,
			Column: orderitemshipgroup.FieldShipmentMethodTypeID,
		})
	}
	if value, ok := oisguo.mutation.AddedShipmentMethodTypeID(); ok {
		_spec.Fields.Add = append(_spec.Fields.Add, &sqlgraph.FieldSpec{
			Type:   field.TypeInt,
			Value:  value,
			Column: orderitemshipgroup.FieldShipmentMethodTypeID,
		})
	}
	if oisguo.mutation.ShipmentMethodTypeIDCleared() {
		_spec.Fields.Clear = append(_spec.Fields.Clear, &sqlgraph.FieldSpec{
			Type:   field.TypeInt,
			Column: orderitemshipgroup.FieldShipmentMethodTypeID,
		})
	}
	if value, ok := oisguo.mutation.SupplierPartyID(); ok {
		_spec.Fields.Set = append(_spec.Fields.Set, &sqlgraph.FieldSpec{
			Type:   field.TypeInt,
			Value:  value,
			Column: orderitemshipgroup.FieldSupplierPartyID,
		})
	}
	if value, ok := oisguo.mutation.AddedSupplierPartyID(); ok {
		_spec.Fields.Add = append(_spec.Fields.Add, &sqlgraph.FieldSpec{
			Type:   field.TypeInt,
			Value:  value,
			Column: orderitemshipgroup.FieldSupplierPartyID,
		})
	}
	if oisguo.mutation.SupplierPartyIDCleared() {
		_spec.Fields.Clear = append(_spec.Fields.Clear, &sqlgraph.FieldSpec{
			Type:   field.TypeInt,
			Column: orderitemshipgroup.FieldSupplierPartyID,
		})
	}
	if value, ok := oisguo.mutation.SupplierAgreementID(); ok {
		_spec.Fields.Set = append(_spec.Fields.Set, &sqlgraph.FieldSpec{
			Type:   field.TypeInt,
			Value:  value,
			Column: orderitemshipgroup.FieldSupplierAgreementID,
		})
	}
	if value, ok := oisguo.mutation.AddedSupplierAgreementID(); ok {
		_spec.Fields.Add = append(_spec.Fields.Add, &sqlgraph.FieldSpec{
			Type:   field.TypeInt,
			Value:  value,
			Column: orderitemshipgroup.FieldSupplierAgreementID,
		})
	}
	if oisguo.mutation.SupplierAgreementIDCleared() {
		_spec.Fields.Clear = append(_spec.Fields.Clear, &sqlgraph.FieldSpec{
			Type:   field.TypeInt,
			Column: orderitemshipgroup.FieldSupplierAgreementID,
		})
	}
	if value, ok := oisguo.mutation.VendorPartyID(); ok {
		_spec.Fields.Set = append(_spec.Fields.Set, &sqlgraph.FieldSpec{
			Type:   field.TypeInt,
			Value:  value,
			Column: orderitemshipgroup.FieldVendorPartyID,
		})
	}
	if value, ok := oisguo.mutation.AddedVendorPartyID(); ok {
		_spec.Fields.Add = append(_spec.Fields.Add, &sqlgraph.FieldSpec{
			Type:   field.TypeInt,
			Value:  value,
			Column: orderitemshipgroup.FieldVendorPartyID,
		})
	}
	if oisguo.mutation.VendorPartyIDCleared() {
		_spec.Fields.Clear = append(_spec.Fields.Clear, &sqlgraph.FieldSpec{
			Type:   field.TypeInt,
			Column: orderitemshipgroup.FieldVendorPartyID,
		})
	}
	if value, ok := oisguo.mutation.CarrierPartyID(); ok {
		_spec.Fields.Set = append(_spec.Fields.Set, &sqlgraph.FieldSpec{
			Type:   field.TypeInt,
			Value:  value,
			Column: orderitemshipgroup.FieldCarrierPartyID,
		})
	}
	if value, ok := oisguo.mutation.AddedCarrierPartyID(); ok {
		_spec.Fields.Add = append(_spec.Fields.Add, &sqlgraph.FieldSpec{
			Type:   field.TypeInt,
			Value:  value,
			Column: orderitemshipgroup.FieldCarrierPartyID,
		})
	}
	if oisguo.mutation.CarrierPartyIDCleared() {
		_spec.Fields.Clear = append(_spec.Fields.Clear, &sqlgraph.FieldSpec{
			Type:   field.TypeInt,
			Column: orderitemshipgroup.FieldCarrierPartyID,
		})
	}
	if value, ok := oisguo.mutation.CarrierRoleTypeID(); ok {
		_spec.Fields.Set = append(_spec.Fields.Set, &sqlgraph.FieldSpec{
			Type:   field.TypeInt,
			Value:  value,
			Column: orderitemshipgroup.FieldCarrierRoleTypeID,
		})
	}
	if value, ok := oisguo.mutation.AddedCarrierRoleTypeID(); ok {
		_spec.Fields.Add = append(_spec.Fields.Add, &sqlgraph.FieldSpec{
			Type:   field.TypeInt,
			Value:  value,
			Column: orderitemshipgroup.FieldCarrierRoleTypeID,
		})
	}
	if oisguo.mutation.CarrierRoleTypeIDCleared() {
		_spec.Fields.Clear = append(_spec.Fields.Clear, &sqlgraph.FieldSpec{
			Type:   field.TypeInt,
			Column: orderitemshipgroup.FieldCarrierRoleTypeID,
		})
	}
	if value, ok := oisguo.mutation.FacilityID(); ok {
		_spec.Fields.Set = append(_spec.Fields.Set, &sqlgraph.FieldSpec{
			Type:   field.TypeInt,
			Value:  value,
			Column: orderitemshipgroup.FieldFacilityID,
		})
	}
	if value, ok := oisguo.mutation.AddedFacilityID(); ok {
		_spec.Fields.Add = append(_spec.Fields.Add, &sqlgraph.FieldSpec{
			Type:   field.TypeInt,
			Value:  value,
			Column: orderitemshipgroup.FieldFacilityID,
		})
	}
	if oisguo.mutation.FacilityIDCleared() {
		_spec.Fields.Clear = append(_spec.Fields.Clear, &sqlgraph.FieldSpec{
			Type:   field.TypeInt,
			Column: orderitemshipgroup.FieldFacilityID,
		})
	}
	if value, ok := oisguo.mutation.ContactMechID(); ok {
		_spec.Fields.Set = append(_spec.Fields.Set, &sqlgraph.FieldSpec{
			Type:   field.TypeInt,
			Value:  value,
			Column: orderitemshipgroup.FieldContactMechID,
		})
	}
	if value, ok := oisguo.mutation.AddedContactMechID(); ok {
		_spec.Fields.Add = append(_spec.Fields.Add, &sqlgraph.FieldSpec{
			Type:   field.TypeInt,
			Value:  value,
			Column: orderitemshipgroup.FieldContactMechID,
		})
	}
	if oisguo.mutation.ContactMechIDCleared() {
		_spec.Fields.Clear = append(_spec.Fields.Clear, &sqlgraph.FieldSpec{
			Type:   field.TypeInt,
			Column: orderitemshipgroup.FieldContactMechID,
		})
	}
	if value, ok := oisguo.mutation.TelecomContactMechID(); ok {
		_spec.Fields.Set = append(_spec.Fields.Set, &sqlgraph.FieldSpec{
			Type:   field.TypeInt,
			Value:  value,
			Column: orderitemshipgroup.FieldTelecomContactMechID,
		})
	}
	if value, ok := oisguo.mutation.AddedTelecomContactMechID(); ok {
		_spec.Fields.Add = append(_spec.Fields.Add, &sqlgraph.FieldSpec{
			Type:   field.TypeInt,
			Value:  value,
			Column: orderitemshipgroup.FieldTelecomContactMechID,
		})
	}
	if oisguo.mutation.TelecomContactMechIDCleared() {
		_spec.Fields.Clear = append(_spec.Fields.Clear, &sqlgraph.FieldSpec{
			Type:   field.TypeInt,
			Column: orderitemshipgroup.FieldTelecomContactMechID,
		})
	}
	if value, ok := oisguo.mutation.TrackingNumber(); ok {
		_spec.Fields.Set = append(_spec.Fields.Set, &sqlgraph.FieldSpec{
			Type:   field.TypeString,
			Value:  value,
			Column: orderitemshipgroup.FieldTrackingNumber,
		})
	}
	if oisguo.mutation.TrackingNumberCleared() {
		_spec.Fields.Clear = append(_spec.Fields.Clear, &sqlgraph.FieldSpec{
			Type:   field.TypeString,
			Column: orderitemshipgroup.FieldTrackingNumber,
		})
	}
	if value, ok := oisguo.mutation.ShippingInstructions(); ok {
		_spec.Fields.Set = append(_spec.Fields.Set, &sqlgraph.FieldSpec{
			Type:   field.TypeString,
			Value:  value,
			Column: orderitemshipgroup.FieldShippingInstructions,
		})
	}
	if oisguo.mutation.ShippingInstructionsCleared() {
		_spec.Fields.Clear = append(_spec.Fields.Clear, &sqlgraph.FieldSpec{
			Type:   field.TypeString,
			Column: orderitemshipgroup.FieldShippingInstructions,
		})
	}
	if value, ok := oisguo.mutation.MaySplit(); ok {
		_spec.Fields.Set = append(_spec.Fields.Set, &sqlgraph.FieldSpec{
			Type:   field.TypeEnum,
			Value:  value,
			Column: orderitemshipgroup.FieldMaySplit,
		})
	}
	if oisguo.mutation.MaySplitCleared() {
		_spec.Fields.Clear = append(_spec.Fields.Clear, &sqlgraph.FieldSpec{
			Type:   field.TypeEnum,
			Column: orderitemshipgroup.FieldMaySplit,
		})
	}
	if value, ok := oisguo.mutation.GiftMessage(); ok {
		_spec.Fields.Set = append(_spec.Fields.Set, &sqlgraph.FieldSpec{
			Type:   field.TypeString,
			Value:  value,
			Column: orderitemshipgroup.FieldGiftMessage,
		})
	}
	if oisguo.mutation.GiftMessageCleared() {
		_spec.Fields.Clear = append(_spec.Fields.Clear, &sqlgraph.FieldSpec{
			Type:   field.TypeString,
			Column: orderitemshipgroup.FieldGiftMessage,
		})
	}
	if value, ok := oisguo.mutation.IsGift(); ok {
		_spec.Fields.Set = append(_spec.Fields.Set, &sqlgraph.FieldSpec{
			Type:   field.TypeEnum,
			Value:  value,
			Column: orderitemshipgroup.FieldIsGift,
		})
	}
	if oisguo.mutation.IsGiftCleared() {
		_spec.Fields.Clear = append(_spec.Fields.Clear, &sqlgraph.FieldSpec{
			Type:   field.TypeEnum,
			Column: orderitemshipgroup.FieldIsGift,
		})
	}
	if value, ok := oisguo.mutation.ShipAfterDate(); ok {
		_spec.Fields.Set = append(_spec.Fields.Set, &sqlgraph.FieldSpec{
			Type:   field.TypeTime,
			Value:  value,
			Column: orderitemshipgroup.FieldShipAfterDate,
		})
	}
	if oisguo.mutation.ShipAfterDateCleared() {
		_spec.Fields.Clear = append(_spec.Fields.Clear, &sqlgraph.FieldSpec{
			Type:   field.TypeTime,
			Column: orderitemshipgroup.FieldShipAfterDate,
		})
	}
	if value, ok := oisguo.mutation.ShipByDate(); ok {
		_spec.Fields.Set = append(_spec.Fields.Set, &sqlgraph.FieldSpec{
			Type:   field.TypeTime,
			Value:  value,
			Column: orderitemshipgroup.FieldShipByDate,
		})
	}
	if oisguo.mutation.ShipByDateCleared() {
		_spec.Fields.Clear = append(_spec.Fields.Clear, &sqlgraph.FieldSpec{
			Type:   field.TypeTime,
			Column: orderitemshipgroup.FieldShipByDate,
		})
	}
	if value, ok := oisguo.mutation.EstimatedShipDate(); ok {
		_spec.Fields.Set = append(_spec.Fields.Set, &sqlgraph.FieldSpec{
			Type:   field.TypeTime,
			Value:  value,
			Column: orderitemshipgroup.FieldEstimatedShipDate,
		})
	}
	if oisguo.mutation.EstimatedShipDateCleared() {
		_spec.Fields.Clear = append(_spec.Fields.Clear, &sqlgraph.FieldSpec{
			Type:   field.TypeTime,
			Column: orderitemshipgroup.FieldEstimatedShipDate,
		})
	}
	if value, ok := oisguo.mutation.EstimatedDeliveryDate(); ok {
		_spec.Fields.Set = append(_spec.Fields.Set, &sqlgraph.FieldSpec{
			Type:   field.TypeTime,
			Value:  value,
			Column: orderitemshipgroup.FieldEstimatedDeliveryDate,
		})
	}
	if oisguo.mutation.EstimatedDeliveryDateCleared() {
		_spec.Fields.Clear = append(_spec.Fields.Clear, &sqlgraph.FieldSpec{
			Type:   field.TypeTime,
			Column: orderitemshipgroup.FieldEstimatedDeliveryDate,
		})
	}
	if oisguo.mutation.OrderHeaderCleared() {
		edge := &sqlgraph.EdgeSpec{
			Rel:     sqlgraph.M2O,
			Inverse: true,
			Table:   orderitemshipgroup.OrderHeaderTable,
			Columns: []string{orderitemshipgroup.OrderHeaderColumn},
			Bidi:    false,
			Target: &sqlgraph.EdgeTarget{
				IDSpec: &sqlgraph.FieldSpec{
					Type:   field.TypeInt,
					Column: orderheader.FieldID,
				},
			},
		}
		_spec.Edges.Clear = append(_spec.Edges.Clear, edge)
	}
	if nodes := oisguo.mutation.OrderHeaderIDs(); len(nodes) > 0 {
		edge := &sqlgraph.EdgeSpec{
			Rel:     sqlgraph.M2O,
			Inverse: true,
			Table:   orderitemshipgroup.OrderHeaderTable,
			Columns: []string{orderitemshipgroup.OrderHeaderColumn},
			Bidi:    false,
			Target: &sqlgraph.EdgeTarget{
				IDSpec: &sqlgraph.FieldSpec{
					Type:   field.TypeInt,
					Column: orderheader.FieldID,
				},
			},
		}
		for _, k := range nodes {
			edge.Target.Nodes = append(edge.Target.Nodes, k)
		}
		_spec.Edges.Add = append(_spec.Edges.Add, edge)
	}
	if oisguo.mutation.OrderAdjustmentsCleared() {
		edge := &sqlgraph.EdgeSpec{
			Rel:     sqlgraph.O2M,
			Inverse: false,
			Table:   orderitemshipgroup.OrderAdjustmentsTable,
			Columns: []string{orderitemshipgroup.OrderAdjustmentsColumn},
			Bidi:    false,
			Target: &sqlgraph.EdgeTarget{
				IDSpec: &sqlgraph.FieldSpec{
					Type:   field.TypeInt,
					Column: orderadjustment.FieldID,
				},
			},
		}
		_spec.Edges.Clear = append(_spec.Edges.Clear, edge)
	}
	if nodes := oisguo.mutation.RemovedOrderAdjustmentsIDs(); len(nodes) > 0 && !oisguo.mutation.OrderAdjustmentsCleared() {
		edge := &sqlgraph.EdgeSpec{
			Rel:     sqlgraph.O2M,
			Inverse: false,
			Table:   orderitemshipgroup.OrderAdjustmentsTable,
			Columns: []string{orderitemshipgroup.OrderAdjustmentsColumn},
			Bidi:    false,
			Target: &sqlgraph.EdgeTarget{
				IDSpec: &sqlgraph.FieldSpec{
					Type:   field.TypeInt,
					Column: orderadjustment.FieldID,
				},
			},
		}
		for _, k := range nodes {
			edge.Target.Nodes = append(edge.Target.Nodes, k)
		}
		_spec.Edges.Clear = append(_spec.Edges.Clear, edge)
	}
	if nodes := oisguo.mutation.OrderAdjustmentsIDs(); len(nodes) > 0 {
		edge := &sqlgraph.EdgeSpec{
			Rel:     sqlgraph.O2M,
			Inverse: false,
			Table:   orderitemshipgroup.OrderAdjustmentsTable,
			Columns: []string{orderitemshipgroup.OrderAdjustmentsColumn},
			Bidi:    false,
			Target: &sqlgraph.EdgeTarget{
				IDSpec: &sqlgraph.FieldSpec{
					Type:   field.TypeInt,
					Column: orderadjustment.FieldID,
				},
			},
		}
		for _, k := range nodes {
			edge.Target.Nodes = append(edge.Target.Nodes, k)
		}
		_spec.Edges.Add = append(_spec.Edges.Add, edge)
	}
	if oisguo.mutation.OrderItemShipGroupAssocsCleared() {
		edge := &sqlgraph.EdgeSpec{
			Rel:     sqlgraph.O2M,
			Inverse: false,
			Table:   orderitemshipgroup.OrderItemShipGroupAssocsTable,
			Columns: []string{orderitemshipgroup.OrderItemShipGroupAssocsColumn},
			Bidi:    false,
			Target: &sqlgraph.EdgeTarget{
				IDSpec: &sqlgraph.FieldSpec{
					Type:   field.TypeInt,
					Column: orderitemshipgroupassoc.FieldID,
				},
			},
		}
		_spec.Edges.Clear = append(_spec.Edges.Clear, edge)
	}
	if nodes := oisguo.mutation.RemovedOrderItemShipGroupAssocsIDs(); len(nodes) > 0 && !oisguo.mutation.OrderItemShipGroupAssocsCleared() {
		edge := &sqlgraph.EdgeSpec{
			Rel:     sqlgraph.O2M,
			Inverse: false,
			Table:   orderitemshipgroup.OrderItemShipGroupAssocsTable,
			Columns: []string{orderitemshipgroup.OrderItemShipGroupAssocsColumn},
			Bidi:    false,
			Target: &sqlgraph.EdgeTarget{
				IDSpec: &sqlgraph.FieldSpec{
					Type:   field.TypeInt,
					Column: orderitemshipgroupassoc.FieldID,
				},
			},
		}
		for _, k := range nodes {
			edge.Target.Nodes = append(edge.Target.Nodes, k)
		}
		_spec.Edges.Clear = append(_spec.Edges.Clear, edge)
	}
	if nodes := oisguo.mutation.OrderItemShipGroupAssocsIDs(); len(nodes) > 0 {
		edge := &sqlgraph.EdgeSpec{
			Rel:     sqlgraph.O2M,
			Inverse: false,
			Table:   orderitemshipgroup.OrderItemShipGroupAssocsTable,
			Columns: []string{orderitemshipgroup.OrderItemShipGroupAssocsColumn},
			Bidi:    false,
			Target: &sqlgraph.EdgeTarget{
				IDSpec: &sqlgraph.FieldSpec{
					Type:   field.TypeInt,
					Column: orderitemshipgroupassoc.FieldID,
				},
			},
		}
		for _, k := range nodes {
			edge.Target.Nodes = append(edge.Target.Nodes, k)
		}
		_spec.Edges.Add = append(_spec.Edges.Add, edge)
	}
	if oisguo.mutation.OrderItemShipGrpInvResCleared() {
		edge := &sqlgraph.EdgeSpec{
			Rel:     sqlgraph.O2M,
			Inverse: false,
			Table:   orderitemshipgroup.OrderItemShipGrpInvResTable,
			Columns: []string{orderitemshipgroup.OrderItemShipGrpInvResColumn},
			Bidi:    false,
			Target: &sqlgraph.EdgeTarget{
				IDSpec: &sqlgraph.FieldSpec{
					Type:   field.TypeInt,
					Column: orderitemshipgrpinvres.FieldID,
				},
			},
		}
		_spec.Edges.Clear = append(_spec.Edges.Clear, edge)
	}
	if nodes := oisguo.mutation.RemovedOrderItemShipGrpInvResIDs(); len(nodes) > 0 && !oisguo.mutation.OrderItemShipGrpInvResCleared() {
		edge := &sqlgraph.EdgeSpec{
			Rel:     sqlgraph.O2M,
			Inverse: false,
			Table:   orderitemshipgroup.OrderItemShipGrpInvResTable,
			Columns: []string{orderitemshipgroup.OrderItemShipGrpInvResColumn},
			Bidi:    false,
			Target: &sqlgraph.EdgeTarget{
				IDSpec: &sqlgraph.FieldSpec{
					Type:   field.TypeInt,
					Column: orderitemshipgrpinvres.FieldID,
				},
			},
		}
		for _, k := range nodes {
			edge.Target.Nodes = append(edge.Target.Nodes, k)
		}
		_spec.Edges.Clear = append(_spec.Edges.Clear, edge)
	}
	if nodes := oisguo.mutation.OrderItemShipGrpInvResIDs(); len(nodes) > 0 {
		edge := &sqlgraph.EdgeSpec{
			Rel:     sqlgraph.O2M,
			Inverse: false,
			Table:   orderitemshipgroup.OrderItemShipGrpInvResTable,
			Columns: []string{orderitemshipgroup.OrderItemShipGrpInvResColumn},
			Bidi:    false,
			Target: &sqlgraph.EdgeTarget{
				IDSpec: &sqlgraph.FieldSpec{
					Type:   field.TypeInt,
					Column: orderitemshipgrpinvres.FieldID,
				},
			},
		}
		for _, k := range nodes {
			edge.Target.Nodes = append(edge.Target.Nodes, k)
		}
		_spec.Edges.Add = append(_spec.Edges.Add, edge)
	}
	if oisguo.mutation.OrderPaymentPreferencesCleared() {
		edge := &sqlgraph.EdgeSpec{
			Rel:     sqlgraph.O2M,
			Inverse: false,
			Table:   orderitemshipgroup.OrderPaymentPreferencesTable,
			Columns: []string{orderitemshipgroup.OrderPaymentPreferencesColumn},
			Bidi:    false,
			Target: &sqlgraph.EdgeTarget{
				IDSpec: &sqlgraph.FieldSpec{
					Type:   field.TypeInt,
					Column: orderpaymentpreference.FieldID,
				},
			},
		}
		_spec.Edges.Clear = append(_spec.Edges.Clear, edge)
	}
	if nodes := oisguo.mutation.RemovedOrderPaymentPreferencesIDs(); len(nodes) > 0 && !oisguo.mutation.OrderPaymentPreferencesCleared() {
		edge := &sqlgraph.EdgeSpec{
			Rel:     sqlgraph.O2M,
			Inverse: false,
			Table:   orderitemshipgroup.OrderPaymentPreferencesTable,
			Columns: []string{orderitemshipgroup.OrderPaymentPreferencesColumn},
			Bidi:    false,
			Target: &sqlgraph.EdgeTarget{
				IDSpec: &sqlgraph.FieldSpec{
					Type:   field.TypeInt,
					Column: orderpaymentpreference.FieldID,
				},
			},
		}
		for _, k := range nodes {
			edge.Target.Nodes = append(edge.Target.Nodes, k)
		}
		_spec.Edges.Clear = append(_spec.Edges.Clear, edge)
	}
	if nodes := oisguo.mutation.OrderPaymentPreferencesIDs(); len(nodes) > 0 {
		edge := &sqlgraph.EdgeSpec{
			Rel:     sqlgraph.O2M,
			Inverse: false,
			Table:   orderitemshipgroup.OrderPaymentPreferencesTable,
			Columns: []string{orderitemshipgroup.OrderPaymentPreferencesColumn},
			Bidi:    false,
			Target: &sqlgraph.EdgeTarget{
				IDSpec: &sqlgraph.FieldSpec{
					Type:   field.TypeInt,
					Column: orderpaymentpreference.FieldID,
				},
			},
		}
		for _, k := range nodes {
			edge.Target.Nodes = append(edge.Target.Nodes, k)
		}
		_spec.Edges.Add = append(_spec.Edges.Add, edge)
	}
	_node = &OrderItemShipGroup{config: oisguo.config}
	_spec.Assign = _node.assignValues
	_spec.ScanValues = _node.scanValues
	if err = sqlgraph.UpdateNode(ctx, oisguo.driver, _spec); err != nil {
		if _, ok := err.(*sqlgraph.NotFoundError); ok {
			err = &NotFoundError{orderitemshipgroup.Label}
		} else if cerr, ok := isSQLConstraintError(err); ok {
			err = cerr
		}
		return nil, err
	}
	return _node, nil
}
