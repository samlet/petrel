// Code generated by entc, DO NOT EDIT.

package ent

import (
	"fmt"
	"strings"
	"time"

	"entgo.io/ent/dialect/sql"
	"github.com/samlet/petrel/alfin/modules/catalog/ent/orderheader"
	"github.com/samlet/petrel/alfin/modules/catalog/ent/orderitem"
	"github.com/samlet/petrel/alfin/modules/catalog/ent/orderitemshipgroup"
	"github.com/samlet/petrel/alfin/modules/catalog/ent/orderitemshipgroupassoc"
)

// OrderItemShipGroupAssoc is the model entity for the OrderItemShipGroupAssoc schema.
type OrderItemShipGroupAssoc struct {
	config `json:"-"`
	// ID of the ent.
	ID int `json:"id,omitempty"`
	// CreateTime holds the value of the "create_time" field.
	CreateTime time.Time `json:"create_time,omitempty"`
	// UpdateTime holds the value of the "update_time" field.
	UpdateTime time.Time `json:"update_time,omitempty"`
	// StringRef holds the value of the "string_ref" field.
	StringRef string `json:"string_ref,omitempty"`
	// OrderItemSeqID holds the value of the "order_item_seq_id" field.
	OrderItemSeqID int `json:"order_item_seq_id,omitempty"`
	// ShipGroupSeqID holds the value of the "ship_group_seq_id" field.
	ShipGroupSeqID int `json:"ship_group_seq_id,omitempty"`
	// Quantity holds the value of the "quantity" field.
	Quantity float64 `json:"quantity,omitempty"`
	// CancelQuantity holds the value of the "cancel_quantity" field.
	CancelQuantity float64 `json:"cancel_quantity,omitempty"`
	// Edges holds the relations/edges for other nodes in the graph.
	// The values are being populated by the OrderItemShipGroupAssocQuery when eager-loading is set.
	Edges                                              OrderItemShipGroupAssocEdges `json:"edges"`
	order_header_order_item_ship_group_assocs          *int
	order_item_order_item_ship_group_assocs            *int
	order_item_ship_group_order_item_ship_group_assocs *int
}

// OrderItemShipGroupAssocEdges holds the relations/edges for other nodes in the graph.
type OrderItemShipGroupAssocEdges struct {
	// OrderHeader holds the value of the order_header edge.
	OrderHeader *OrderHeader `json:"order_header,omitempty"`
	// OrderItem holds the value of the order_item edge.
	OrderItem *OrderItem `json:"order_item,omitempty"`
	// OrderItemShipGroup holds the value of the order_item_ship_group edge.
	OrderItemShipGroup *OrderItemShipGroup `json:"order_item_ship_group,omitempty"`
	// OrderAdjustments holds the value of the order_adjustments edge.
	OrderAdjustments []*OrderAdjustment `json:"order_adjustments,omitempty"`
	// OrderItemShipGrpInvRes holds the value of the order_item_ship_grp_inv_res edge.
	OrderItemShipGrpInvRes []*OrderItemShipGrpInvRes `json:"order_item_ship_grp_inv_res,omitempty"`
	// loadedTypes holds the information for reporting if a
	// type was loaded (or requested) in eager-loading or not.
	loadedTypes [5]bool
}

// OrderHeaderOrErr returns the OrderHeader value or an error if the edge
// was not loaded in eager-loading, or loaded but was not found.
func (e OrderItemShipGroupAssocEdges) OrderHeaderOrErr() (*OrderHeader, error) {
	if e.loadedTypes[0] {
		if e.OrderHeader == nil {
			// The edge order_header was loaded in eager-loading,
			// but was not found.
			return nil, &NotFoundError{label: orderheader.Label}
		}
		return e.OrderHeader, nil
	}
	return nil, &NotLoadedError{edge: "order_header"}
}

// OrderItemOrErr returns the OrderItem value or an error if the edge
// was not loaded in eager-loading, or loaded but was not found.
func (e OrderItemShipGroupAssocEdges) OrderItemOrErr() (*OrderItem, error) {
	if e.loadedTypes[1] {
		if e.OrderItem == nil {
			// The edge order_item was loaded in eager-loading,
			// but was not found.
			return nil, &NotFoundError{label: orderitem.Label}
		}
		return e.OrderItem, nil
	}
	return nil, &NotLoadedError{edge: "order_item"}
}

// OrderItemShipGroupOrErr returns the OrderItemShipGroup value or an error if the edge
// was not loaded in eager-loading, or loaded but was not found.
func (e OrderItemShipGroupAssocEdges) OrderItemShipGroupOrErr() (*OrderItemShipGroup, error) {
	if e.loadedTypes[2] {
		if e.OrderItemShipGroup == nil {
			// The edge order_item_ship_group was loaded in eager-loading,
			// but was not found.
			return nil, &NotFoundError{label: orderitemshipgroup.Label}
		}
		return e.OrderItemShipGroup, nil
	}
	return nil, &NotLoadedError{edge: "order_item_ship_group"}
}

// OrderAdjustmentsOrErr returns the OrderAdjustments value or an error if the edge
// was not loaded in eager-loading.
func (e OrderItemShipGroupAssocEdges) OrderAdjustmentsOrErr() ([]*OrderAdjustment, error) {
	if e.loadedTypes[3] {
		return e.OrderAdjustments, nil
	}
	return nil, &NotLoadedError{edge: "order_adjustments"}
}

// OrderItemShipGrpInvResOrErr returns the OrderItemShipGrpInvRes value or an error if the edge
// was not loaded in eager-loading.
func (e OrderItemShipGroupAssocEdges) OrderItemShipGrpInvResOrErr() ([]*OrderItemShipGrpInvRes, error) {
	if e.loadedTypes[4] {
		return e.OrderItemShipGrpInvRes, nil
	}
	return nil, &NotLoadedError{edge: "order_item_ship_grp_inv_res"}
}

// scanValues returns the types for scanning values from sql.Rows.
func (*OrderItemShipGroupAssoc) scanValues(columns []string) ([]interface{}, error) {
	values := make([]interface{}, len(columns))
	for i := range columns {
		switch columns[i] {
		case orderitemshipgroupassoc.FieldQuantity, orderitemshipgroupassoc.FieldCancelQuantity:
			values[i] = new(sql.NullFloat64)
		case orderitemshipgroupassoc.FieldID, orderitemshipgroupassoc.FieldOrderItemSeqID, orderitemshipgroupassoc.FieldShipGroupSeqID:
			values[i] = new(sql.NullInt64)
		case orderitemshipgroupassoc.FieldStringRef:
			values[i] = new(sql.NullString)
		case orderitemshipgroupassoc.FieldCreateTime, orderitemshipgroupassoc.FieldUpdateTime:
			values[i] = new(sql.NullTime)
		case orderitemshipgroupassoc.ForeignKeys[0]: // order_header_order_item_ship_group_assocs
			values[i] = new(sql.NullInt64)
		case orderitemshipgroupassoc.ForeignKeys[1]: // order_item_order_item_ship_group_assocs
			values[i] = new(sql.NullInt64)
		case orderitemshipgroupassoc.ForeignKeys[2]: // order_item_ship_group_order_item_ship_group_assocs
			values[i] = new(sql.NullInt64)
		default:
			return nil, fmt.Errorf("unexpected column %q for type OrderItemShipGroupAssoc", columns[i])
		}
	}
	return values, nil
}

// assignValues assigns the values that were returned from sql.Rows (after scanning)
// to the OrderItemShipGroupAssoc fields.
func (oisga *OrderItemShipGroupAssoc) assignValues(columns []string, values []interface{}) error {
	if m, n := len(values), len(columns); m < n {
		return fmt.Errorf("mismatch number of scan values: %d != %d", m, n)
	}
	for i := range columns {
		switch columns[i] {
		case orderitemshipgroupassoc.FieldID:
			value, ok := values[i].(*sql.NullInt64)
			if !ok {
				return fmt.Errorf("unexpected type %T for field id", value)
			}
			oisga.ID = int(value.Int64)
		case orderitemshipgroupassoc.FieldCreateTime:
			if value, ok := values[i].(*sql.NullTime); !ok {
				return fmt.Errorf("unexpected type %T for field create_time", values[i])
			} else if value.Valid {
				oisga.CreateTime = value.Time
			}
		case orderitemshipgroupassoc.FieldUpdateTime:
			if value, ok := values[i].(*sql.NullTime); !ok {
				return fmt.Errorf("unexpected type %T for field update_time", values[i])
			} else if value.Valid {
				oisga.UpdateTime = value.Time
			}
		case orderitemshipgroupassoc.FieldStringRef:
			if value, ok := values[i].(*sql.NullString); !ok {
				return fmt.Errorf("unexpected type %T for field string_ref", values[i])
			} else if value.Valid {
				oisga.StringRef = value.String
			}
		case orderitemshipgroupassoc.FieldOrderItemSeqID:
			if value, ok := values[i].(*sql.NullInt64); !ok {
				return fmt.Errorf("unexpected type %T for field order_item_seq_id", values[i])
			} else if value.Valid {
				oisga.OrderItemSeqID = int(value.Int64)
			}
		case orderitemshipgroupassoc.FieldShipGroupSeqID:
			if value, ok := values[i].(*sql.NullInt64); !ok {
				return fmt.Errorf("unexpected type %T for field ship_group_seq_id", values[i])
			} else if value.Valid {
				oisga.ShipGroupSeqID = int(value.Int64)
			}
		case orderitemshipgroupassoc.FieldQuantity:
			if value, ok := values[i].(*sql.NullFloat64); !ok {
				return fmt.Errorf("unexpected type %T for field quantity", values[i])
			} else if value.Valid {
				oisga.Quantity = value.Float64
			}
		case orderitemshipgroupassoc.FieldCancelQuantity:
			if value, ok := values[i].(*sql.NullFloat64); !ok {
				return fmt.Errorf("unexpected type %T for field cancel_quantity", values[i])
			} else if value.Valid {
				oisga.CancelQuantity = value.Float64
			}
		case orderitemshipgroupassoc.ForeignKeys[0]:
			if value, ok := values[i].(*sql.NullInt64); !ok {
				return fmt.Errorf("unexpected type %T for edge-field order_header_order_item_ship_group_assocs", value)
			} else if value.Valid {
				oisga.order_header_order_item_ship_group_assocs = new(int)
				*oisga.order_header_order_item_ship_group_assocs = int(value.Int64)
			}
		case orderitemshipgroupassoc.ForeignKeys[1]:
			if value, ok := values[i].(*sql.NullInt64); !ok {
				return fmt.Errorf("unexpected type %T for edge-field order_item_order_item_ship_group_assocs", value)
			} else if value.Valid {
				oisga.order_item_order_item_ship_group_assocs = new(int)
				*oisga.order_item_order_item_ship_group_assocs = int(value.Int64)
			}
		case orderitemshipgroupassoc.ForeignKeys[2]:
			if value, ok := values[i].(*sql.NullInt64); !ok {
				return fmt.Errorf("unexpected type %T for edge-field order_item_ship_group_order_item_ship_group_assocs", value)
			} else if value.Valid {
				oisga.order_item_ship_group_order_item_ship_group_assocs = new(int)
				*oisga.order_item_ship_group_order_item_ship_group_assocs = int(value.Int64)
			}
		}
	}
	return nil
}

// QueryOrderHeader queries the "order_header" edge of the OrderItemShipGroupAssoc entity.
func (oisga *OrderItemShipGroupAssoc) QueryOrderHeader() *OrderHeaderQuery {
	return (&OrderItemShipGroupAssocClient{config: oisga.config}).QueryOrderHeader(oisga)
}

// QueryOrderItem queries the "order_item" edge of the OrderItemShipGroupAssoc entity.
func (oisga *OrderItemShipGroupAssoc) QueryOrderItem() *OrderItemQuery {
	return (&OrderItemShipGroupAssocClient{config: oisga.config}).QueryOrderItem(oisga)
}

// QueryOrderItemShipGroup queries the "order_item_ship_group" edge of the OrderItemShipGroupAssoc entity.
func (oisga *OrderItemShipGroupAssoc) QueryOrderItemShipGroup() *OrderItemShipGroupQuery {
	return (&OrderItemShipGroupAssocClient{config: oisga.config}).QueryOrderItemShipGroup(oisga)
}

// QueryOrderAdjustments queries the "order_adjustments" edge of the OrderItemShipGroupAssoc entity.
func (oisga *OrderItemShipGroupAssoc) QueryOrderAdjustments() *OrderAdjustmentQuery {
	return (&OrderItemShipGroupAssocClient{config: oisga.config}).QueryOrderAdjustments(oisga)
}

// QueryOrderItemShipGrpInvRes queries the "order_item_ship_grp_inv_res" edge of the OrderItemShipGroupAssoc entity.
func (oisga *OrderItemShipGroupAssoc) QueryOrderItemShipGrpInvRes() *OrderItemShipGrpInvResQuery {
	return (&OrderItemShipGroupAssocClient{config: oisga.config}).QueryOrderItemShipGrpInvRes(oisga)
}

// Update returns a builder for updating this OrderItemShipGroupAssoc.
// Note that you need to call OrderItemShipGroupAssoc.Unwrap() before calling this method if this OrderItemShipGroupAssoc
// was returned from a transaction, and the transaction was committed or rolled back.
func (oisga *OrderItemShipGroupAssoc) Update() *OrderItemShipGroupAssocUpdateOne {
	return (&OrderItemShipGroupAssocClient{config: oisga.config}).UpdateOne(oisga)
}

// Unwrap unwraps the OrderItemShipGroupAssoc entity that was returned from a transaction after it was closed,
// so that all future queries will be executed through the driver which created the transaction.
func (oisga *OrderItemShipGroupAssoc) Unwrap() *OrderItemShipGroupAssoc {
	tx, ok := oisga.config.driver.(*txDriver)
	if !ok {
		panic("ent: OrderItemShipGroupAssoc is not a transactional entity")
	}
	oisga.config.driver = tx.drv
	return oisga
}

// String implements the fmt.Stringer.
func (oisga *OrderItemShipGroupAssoc) String() string {
	var builder strings.Builder
	builder.WriteString("OrderItemShipGroupAssoc(")
	builder.WriteString(fmt.Sprintf("id=%v", oisga.ID))
	builder.WriteString(", create_time=")
	builder.WriteString(oisga.CreateTime.Format(time.ANSIC))
	builder.WriteString(", update_time=")
	builder.WriteString(oisga.UpdateTime.Format(time.ANSIC))
	builder.WriteString(", string_ref=")
	builder.WriteString(oisga.StringRef)
	builder.WriteString(", order_item_seq_id=")
	builder.WriteString(fmt.Sprintf("%v", oisga.OrderItemSeqID))
	builder.WriteString(", ship_group_seq_id=")
	builder.WriteString(fmt.Sprintf("%v", oisga.ShipGroupSeqID))
	builder.WriteString(", quantity=")
	builder.WriteString(fmt.Sprintf("%v", oisga.Quantity))
	builder.WriteString(", cancel_quantity=")
	builder.WriteString(fmt.Sprintf("%v", oisga.CancelQuantity))
	builder.WriteByte(')')
	return builder.String()
}

// OrderItemShipGroupAssocs is a parsable slice of OrderItemShipGroupAssoc.
type OrderItemShipGroupAssocs []*OrderItemShipGroupAssoc

func (oisga OrderItemShipGroupAssocs) config(cfg config) {
	for _i := range oisga {
		oisga[_i].config = cfg
	}
}
