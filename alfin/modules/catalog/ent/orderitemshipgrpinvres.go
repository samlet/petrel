// Code generated by entc, DO NOT EDIT.

package ent

import (
	"fmt"
	"strings"
	"time"

	"entgo.io/ent/dialect/sql"
	"github.com/samlet/petrel/alfin/modules/catalog/ent/orderheader"
	"github.com/samlet/petrel/alfin/modules/catalog/ent/orderitem"
	"github.com/samlet/petrel/alfin/modules/catalog/ent/orderitemshipgroup"
	"github.com/samlet/petrel/alfin/modules/catalog/ent/orderitemshipgroupassoc"
	"github.com/samlet/petrel/alfin/modules/catalog/ent/orderitemshipgrpinvres"
)

// OrderItemShipGrpInvRes is the model entity for the OrderItemShipGrpInvRes schema.
type OrderItemShipGrpInvRes struct {
	config `json:"-"`
	// ID of the ent.
	ID int `json:"id,omitempty"`
	// CreateTime holds the value of the "create_time" field.
	CreateTime time.Time `json:"create_time,omitempty"`
	// UpdateTime holds the value of the "update_time" field.
	UpdateTime time.Time `json:"update_time,omitempty"`
	// StringRef holds the value of the "string_ref" field.
	StringRef string `json:"string_ref,omitempty"`
	// ShipGroupSeqID holds the value of the "ship_group_seq_id" field.
	ShipGroupSeqID int `json:"ship_group_seq_id,omitempty"`
	// OrderItemSeqID holds the value of the "order_item_seq_id" field.
	OrderItemSeqID int `json:"order_item_seq_id,omitempty"`
	// InventoryItemID holds the value of the "inventory_item_id" field.
	InventoryItemID int `json:"inventory_item_id,omitempty"`
	// ReserveOrderEnumID holds the value of the "reserve_order_enum_id" field.
	ReserveOrderEnumID int `json:"reserve_order_enum_id,omitempty"`
	// Quantity holds the value of the "quantity" field.
	Quantity float64 `json:"quantity,omitempty"`
	// QuantityNotAvailable holds the value of the "quantity_not_available" field.
	QuantityNotAvailable float64 `json:"quantity_not_available,omitempty"`
	// ReservedDatetime holds the value of the "reserved_datetime" field.
	ReservedDatetime time.Time `json:"reserved_datetime,omitempty"`
	// CreatedDatetime holds the value of the "created_datetime" field.
	CreatedDatetime time.Time `json:"created_datetime,omitempty"`
	// PromisedDatetime holds the value of the "promised_datetime" field.
	PromisedDatetime time.Time `json:"promised_datetime,omitempty"`
	// CurrentPromisedDate holds the value of the "current_promised_date" field.
	CurrentPromisedDate time.Time `json:"current_promised_date,omitempty"`
	// Priority holds the value of the "priority" field.
	Priority orderitemshipgrpinvres.Priority `json:"priority,omitempty"`
	// SequenceID holds the value of the "sequence_id" field.
	SequenceID int `json:"sequence_id,omitempty"`
	// OldPickStartDate holds the value of the "old_pick_start_date" field.
	OldPickStartDate time.Time `json:"old_pick_start_date,omitempty"`
	// Edges holds the relations/edges for other nodes in the graph.
	// The values are being populated by the OrderItemShipGrpInvResQuery when eager-loading is set.
	Edges                                                   OrderItemShipGrpInvResEdges `json:"edges"`
	order_header_order_item_ship_grp_inv_res                *int
	order_item_order_item_ship_grp_inv_res                  *int
	order_item_ship_group_order_item_ship_grp_inv_res       *int
	order_item_ship_group_assoc_order_item_ship_grp_inv_res *int
}

// OrderItemShipGrpInvResEdges holds the relations/edges for other nodes in the graph.
type OrderItemShipGrpInvResEdges struct {
	// OrderHeader holds the value of the order_header edge.
	OrderHeader *OrderHeader `json:"order_header,omitempty"`
	// OrderItem holds the value of the order_item edge.
	OrderItem *OrderItem `json:"order_item,omitempty"`
	// OrderItemShipGroup holds the value of the order_item_ship_group edge.
	OrderItemShipGroup *OrderItemShipGroup `json:"order_item_ship_group,omitempty"`
	// OrderItemShipGroupAssoc holds the value of the order_item_ship_group_assoc edge.
	OrderItemShipGroupAssoc *OrderItemShipGroupAssoc `json:"order_item_ship_group_assoc,omitempty"`
	// InventoryItemDetails holds the value of the inventory_item_details edge.
	InventoryItemDetails []*InventoryItemDetail `json:"inventory_item_details,omitempty"`
	// loadedTypes holds the information for reporting if a
	// type was loaded (or requested) in eager-loading or not.
	loadedTypes [5]bool
}

// OrderHeaderOrErr returns the OrderHeader value or an error if the edge
// was not loaded in eager-loading, or loaded but was not found.
func (e OrderItemShipGrpInvResEdges) OrderHeaderOrErr() (*OrderHeader, error) {
	if e.loadedTypes[0] {
		if e.OrderHeader == nil {
			// The edge order_header was loaded in eager-loading,
			// but was not found.
			return nil, &NotFoundError{label: orderheader.Label}
		}
		return e.OrderHeader, nil
	}
	return nil, &NotLoadedError{edge: "order_header"}
}

// OrderItemOrErr returns the OrderItem value or an error if the edge
// was not loaded in eager-loading, or loaded but was not found.
func (e OrderItemShipGrpInvResEdges) OrderItemOrErr() (*OrderItem, error) {
	if e.loadedTypes[1] {
		if e.OrderItem == nil {
			// The edge order_item was loaded in eager-loading,
			// but was not found.
			return nil, &NotFoundError{label: orderitem.Label}
		}
		return e.OrderItem, nil
	}
	return nil, &NotLoadedError{edge: "order_item"}
}

// OrderItemShipGroupOrErr returns the OrderItemShipGroup value or an error if the edge
// was not loaded in eager-loading, or loaded but was not found.
func (e OrderItemShipGrpInvResEdges) OrderItemShipGroupOrErr() (*OrderItemShipGroup, error) {
	if e.loadedTypes[2] {
		if e.OrderItemShipGroup == nil {
			// The edge order_item_ship_group was loaded in eager-loading,
			// but was not found.
			return nil, &NotFoundError{label: orderitemshipgroup.Label}
		}
		return e.OrderItemShipGroup, nil
	}
	return nil, &NotLoadedError{edge: "order_item_ship_group"}
}

// OrderItemShipGroupAssocOrErr returns the OrderItemShipGroupAssoc value or an error if the edge
// was not loaded in eager-loading, or loaded but was not found.
func (e OrderItemShipGrpInvResEdges) OrderItemShipGroupAssocOrErr() (*OrderItemShipGroupAssoc, error) {
	if e.loadedTypes[3] {
		if e.OrderItemShipGroupAssoc == nil {
			// The edge order_item_ship_group_assoc was loaded in eager-loading,
			// but was not found.
			return nil, &NotFoundError{label: orderitemshipgroupassoc.Label}
		}
		return e.OrderItemShipGroupAssoc, nil
	}
	return nil, &NotLoadedError{edge: "order_item_ship_group_assoc"}
}

// InventoryItemDetailsOrErr returns the InventoryItemDetails value or an error if the edge
// was not loaded in eager-loading.
func (e OrderItemShipGrpInvResEdges) InventoryItemDetailsOrErr() ([]*InventoryItemDetail, error) {
	if e.loadedTypes[4] {
		return e.InventoryItemDetails, nil
	}
	return nil, &NotLoadedError{edge: "inventory_item_details"}
}

// scanValues returns the types for scanning values from sql.Rows.
func (*OrderItemShipGrpInvRes) scanValues(columns []string) ([]interface{}, error) {
	values := make([]interface{}, len(columns))
	for i := range columns {
		switch columns[i] {
		case orderitemshipgrpinvres.FieldQuantity, orderitemshipgrpinvres.FieldQuantityNotAvailable:
			values[i] = new(sql.NullFloat64)
		case orderitemshipgrpinvres.FieldID, orderitemshipgrpinvres.FieldShipGroupSeqID, orderitemshipgrpinvres.FieldOrderItemSeqID, orderitemshipgrpinvres.FieldInventoryItemID, orderitemshipgrpinvres.FieldReserveOrderEnumID, orderitemshipgrpinvres.FieldSequenceID:
			values[i] = new(sql.NullInt64)
		case orderitemshipgrpinvres.FieldStringRef, orderitemshipgrpinvres.FieldPriority:
			values[i] = new(sql.NullString)
		case orderitemshipgrpinvres.FieldCreateTime, orderitemshipgrpinvres.FieldUpdateTime, orderitemshipgrpinvres.FieldReservedDatetime, orderitemshipgrpinvres.FieldCreatedDatetime, orderitemshipgrpinvres.FieldPromisedDatetime, orderitemshipgrpinvres.FieldCurrentPromisedDate, orderitemshipgrpinvres.FieldOldPickStartDate:
			values[i] = new(sql.NullTime)
		case orderitemshipgrpinvres.ForeignKeys[0]: // order_header_order_item_ship_grp_inv_res
			values[i] = new(sql.NullInt64)
		case orderitemshipgrpinvres.ForeignKeys[1]: // order_item_order_item_ship_grp_inv_res
			values[i] = new(sql.NullInt64)
		case orderitemshipgrpinvres.ForeignKeys[2]: // order_item_ship_group_order_item_ship_grp_inv_res
			values[i] = new(sql.NullInt64)
		case orderitemshipgrpinvres.ForeignKeys[3]: // order_item_ship_group_assoc_order_item_ship_grp_inv_res
			values[i] = new(sql.NullInt64)
		default:
			return nil, fmt.Errorf("unexpected column %q for type OrderItemShipGrpInvRes", columns[i])
		}
	}
	return values, nil
}

// assignValues assigns the values that were returned from sql.Rows (after scanning)
// to the OrderItemShipGrpInvRes fields.
func (oisgir *OrderItemShipGrpInvRes) assignValues(columns []string, values []interface{}) error {
	if m, n := len(values), len(columns); m < n {
		return fmt.Errorf("mismatch number of scan values: %d != %d", m, n)
	}
	for i := range columns {
		switch columns[i] {
		case orderitemshipgrpinvres.FieldID:
			value, ok := values[i].(*sql.NullInt64)
			if !ok {
				return fmt.Errorf("unexpected type %T for field id", value)
			}
			oisgir.ID = int(value.Int64)
		case orderitemshipgrpinvres.FieldCreateTime:
			if value, ok := values[i].(*sql.NullTime); !ok {
				return fmt.Errorf("unexpected type %T for field create_time", values[i])
			} else if value.Valid {
				oisgir.CreateTime = value.Time
			}
		case orderitemshipgrpinvres.FieldUpdateTime:
			if value, ok := values[i].(*sql.NullTime); !ok {
				return fmt.Errorf("unexpected type %T for field update_time", values[i])
			} else if value.Valid {
				oisgir.UpdateTime = value.Time
			}
		case orderitemshipgrpinvres.FieldStringRef:
			if value, ok := values[i].(*sql.NullString); !ok {
				return fmt.Errorf("unexpected type %T for field string_ref", values[i])
			} else if value.Valid {
				oisgir.StringRef = value.String
			}
		case orderitemshipgrpinvres.FieldShipGroupSeqID:
			if value, ok := values[i].(*sql.NullInt64); !ok {
				return fmt.Errorf("unexpected type %T for field ship_group_seq_id", values[i])
			} else if value.Valid {
				oisgir.ShipGroupSeqID = int(value.Int64)
			}
		case orderitemshipgrpinvres.FieldOrderItemSeqID:
			if value, ok := values[i].(*sql.NullInt64); !ok {
				return fmt.Errorf("unexpected type %T for field order_item_seq_id", values[i])
			} else if value.Valid {
				oisgir.OrderItemSeqID = int(value.Int64)
			}
		case orderitemshipgrpinvres.FieldInventoryItemID:
			if value, ok := values[i].(*sql.NullInt64); !ok {
				return fmt.Errorf("unexpected type %T for field inventory_item_id", values[i])
			} else if value.Valid {
				oisgir.InventoryItemID = int(value.Int64)
			}
		case orderitemshipgrpinvres.FieldReserveOrderEnumID:
			if value, ok := values[i].(*sql.NullInt64); !ok {
				return fmt.Errorf("unexpected type %T for field reserve_order_enum_id", values[i])
			} else if value.Valid {
				oisgir.ReserveOrderEnumID = int(value.Int64)
			}
		case orderitemshipgrpinvres.FieldQuantity:
			if value, ok := values[i].(*sql.NullFloat64); !ok {
				return fmt.Errorf("unexpected type %T for field quantity", values[i])
			} else if value.Valid {
				oisgir.Quantity = value.Float64
			}
		case orderitemshipgrpinvres.FieldQuantityNotAvailable:
			if value, ok := values[i].(*sql.NullFloat64); !ok {
				return fmt.Errorf("unexpected type %T for field quantity_not_available", values[i])
			} else if value.Valid {
				oisgir.QuantityNotAvailable = value.Float64
			}
		case orderitemshipgrpinvres.FieldReservedDatetime:
			if value, ok := values[i].(*sql.NullTime); !ok {
				return fmt.Errorf("unexpected type %T for field reserved_datetime", values[i])
			} else if value.Valid {
				oisgir.ReservedDatetime = value.Time
			}
		case orderitemshipgrpinvres.FieldCreatedDatetime:
			if value, ok := values[i].(*sql.NullTime); !ok {
				return fmt.Errorf("unexpected type %T for field created_datetime", values[i])
			} else if value.Valid {
				oisgir.CreatedDatetime = value.Time
			}
		case orderitemshipgrpinvres.FieldPromisedDatetime:
			if value, ok := values[i].(*sql.NullTime); !ok {
				return fmt.Errorf("unexpected type %T for field promised_datetime", values[i])
			} else if value.Valid {
				oisgir.PromisedDatetime = value.Time
			}
		case orderitemshipgrpinvres.FieldCurrentPromisedDate:
			if value, ok := values[i].(*sql.NullTime); !ok {
				return fmt.Errorf("unexpected type %T for field current_promised_date", values[i])
			} else if value.Valid {
				oisgir.CurrentPromisedDate = value.Time
			}
		case orderitemshipgrpinvres.FieldPriority:
			if value, ok := values[i].(*sql.NullString); !ok {
				return fmt.Errorf("unexpected type %T for field priority", values[i])
			} else if value.Valid {
				oisgir.Priority = orderitemshipgrpinvres.Priority(value.String)
			}
		case orderitemshipgrpinvres.FieldSequenceID:
			if value, ok := values[i].(*sql.NullInt64); !ok {
				return fmt.Errorf("unexpected type %T for field sequence_id", values[i])
			} else if value.Valid {
				oisgir.SequenceID = int(value.Int64)
			}
		case orderitemshipgrpinvres.FieldOldPickStartDate:
			if value, ok := values[i].(*sql.NullTime); !ok {
				return fmt.Errorf("unexpected type %T for field old_pick_start_date", values[i])
			} else if value.Valid {
				oisgir.OldPickStartDate = value.Time
			}
		case orderitemshipgrpinvres.ForeignKeys[0]:
			if value, ok := values[i].(*sql.NullInt64); !ok {
				return fmt.Errorf("unexpected type %T for edge-field order_header_order_item_ship_grp_inv_res", value)
			} else if value.Valid {
				oisgir.order_header_order_item_ship_grp_inv_res = new(int)
				*oisgir.order_header_order_item_ship_grp_inv_res = int(value.Int64)
			}
		case orderitemshipgrpinvres.ForeignKeys[1]:
			if value, ok := values[i].(*sql.NullInt64); !ok {
				return fmt.Errorf("unexpected type %T for edge-field order_item_order_item_ship_grp_inv_res", value)
			} else if value.Valid {
				oisgir.order_item_order_item_ship_grp_inv_res = new(int)
				*oisgir.order_item_order_item_ship_grp_inv_res = int(value.Int64)
			}
		case orderitemshipgrpinvres.ForeignKeys[2]:
			if value, ok := values[i].(*sql.NullInt64); !ok {
				return fmt.Errorf("unexpected type %T for edge-field order_item_ship_group_order_item_ship_grp_inv_res", value)
			} else if value.Valid {
				oisgir.order_item_ship_group_order_item_ship_grp_inv_res = new(int)
				*oisgir.order_item_ship_group_order_item_ship_grp_inv_res = int(value.Int64)
			}
		case orderitemshipgrpinvres.ForeignKeys[3]:
			if value, ok := values[i].(*sql.NullInt64); !ok {
				return fmt.Errorf("unexpected type %T for edge-field order_item_ship_group_assoc_order_item_ship_grp_inv_res", value)
			} else if value.Valid {
				oisgir.order_item_ship_group_assoc_order_item_ship_grp_inv_res = new(int)
				*oisgir.order_item_ship_group_assoc_order_item_ship_grp_inv_res = int(value.Int64)
			}
		}
	}
	return nil
}

// QueryOrderHeader queries the "order_header" edge of the OrderItemShipGrpInvRes entity.
func (oisgir *OrderItemShipGrpInvRes) QueryOrderHeader() *OrderHeaderQuery {
	return (&OrderItemShipGrpInvResClient{config: oisgir.config}).QueryOrderHeader(oisgir)
}

// QueryOrderItem queries the "order_item" edge of the OrderItemShipGrpInvRes entity.
func (oisgir *OrderItemShipGrpInvRes) QueryOrderItem() *OrderItemQuery {
	return (&OrderItemShipGrpInvResClient{config: oisgir.config}).QueryOrderItem(oisgir)
}

// QueryOrderItemShipGroup queries the "order_item_ship_group" edge of the OrderItemShipGrpInvRes entity.
func (oisgir *OrderItemShipGrpInvRes) QueryOrderItemShipGroup() *OrderItemShipGroupQuery {
	return (&OrderItemShipGrpInvResClient{config: oisgir.config}).QueryOrderItemShipGroup(oisgir)
}

// QueryOrderItemShipGroupAssoc queries the "order_item_ship_group_assoc" edge of the OrderItemShipGrpInvRes entity.
func (oisgir *OrderItemShipGrpInvRes) QueryOrderItemShipGroupAssoc() *OrderItemShipGroupAssocQuery {
	return (&OrderItemShipGrpInvResClient{config: oisgir.config}).QueryOrderItemShipGroupAssoc(oisgir)
}

// QueryInventoryItemDetails queries the "inventory_item_details" edge of the OrderItemShipGrpInvRes entity.
func (oisgir *OrderItemShipGrpInvRes) QueryInventoryItemDetails() *InventoryItemDetailQuery {
	return (&OrderItemShipGrpInvResClient{config: oisgir.config}).QueryInventoryItemDetails(oisgir)
}

// Update returns a builder for updating this OrderItemShipGrpInvRes.
// Note that you need to call OrderItemShipGrpInvRes.Unwrap() before calling this method if this OrderItemShipGrpInvRes
// was returned from a transaction, and the transaction was committed or rolled back.
func (oisgir *OrderItemShipGrpInvRes) Update() *OrderItemShipGrpInvResUpdateOne {
	return (&OrderItemShipGrpInvResClient{config: oisgir.config}).UpdateOne(oisgir)
}

// Unwrap unwraps the OrderItemShipGrpInvRes entity that was returned from a transaction after it was closed,
// so that all future queries will be executed through the driver which created the transaction.
func (oisgir *OrderItemShipGrpInvRes) Unwrap() *OrderItemShipGrpInvRes {
	tx, ok := oisgir.config.driver.(*txDriver)
	if !ok {
		panic("ent: OrderItemShipGrpInvRes is not a transactional entity")
	}
	oisgir.config.driver = tx.drv
	return oisgir
}

// String implements the fmt.Stringer.
func (oisgir *OrderItemShipGrpInvRes) String() string {
	var builder strings.Builder
	builder.WriteString("OrderItemShipGrpInvRes(")
	builder.WriteString(fmt.Sprintf("id=%v", oisgir.ID))
	builder.WriteString(", create_time=")
	builder.WriteString(oisgir.CreateTime.Format(time.ANSIC))
	builder.WriteString(", update_time=")
	builder.WriteString(oisgir.UpdateTime.Format(time.ANSIC))
	builder.WriteString(", string_ref=")
	builder.WriteString(oisgir.StringRef)
	builder.WriteString(", ship_group_seq_id=")
	builder.WriteString(fmt.Sprintf("%v", oisgir.ShipGroupSeqID))
	builder.WriteString(", order_item_seq_id=")
	builder.WriteString(fmt.Sprintf("%v", oisgir.OrderItemSeqID))
	builder.WriteString(", inventory_item_id=")
	builder.WriteString(fmt.Sprintf("%v", oisgir.InventoryItemID))
	builder.WriteString(", reserve_order_enum_id=")
	builder.WriteString(fmt.Sprintf("%v", oisgir.ReserveOrderEnumID))
	builder.WriteString(", quantity=")
	builder.WriteString(fmt.Sprintf("%v", oisgir.Quantity))
	builder.WriteString(", quantity_not_available=")
	builder.WriteString(fmt.Sprintf("%v", oisgir.QuantityNotAvailable))
	builder.WriteString(", reserved_datetime=")
	builder.WriteString(oisgir.ReservedDatetime.Format(time.ANSIC))
	builder.WriteString(", created_datetime=")
	builder.WriteString(oisgir.CreatedDatetime.Format(time.ANSIC))
	builder.WriteString(", promised_datetime=")
	builder.WriteString(oisgir.PromisedDatetime.Format(time.ANSIC))
	builder.WriteString(", current_promised_date=")
	builder.WriteString(oisgir.CurrentPromisedDate.Format(time.ANSIC))
	builder.WriteString(", priority=")
	builder.WriteString(fmt.Sprintf("%v", oisgir.Priority))
	builder.WriteString(", sequence_id=")
	builder.WriteString(fmt.Sprintf("%v", oisgir.SequenceID))
	builder.WriteString(", old_pick_start_date=")
	builder.WriteString(oisgir.OldPickStartDate.Format(time.ANSIC))
	builder.WriteByte(')')
	return builder.String()
}

// OrderItemShipGrpInvResSlice is a parsable slice of OrderItemShipGrpInvRes.
type OrderItemShipGrpInvResSlice []*OrderItemShipGrpInvRes

func (oisgir OrderItemShipGrpInvResSlice) config(cfg config) {
	for _i := range oisgir {
		oisgir[_i].config = cfg
	}
}
