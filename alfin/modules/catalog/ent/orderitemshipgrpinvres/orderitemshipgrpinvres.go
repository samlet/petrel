// Code generated by entc, DO NOT EDIT.

package orderitemshipgrpinvres

import (
	"fmt"
	"time"
)

const (
	// Label holds the string label denoting the orderitemshipgrpinvres type in the database.
	Label = "order_item_ship_grp_inv_res"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldCreateTime holds the string denoting the create_time field in the database.
	FieldCreateTime = "create_time"
	// FieldUpdateTime holds the string denoting the update_time field in the database.
	FieldUpdateTime = "update_time"
	// FieldStringRef holds the string denoting the string_ref field in the database.
	FieldStringRef = "string_ref"
	// FieldShipGroupSeqID holds the string denoting the ship_group_seq_id field in the database.
	FieldShipGroupSeqID = "ship_group_seq_id"
	// FieldOrderItemSeqID holds the string denoting the order_item_seq_id field in the database.
	FieldOrderItemSeqID = "order_item_seq_id"
	// FieldInventoryItemID holds the string denoting the inventory_item_id field in the database.
	FieldInventoryItemID = "inventory_item_id"
	// FieldReserveOrderEnumID holds the string denoting the reserve_order_enum_id field in the database.
	FieldReserveOrderEnumID = "reserve_order_enum_id"
	// FieldQuantity holds the string denoting the quantity field in the database.
	FieldQuantity = "quantity"
	// FieldQuantityNotAvailable holds the string denoting the quantity_not_available field in the database.
	FieldQuantityNotAvailable = "quantity_not_available"
	// FieldReservedDatetime holds the string denoting the reserved_datetime field in the database.
	FieldReservedDatetime = "reserved_datetime"
	// FieldCreatedDatetime holds the string denoting the created_datetime field in the database.
	FieldCreatedDatetime = "created_datetime"
	// FieldPromisedDatetime holds the string denoting the promised_datetime field in the database.
	FieldPromisedDatetime = "promised_datetime"
	// FieldCurrentPromisedDate holds the string denoting the current_promised_date field in the database.
	FieldCurrentPromisedDate = "current_promised_date"
	// FieldPriority holds the string denoting the priority field in the database.
	FieldPriority = "priority"
	// FieldSequenceID holds the string denoting the sequence_id field in the database.
	FieldSequenceID = "sequence_id"
	// FieldOldPickStartDate holds the string denoting the old_pick_start_date field in the database.
	FieldOldPickStartDate = "old_pick_start_date"
	// EdgeOrderHeader holds the string denoting the order_header edge name in mutations.
	EdgeOrderHeader = "order_header"
	// EdgeOrderItem holds the string denoting the order_item edge name in mutations.
	EdgeOrderItem = "order_item"
	// EdgeOrderItemShipGroup holds the string denoting the order_item_ship_group edge name in mutations.
	EdgeOrderItemShipGroup = "order_item_ship_group"
	// EdgeOrderItemShipGroupAssoc holds the string denoting the order_item_ship_group_assoc edge name in mutations.
	EdgeOrderItemShipGroupAssoc = "order_item_ship_group_assoc"
	// EdgeInventoryItemDetails holds the string denoting the inventory_item_details edge name in mutations.
	EdgeInventoryItemDetails = "inventory_item_details"
	// Table holds the table name of the orderitemshipgrpinvres in the database.
	Table = "order_item_ship_grp_inv_res"
	// OrderHeaderTable is the table the holds the order_header relation/edge.
	OrderHeaderTable = "order_item_ship_grp_inv_res"
	// OrderHeaderInverseTable is the table name for the OrderHeader entity.
	// It exists in this package in order to avoid circular dependency with the "orderheader" package.
	OrderHeaderInverseTable = "order_headers"
	// OrderHeaderColumn is the table column denoting the order_header relation/edge.
	OrderHeaderColumn = "order_header_order_item_ship_grp_inv_res"
	// OrderItemTable is the table the holds the order_item relation/edge.
	OrderItemTable = "order_item_ship_grp_inv_res"
	// OrderItemInverseTable is the table name for the OrderItem entity.
	// It exists in this package in order to avoid circular dependency with the "orderitem" package.
	OrderItemInverseTable = "order_items"
	// OrderItemColumn is the table column denoting the order_item relation/edge.
	OrderItemColumn = "order_item_order_item_ship_grp_inv_res"
	// OrderItemShipGroupTable is the table the holds the order_item_ship_group relation/edge.
	OrderItemShipGroupTable = "order_item_ship_grp_inv_res"
	// OrderItemShipGroupInverseTable is the table name for the OrderItemShipGroup entity.
	// It exists in this package in order to avoid circular dependency with the "orderitemshipgroup" package.
	OrderItemShipGroupInverseTable = "order_item_ship_groups"
	// OrderItemShipGroupColumn is the table column denoting the order_item_ship_group relation/edge.
	OrderItemShipGroupColumn = "order_item_ship_group_order_item_ship_grp_inv_res"
	// OrderItemShipGroupAssocTable is the table the holds the order_item_ship_group_assoc relation/edge.
	OrderItemShipGroupAssocTable = "order_item_ship_grp_inv_res"
	// OrderItemShipGroupAssocInverseTable is the table name for the OrderItemShipGroupAssoc entity.
	// It exists in this package in order to avoid circular dependency with the "orderitemshipgroupassoc" package.
	OrderItemShipGroupAssocInverseTable = "order_item_ship_group_assocs"
	// OrderItemShipGroupAssocColumn is the table column denoting the order_item_ship_group_assoc relation/edge.
	OrderItemShipGroupAssocColumn = "order_item_ship_group_assoc_order_item_ship_grp_inv_res"
	// InventoryItemDetailsTable is the table the holds the inventory_item_details relation/edge.
	InventoryItemDetailsTable = "inventory_item_details"
	// InventoryItemDetailsInverseTable is the table name for the InventoryItemDetail entity.
	// It exists in this package in order to avoid circular dependency with the "inventoryitemdetail" package.
	InventoryItemDetailsInverseTable = "inventory_item_details"
	// InventoryItemDetailsColumn is the table column denoting the inventory_item_details relation/edge.
	InventoryItemDetailsColumn = "order_item_ship_grp_inv_res_inventory_item_details"
)

// Columns holds all SQL columns for orderitemshipgrpinvres fields.
var Columns = []string{
	FieldID,
	FieldCreateTime,
	FieldUpdateTime,
	FieldStringRef,
	FieldShipGroupSeqID,
	FieldOrderItemSeqID,
	FieldInventoryItemID,
	FieldReserveOrderEnumID,
	FieldQuantity,
	FieldQuantityNotAvailable,
	FieldReservedDatetime,
	FieldCreatedDatetime,
	FieldPromisedDatetime,
	FieldCurrentPromisedDate,
	FieldPriority,
	FieldSequenceID,
	FieldOldPickStartDate,
}

// ForeignKeys holds the SQL foreign-keys that are owned by the "order_item_ship_grp_inv_res"
// table and are not defined as standalone fields in the schema.
var ForeignKeys = []string{
	"order_header_order_item_ship_grp_inv_res",
	"order_item_order_item_ship_grp_inv_res",
	"order_item_ship_group_order_item_ship_grp_inv_res",
	"order_item_ship_group_assoc_order_item_ship_grp_inv_res",
}

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	for i := range ForeignKeys {
		if column == ForeignKeys[i] {
			return true
		}
	}
	return false
}

var (
	// DefaultCreateTime holds the default value on creation for the "create_time" field.
	DefaultCreateTime func() time.Time
	// DefaultUpdateTime holds the default value on creation for the "update_time" field.
	DefaultUpdateTime func() time.Time
	// UpdateDefaultUpdateTime holds the default value on update for the "update_time" field.
	UpdateDefaultUpdateTime func() time.Time
	// DefaultReservedDatetime holds the default value on creation for the "reserved_datetime" field.
	DefaultReservedDatetime func() time.Time
	// DefaultCreatedDatetime holds the default value on creation for the "created_datetime" field.
	DefaultCreatedDatetime func() time.Time
	// DefaultPromisedDatetime holds the default value on creation for the "promised_datetime" field.
	DefaultPromisedDatetime func() time.Time
	// DefaultCurrentPromisedDate holds the default value on creation for the "current_promised_date" field.
	DefaultCurrentPromisedDate func() time.Time
	// DefaultOldPickStartDate holds the default value on creation for the "old_pick_start_date" field.
	DefaultOldPickStartDate func() time.Time
)

// Priority defines the type for the "priority" enum field.
type Priority string

// Priority values.
const (
	PriorityYes     Priority = "Yes"
	PriorityNo      Priority = "No"
	PriorityUnknown Priority = "Unknown"
)

func (pr Priority) String() string {
	return string(pr)
}

// PriorityValidator is a validator for the "priority" field enum values. It is called by the builders before save.
func PriorityValidator(pr Priority) error {
	switch pr {
	case PriorityYes, PriorityNo, PriorityUnknown:
		return nil
	default:
		return fmt.Errorf("orderitemshipgrpinvres: invalid enum value for priority field: %q", pr)
	}
}
