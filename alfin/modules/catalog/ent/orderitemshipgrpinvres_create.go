// Code generated by entc, DO NOT EDIT.

package ent

import (
	"context"
	"errors"
	"fmt"
	"time"

	"entgo.io/ent/dialect/sql/sqlgraph"
	"entgo.io/ent/schema/field"
	"github.com/samlet/petrel/alfin/modules/catalog/ent/inventoryitemdetail"
	"github.com/samlet/petrel/alfin/modules/catalog/ent/orderheader"
	"github.com/samlet/petrel/alfin/modules/catalog/ent/orderitem"
	"github.com/samlet/petrel/alfin/modules/catalog/ent/orderitemshipgroup"
	"github.com/samlet/petrel/alfin/modules/catalog/ent/orderitemshipgroupassoc"
	"github.com/samlet/petrel/alfin/modules/catalog/ent/orderitemshipgrpinvres"
)

// OrderItemShipGrpInvResCreate is the builder for creating a OrderItemShipGrpInvRes entity.
type OrderItemShipGrpInvResCreate struct {
	config
	mutation *OrderItemShipGrpInvResMutation
	hooks    []Hook
}

// SetCreateTime sets the "create_time" field.
func (oisgirc *OrderItemShipGrpInvResCreate) SetCreateTime(t time.Time) *OrderItemShipGrpInvResCreate {
	oisgirc.mutation.SetCreateTime(t)
	return oisgirc
}

// SetNillableCreateTime sets the "create_time" field if the given value is not nil.
func (oisgirc *OrderItemShipGrpInvResCreate) SetNillableCreateTime(t *time.Time) *OrderItemShipGrpInvResCreate {
	if t != nil {
		oisgirc.SetCreateTime(*t)
	}
	return oisgirc
}

// SetUpdateTime sets the "update_time" field.
func (oisgirc *OrderItemShipGrpInvResCreate) SetUpdateTime(t time.Time) *OrderItemShipGrpInvResCreate {
	oisgirc.mutation.SetUpdateTime(t)
	return oisgirc
}

// SetNillableUpdateTime sets the "update_time" field if the given value is not nil.
func (oisgirc *OrderItemShipGrpInvResCreate) SetNillableUpdateTime(t *time.Time) *OrderItemShipGrpInvResCreate {
	if t != nil {
		oisgirc.SetUpdateTime(*t)
	}
	return oisgirc
}

// SetStringRef sets the "string_ref" field.
func (oisgirc *OrderItemShipGrpInvResCreate) SetStringRef(s string) *OrderItemShipGrpInvResCreate {
	oisgirc.mutation.SetStringRef(s)
	return oisgirc
}

// SetNillableStringRef sets the "string_ref" field if the given value is not nil.
func (oisgirc *OrderItemShipGrpInvResCreate) SetNillableStringRef(s *string) *OrderItemShipGrpInvResCreate {
	if s != nil {
		oisgirc.SetStringRef(*s)
	}
	return oisgirc
}

// SetShipGroupSeqID sets the "ship_group_seq_id" field.
func (oisgirc *OrderItemShipGrpInvResCreate) SetShipGroupSeqID(i int) *OrderItemShipGrpInvResCreate {
	oisgirc.mutation.SetShipGroupSeqID(i)
	return oisgirc
}

// SetOrderItemSeqID sets the "order_item_seq_id" field.
func (oisgirc *OrderItemShipGrpInvResCreate) SetOrderItemSeqID(i int) *OrderItemShipGrpInvResCreate {
	oisgirc.mutation.SetOrderItemSeqID(i)
	return oisgirc
}

// SetInventoryItemID sets the "inventory_item_id" field.
func (oisgirc *OrderItemShipGrpInvResCreate) SetInventoryItemID(i int) *OrderItemShipGrpInvResCreate {
	oisgirc.mutation.SetInventoryItemID(i)
	return oisgirc
}

// SetReserveOrderEnumID sets the "reserve_order_enum_id" field.
func (oisgirc *OrderItemShipGrpInvResCreate) SetReserveOrderEnumID(i int) *OrderItemShipGrpInvResCreate {
	oisgirc.mutation.SetReserveOrderEnumID(i)
	return oisgirc
}

// SetNillableReserveOrderEnumID sets the "reserve_order_enum_id" field if the given value is not nil.
func (oisgirc *OrderItemShipGrpInvResCreate) SetNillableReserveOrderEnumID(i *int) *OrderItemShipGrpInvResCreate {
	if i != nil {
		oisgirc.SetReserveOrderEnumID(*i)
	}
	return oisgirc
}

// SetQuantity sets the "quantity" field.
func (oisgirc *OrderItemShipGrpInvResCreate) SetQuantity(f float64) *OrderItemShipGrpInvResCreate {
	oisgirc.mutation.SetQuantity(f)
	return oisgirc
}

// SetNillableQuantity sets the "quantity" field if the given value is not nil.
func (oisgirc *OrderItemShipGrpInvResCreate) SetNillableQuantity(f *float64) *OrderItemShipGrpInvResCreate {
	if f != nil {
		oisgirc.SetQuantity(*f)
	}
	return oisgirc
}

// SetQuantityNotAvailable sets the "quantity_not_available" field.
func (oisgirc *OrderItemShipGrpInvResCreate) SetQuantityNotAvailable(f float64) *OrderItemShipGrpInvResCreate {
	oisgirc.mutation.SetQuantityNotAvailable(f)
	return oisgirc
}

// SetNillableQuantityNotAvailable sets the "quantity_not_available" field if the given value is not nil.
func (oisgirc *OrderItemShipGrpInvResCreate) SetNillableQuantityNotAvailable(f *float64) *OrderItemShipGrpInvResCreate {
	if f != nil {
		oisgirc.SetQuantityNotAvailable(*f)
	}
	return oisgirc
}

// SetReservedDatetime sets the "reserved_datetime" field.
func (oisgirc *OrderItemShipGrpInvResCreate) SetReservedDatetime(t time.Time) *OrderItemShipGrpInvResCreate {
	oisgirc.mutation.SetReservedDatetime(t)
	return oisgirc
}

// SetNillableReservedDatetime sets the "reserved_datetime" field if the given value is not nil.
func (oisgirc *OrderItemShipGrpInvResCreate) SetNillableReservedDatetime(t *time.Time) *OrderItemShipGrpInvResCreate {
	if t != nil {
		oisgirc.SetReservedDatetime(*t)
	}
	return oisgirc
}

// SetCreatedDatetime sets the "created_datetime" field.
func (oisgirc *OrderItemShipGrpInvResCreate) SetCreatedDatetime(t time.Time) *OrderItemShipGrpInvResCreate {
	oisgirc.mutation.SetCreatedDatetime(t)
	return oisgirc
}

// SetNillableCreatedDatetime sets the "created_datetime" field if the given value is not nil.
func (oisgirc *OrderItemShipGrpInvResCreate) SetNillableCreatedDatetime(t *time.Time) *OrderItemShipGrpInvResCreate {
	if t != nil {
		oisgirc.SetCreatedDatetime(*t)
	}
	return oisgirc
}

// SetPromisedDatetime sets the "promised_datetime" field.
func (oisgirc *OrderItemShipGrpInvResCreate) SetPromisedDatetime(t time.Time) *OrderItemShipGrpInvResCreate {
	oisgirc.mutation.SetPromisedDatetime(t)
	return oisgirc
}

// SetNillablePromisedDatetime sets the "promised_datetime" field if the given value is not nil.
func (oisgirc *OrderItemShipGrpInvResCreate) SetNillablePromisedDatetime(t *time.Time) *OrderItemShipGrpInvResCreate {
	if t != nil {
		oisgirc.SetPromisedDatetime(*t)
	}
	return oisgirc
}

// SetCurrentPromisedDate sets the "current_promised_date" field.
func (oisgirc *OrderItemShipGrpInvResCreate) SetCurrentPromisedDate(t time.Time) *OrderItemShipGrpInvResCreate {
	oisgirc.mutation.SetCurrentPromisedDate(t)
	return oisgirc
}

// SetNillableCurrentPromisedDate sets the "current_promised_date" field if the given value is not nil.
func (oisgirc *OrderItemShipGrpInvResCreate) SetNillableCurrentPromisedDate(t *time.Time) *OrderItemShipGrpInvResCreate {
	if t != nil {
		oisgirc.SetCurrentPromisedDate(*t)
	}
	return oisgirc
}

// SetPriority sets the "priority" field.
func (oisgirc *OrderItemShipGrpInvResCreate) SetPriority(o orderitemshipgrpinvres.Priority) *OrderItemShipGrpInvResCreate {
	oisgirc.mutation.SetPriority(o)
	return oisgirc
}

// SetNillablePriority sets the "priority" field if the given value is not nil.
func (oisgirc *OrderItemShipGrpInvResCreate) SetNillablePriority(o *orderitemshipgrpinvres.Priority) *OrderItemShipGrpInvResCreate {
	if o != nil {
		oisgirc.SetPriority(*o)
	}
	return oisgirc
}

// SetSequenceID sets the "sequence_id" field.
func (oisgirc *OrderItemShipGrpInvResCreate) SetSequenceID(i int) *OrderItemShipGrpInvResCreate {
	oisgirc.mutation.SetSequenceID(i)
	return oisgirc
}

// SetNillableSequenceID sets the "sequence_id" field if the given value is not nil.
func (oisgirc *OrderItemShipGrpInvResCreate) SetNillableSequenceID(i *int) *OrderItemShipGrpInvResCreate {
	if i != nil {
		oisgirc.SetSequenceID(*i)
	}
	return oisgirc
}

// SetOldPickStartDate sets the "old_pick_start_date" field.
func (oisgirc *OrderItemShipGrpInvResCreate) SetOldPickStartDate(t time.Time) *OrderItemShipGrpInvResCreate {
	oisgirc.mutation.SetOldPickStartDate(t)
	return oisgirc
}

// SetNillableOldPickStartDate sets the "old_pick_start_date" field if the given value is not nil.
func (oisgirc *OrderItemShipGrpInvResCreate) SetNillableOldPickStartDate(t *time.Time) *OrderItemShipGrpInvResCreate {
	if t != nil {
		oisgirc.SetOldPickStartDate(*t)
	}
	return oisgirc
}

// SetOrderHeaderID sets the "order_header" edge to the OrderHeader entity by ID.
func (oisgirc *OrderItemShipGrpInvResCreate) SetOrderHeaderID(id int) *OrderItemShipGrpInvResCreate {
	oisgirc.mutation.SetOrderHeaderID(id)
	return oisgirc
}

// SetNillableOrderHeaderID sets the "order_header" edge to the OrderHeader entity by ID if the given value is not nil.
func (oisgirc *OrderItemShipGrpInvResCreate) SetNillableOrderHeaderID(id *int) *OrderItemShipGrpInvResCreate {
	if id != nil {
		oisgirc = oisgirc.SetOrderHeaderID(*id)
	}
	return oisgirc
}

// SetOrderHeader sets the "order_header" edge to the OrderHeader entity.
func (oisgirc *OrderItemShipGrpInvResCreate) SetOrderHeader(o *OrderHeader) *OrderItemShipGrpInvResCreate {
	return oisgirc.SetOrderHeaderID(o.ID)
}

// SetOrderItemID sets the "order_item" edge to the OrderItem entity by ID.
func (oisgirc *OrderItemShipGrpInvResCreate) SetOrderItemID(id int) *OrderItemShipGrpInvResCreate {
	oisgirc.mutation.SetOrderItemID(id)
	return oisgirc
}

// SetNillableOrderItemID sets the "order_item" edge to the OrderItem entity by ID if the given value is not nil.
func (oisgirc *OrderItemShipGrpInvResCreate) SetNillableOrderItemID(id *int) *OrderItemShipGrpInvResCreate {
	if id != nil {
		oisgirc = oisgirc.SetOrderItemID(*id)
	}
	return oisgirc
}

// SetOrderItem sets the "order_item" edge to the OrderItem entity.
func (oisgirc *OrderItemShipGrpInvResCreate) SetOrderItem(o *OrderItem) *OrderItemShipGrpInvResCreate {
	return oisgirc.SetOrderItemID(o.ID)
}

// SetOrderItemShipGroupID sets the "order_item_ship_group" edge to the OrderItemShipGroup entity by ID.
func (oisgirc *OrderItemShipGrpInvResCreate) SetOrderItemShipGroupID(id int) *OrderItemShipGrpInvResCreate {
	oisgirc.mutation.SetOrderItemShipGroupID(id)
	return oisgirc
}

// SetNillableOrderItemShipGroupID sets the "order_item_ship_group" edge to the OrderItemShipGroup entity by ID if the given value is not nil.
func (oisgirc *OrderItemShipGrpInvResCreate) SetNillableOrderItemShipGroupID(id *int) *OrderItemShipGrpInvResCreate {
	if id != nil {
		oisgirc = oisgirc.SetOrderItemShipGroupID(*id)
	}
	return oisgirc
}

// SetOrderItemShipGroup sets the "order_item_ship_group" edge to the OrderItemShipGroup entity.
func (oisgirc *OrderItemShipGrpInvResCreate) SetOrderItemShipGroup(o *OrderItemShipGroup) *OrderItemShipGrpInvResCreate {
	return oisgirc.SetOrderItemShipGroupID(o.ID)
}

// SetOrderItemShipGroupAssocID sets the "order_item_ship_group_assoc" edge to the OrderItemShipGroupAssoc entity by ID.
func (oisgirc *OrderItemShipGrpInvResCreate) SetOrderItemShipGroupAssocID(id int) *OrderItemShipGrpInvResCreate {
	oisgirc.mutation.SetOrderItemShipGroupAssocID(id)
	return oisgirc
}

// SetNillableOrderItemShipGroupAssocID sets the "order_item_ship_group_assoc" edge to the OrderItemShipGroupAssoc entity by ID if the given value is not nil.
func (oisgirc *OrderItemShipGrpInvResCreate) SetNillableOrderItemShipGroupAssocID(id *int) *OrderItemShipGrpInvResCreate {
	if id != nil {
		oisgirc = oisgirc.SetOrderItemShipGroupAssocID(*id)
	}
	return oisgirc
}

// SetOrderItemShipGroupAssoc sets the "order_item_ship_group_assoc" edge to the OrderItemShipGroupAssoc entity.
func (oisgirc *OrderItemShipGrpInvResCreate) SetOrderItemShipGroupAssoc(o *OrderItemShipGroupAssoc) *OrderItemShipGrpInvResCreate {
	return oisgirc.SetOrderItemShipGroupAssocID(o.ID)
}

// AddInventoryItemDetailIDs adds the "inventory_item_details" edge to the InventoryItemDetail entity by IDs.
func (oisgirc *OrderItemShipGrpInvResCreate) AddInventoryItemDetailIDs(ids ...int) *OrderItemShipGrpInvResCreate {
	oisgirc.mutation.AddInventoryItemDetailIDs(ids...)
	return oisgirc
}

// AddInventoryItemDetails adds the "inventory_item_details" edges to the InventoryItemDetail entity.
func (oisgirc *OrderItemShipGrpInvResCreate) AddInventoryItemDetails(i ...*InventoryItemDetail) *OrderItemShipGrpInvResCreate {
	ids := make([]int, len(i))
	for j := range i {
		ids[j] = i[j].ID
	}
	return oisgirc.AddInventoryItemDetailIDs(ids...)
}

// Mutation returns the OrderItemShipGrpInvResMutation object of the builder.
func (oisgirc *OrderItemShipGrpInvResCreate) Mutation() *OrderItemShipGrpInvResMutation {
	return oisgirc.mutation
}

// Save creates the OrderItemShipGrpInvRes in the database.
func (oisgirc *OrderItemShipGrpInvResCreate) Save(ctx context.Context) (*OrderItemShipGrpInvRes, error) {
	var (
		err  error
		node *OrderItemShipGrpInvRes
	)
	oisgirc.defaults()
	if len(oisgirc.hooks) == 0 {
		if err = oisgirc.check(); err != nil {
			return nil, err
		}
		node, err = oisgirc.sqlSave(ctx)
	} else {
		var mut Mutator = MutateFunc(func(ctx context.Context, m Mutation) (Value, error) {
			mutation, ok := m.(*OrderItemShipGrpInvResMutation)
			if !ok {
				return nil, fmt.Errorf("unexpected mutation type %T", m)
			}
			if err = oisgirc.check(); err != nil {
				return nil, err
			}
			oisgirc.mutation = mutation
			if node, err = oisgirc.sqlSave(ctx); err != nil {
				return nil, err
			}
			mutation.id = &node.ID
			mutation.done = true
			return node, err
		})
		for i := len(oisgirc.hooks) - 1; i >= 0; i-- {
			mut = oisgirc.hooks[i](mut)
		}
		if _, err := mut.Mutate(ctx, oisgirc.mutation); err != nil {
			return nil, err
		}
	}
	return node, err
}

// SaveX calls Save and panics if Save returns an error.
func (oisgirc *OrderItemShipGrpInvResCreate) SaveX(ctx context.Context) *OrderItemShipGrpInvRes {
	v, err := oisgirc.Save(ctx)
	if err != nil {
		panic(err)
	}
	return v
}

// defaults sets the default values of the builder before save.
func (oisgirc *OrderItemShipGrpInvResCreate) defaults() {
	if _, ok := oisgirc.mutation.CreateTime(); !ok {
		v := orderitemshipgrpinvres.DefaultCreateTime()
		oisgirc.mutation.SetCreateTime(v)
	}
	if _, ok := oisgirc.mutation.UpdateTime(); !ok {
		v := orderitemshipgrpinvres.DefaultUpdateTime()
		oisgirc.mutation.SetUpdateTime(v)
	}
	if _, ok := oisgirc.mutation.ReservedDatetime(); !ok {
		v := orderitemshipgrpinvres.DefaultReservedDatetime()
		oisgirc.mutation.SetReservedDatetime(v)
	}
	if _, ok := oisgirc.mutation.CreatedDatetime(); !ok {
		v := orderitemshipgrpinvres.DefaultCreatedDatetime()
		oisgirc.mutation.SetCreatedDatetime(v)
	}
	if _, ok := oisgirc.mutation.PromisedDatetime(); !ok {
		v := orderitemshipgrpinvres.DefaultPromisedDatetime()
		oisgirc.mutation.SetPromisedDatetime(v)
	}
	if _, ok := oisgirc.mutation.CurrentPromisedDate(); !ok {
		v := orderitemshipgrpinvres.DefaultCurrentPromisedDate()
		oisgirc.mutation.SetCurrentPromisedDate(v)
	}
	if _, ok := oisgirc.mutation.OldPickStartDate(); !ok {
		v := orderitemshipgrpinvres.DefaultOldPickStartDate()
		oisgirc.mutation.SetOldPickStartDate(v)
	}
}

// check runs all checks and user-defined validators on the builder.
func (oisgirc *OrderItemShipGrpInvResCreate) check() error {
	if _, ok := oisgirc.mutation.CreateTime(); !ok {
		return &ValidationError{Name: "create_time", err: errors.New("ent: missing required field \"create_time\"")}
	}
	if _, ok := oisgirc.mutation.UpdateTime(); !ok {
		return &ValidationError{Name: "update_time", err: errors.New("ent: missing required field \"update_time\"")}
	}
	if _, ok := oisgirc.mutation.ShipGroupSeqID(); !ok {
		return &ValidationError{Name: "ship_group_seq_id", err: errors.New("ent: missing required field \"ship_group_seq_id\"")}
	}
	if _, ok := oisgirc.mutation.OrderItemSeqID(); !ok {
		return &ValidationError{Name: "order_item_seq_id", err: errors.New("ent: missing required field \"order_item_seq_id\"")}
	}
	if _, ok := oisgirc.mutation.InventoryItemID(); !ok {
		return &ValidationError{Name: "inventory_item_id", err: errors.New("ent: missing required field \"inventory_item_id\"")}
	}
	if v, ok := oisgirc.mutation.Priority(); ok {
		if err := orderitemshipgrpinvres.PriorityValidator(v); err != nil {
			return &ValidationError{Name: "priority", err: fmt.Errorf("ent: validator failed for field \"priority\": %w", err)}
		}
	}
	return nil
}

func (oisgirc *OrderItemShipGrpInvResCreate) sqlSave(ctx context.Context) (*OrderItemShipGrpInvRes, error) {
	_node, _spec := oisgirc.createSpec()
	if err := sqlgraph.CreateNode(ctx, oisgirc.driver, _spec); err != nil {
		if cerr, ok := isSQLConstraintError(err); ok {
			err = cerr
		}
		return nil, err
	}
	id := _spec.ID.Value.(int64)
	_node.ID = int(id)
	return _node, nil
}

func (oisgirc *OrderItemShipGrpInvResCreate) createSpec() (*OrderItemShipGrpInvRes, *sqlgraph.CreateSpec) {
	var (
		_node = &OrderItemShipGrpInvRes{config: oisgirc.config}
		_spec = &sqlgraph.CreateSpec{
			Table: orderitemshipgrpinvres.Table,
			ID: &sqlgraph.FieldSpec{
				Type:   field.TypeInt,
				Column: orderitemshipgrpinvres.FieldID,
			},
		}
	)
	if value, ok := oisgirc.mutation.CreateTime(); ok {
		_spec.Fields = append(_spec.Fields, &sqlgraph.FieldSpec{
			Type:   field.TypeTime,
			Value:  value,
			Column: orderitemshipgrpinvres.FieldCreateTime,
		})
		_node.CreateTime = value
	}
	if value, ok := oisgirc.mutation.UpdateTime(); ok {
		_spec.Fields = append(_spec.Fields, &sqlgraph.FieldSpec{
			Type:   field.TypeTime,
			Value:  value,
			Column: orderitemshipgrpinvres.FieldUpdateTime,
		})
		_node.UpdateTime = value
	}
	if value, ok := oisgirc.mutation.StringRef(); ok {
		_spec.Fields = append(_spec.Fields, &sqlgraph.FieldSpec{
			Type:   field.TypeString,
			Value:  value,
			Column: orderitemshipgrpinvres.FieldStringRef,
		})
		_node.StringRef = value
	}
	if value, ok := oisgirc.mutation.ShipGroupSeqID(); ok {
		_spec.Fields = append(_spec.Fields, &sqlgraph.FieldSpec{
			Type:   field.TypeInt,
			Value:  value,
			Column: orderitemshipgrpinvres.FieldShipGroupSeqID,
		})
		_node.ShipGroupSeqID = value
	}
	if value, ok := oisgirc.mutation.OrderItemSeqID(); ok {
		_spec.Fields = append(_spec.Fields, &sqlgraph.FieldSpec{
			Type:   field.TypeInt,
			Value:  value,
			Column: orderitemshipgrpinvres.FieldOrderItemSeqID,
		})
		_node.OrderItemSeqID = value
	}
	if value, ok := oisgirc.mutation.InventoryItemID(); ok {
		_spec.Fields = append(_spec.Fields, &sqlgraph.FieldSpec{
			Type:   field.TypeInt,
			Value:  value,
			Column: orderitemshipgrpinvres.FieldInventoryItemID,
		})
		_node.InventoryItemID = value
	}
	if value, ok := oisgirc.mutation.ReserveOrderEnumID(); ok {
		_spec.Fields = append(_spec.Fields, &sqlgraph.FieldSpec{
			Type:   field.TypeInt,
			Value:  value,
			Column: orderitemshipgrpinvres.FieldReserveOrderEnumID,
		})
		_node.ReserveOrderEnumID = value
	}
	if value, ok := oisgirc.mutation.Quantity(); ok {
		_spec.Fields = append(_spec.Fields, &sqlgraph.FieldSpec{
			Type:   field.TypeFloat64,
			Value:  value,
			Column: orderitemshipgrpinvres.FieldQuantity,
		})
		_node.Quantity = value
	}
	if value, ok := oisgirc.mutation.QuantityNotAvailable(); ok {
		_spec.Fields = append(_spec.Fields, &sqlgraph.FieldSpec{
			Type:   field.TypeFloat64,
			Value:  value,
			Column: orderitemshipgrpinvres.FieldQuantityNotAvailable,
		})
		_node.QuantityNotAvailable = value
	}
	if value, ok := oisgirc.mutation.ReservedDatetime(); ok {
		_spec.Fields = append(_spec.Fields, &sqlgraph.FieldSpec{
			Type:   field.TypeTime,
			Value:  value,
			Column: orderitemshipgrpinvres.FieldReservedDatetime,
		})
		_node.ReservedDatetime = value
	}
	if value, ok := oisgirc.mutation.CreatedDatetime(); ok {
		_spec.Fields = append(_spec.Fields, &sqlgraph.FieldSpec{
			Type:   field.TypeTime,
			Value:  value,
			Column: orderitemshipgrpinvres.FieldCreatedDatetime,
		})
		_node.CreatedDatetime = value
	}
	if value, ok := oisgirc.mutation.PromisedDatetime(); ok {
		_spec.Fields = append(_spec.Fields, &sqlgraph.FieldSpec{
			Type:   field.TypeTime,
			Value:  value,
			Column: orderitemshipgrpinvres.FieldPromisedDatetime,
		})
		_node.PromisedDatetime = value
	}
	if value, ok := oisgirc.mutation.CurrentPromisedDate(); ok {
		_spec.Fields = append(_spec.Fields, &sqlgraph.FieldSpec{
			Type:   field.TypeTime,
			Value:  value,
			Column: orderitemshipgrpinvres.FieldCurrentPromisedDate,
		})
		_node.CurrentPromisedDate = value
	}
	if value, ok := oisgirc.mutation.Priority(); ok {
		_spec.Fields = append(_spec.Fields, &sqlgraph.FieldSpec{
			Type:   field.TypeEnum,
			Value:  value,
			Column: orderitemshipgrpinvres.FieldPriority,
		})
		_node.Priority = value
	}
	if value, ok := oisgirc.mutation.SequenceID(); ok {
		_spec.Fields = append(_spec.Fields, &sqlgraph.FieldSpec{
			Type:   field.TypeInt,
			Value:  value,
			Column: orderitemshipgrpinvres.FieldSequenceID,
		})
		_node.SequenceID = value
	}
	if value, ok := oisgirc.mutation.OldPickStartDate(); ok {
		_spec.Fields = append(_spec.Fields, &sqlgraph.FieldSpec{
			Type:   field.TypeTime,
			Value:  value,
			Column: orderitemshipgrpinvres.FieldOldPickStartDate,
		})
		_node.OldPickStartDate = value
	}
	if nodes := oisgirc.mutation.OrderHeaderIDs(); len(nodes) > 0 {
		edge := &sqlgraph.EdgeSpec{
			Rel:     sqlgraph.M2O,
			Inverse: true,
			Table:   orderitemshipgrpinvres.OrderHeaderTable,
			Columns: []string{orderitemshipgrpinvres.OrderHeaderColumn},
			Bidi:    false,
			Target: &sqlgraph.EdgeTarget{
				IDSpec: &sqlgraph.FieldSpec{
					Type:   field.TypeInt,
					Column: orderheader.FieldID,
				},
			},
		}
		for _, k := range nodes {
			edge.Target.Nodes = append(edge.Target.Nodes, k)
		}
		_node.order_header_order_item_ship_grp_inv_res = &nodes[0]
		_spec.Edges = append(_spec.Edges, edge)
	}
	if nodes := oisgirc.mutation.OrderItemIDs(); len(nodes) > 0 {
		edge := &sqlgraph.EdgeSpec{
			Rel:     sqlgraph.M2O,
			Inverse: true,
			Table:   orderitemshipgrpinvres.OrderItemTable,
			Columns: []string{orderitemshipgrpinvres.OrderItemColumn},
			Bidi:    false,
			Target: &sqlgraph.EdgeTarget{
				IDSpec: &sqlgraph.FieldSpec{
					Type:   field.TypeInt,
					Column: orderitem.FieldID,
				},
			},
		}
		for _, k := range nodes {
			edge.Target.Nodes = append(edge.Target.Nodes, k)
		}
		_node.order_item_order_item_ship_grp_inv_res = &nodes[0]
		_spec.Edges = append(_spec.Edges, edge)
	}
	if nodes := oisgirc.mutation.OrderItemShipGroupIDs(); len(nodes) > 0 {
		edge := &sqlgraph.EdgeSpec{
			Rel:     sqlgraph.M2O,
			Inverse: true,
			Table:   orderitemshipgrpinvres.OrderItemShipGroupTable,
			Columns: []string{orderitemshipgrpinvres.OrderItemShipGroupColumn},
			Bidi:    false,
			Target: &sqlgraph.EdgeTarget{
				IDSpec: &sqlgraph.FieldSpec{
					Type:   field.TypeInt,
					Column: orderitemshipgroup.FieldID,
				},
			},
		}
		for _, k := range nodes {
			edge.Target.Nodes = append(edge.Target.Nodes, k)
		}
		_node.order_item_ship_group_order_item_ship_grp_inv_res = &nodes[0]
		_spec.Edges = append(_spec.Edges, edge)
	}
	if nodes := oisgirc.mutation.OrderItemShipGroupAssocIDs(); len(nodes) > 0 {
		edge := &sqlgraph.EdgeSpec{
			Rel:     sqlgraph.M2O,
			Inverse: true,
			Table:   orderitemshipgrpinvres.OrderItemShipGroupAssocTable,
			Columns: []string{orderitemshipgrpinvres.OrderItemShipGroupAssocColumn},
			Bidi:    false,
			Target: &sqlgraph.EdgeTarget{
				IDSpec: &sqlgraph.FieldSpec{
					Type:   field.TypeInt,
					Column: orderitemshipgroupassoc.FieldID,
				},
			},
		}
		for _, k := range nodes {
			edge.Target.Nodes = append(edge.Target.Nodes, k)
		}
		_node.order_item_ship_group_assoc_order_item_ship_grp_inv_res = &nodes[0]
		_spec.Edges = append(_spec.Edges, edge)
	}
	if nodes := oisgirc.mutation.InventoryItemDetailsIDs(); len(nodes) > 0 {
		edge := &sqlgraph.EdgeSpec{
			Rel:     sqlgraph.O2M,
			Inverse: false,
			Table:   orderitemshipgrpinvres.InventoryItemDetailsTable,
			Columns: []string{orderitemshipgrpinvres.InventoryItemDetailsColumn},
			Bidi:    false,
			Target: &sqlgraph.EdgeTarget{
				IDSpec: &sqlgraph.FieldSpec{
					Type:   field.TypeInt,
					Column: inventoryitemdetail.FieldID,
				},
			},
		}
		for _, k := range nodes {
			edge.Target.Nodes = append(edge.Target.Nodes, k)
		}
		_spec.Edges = append(_spec.Edges, edge)
	}
	return _node, _spec
}

// OrderItemShipGrpInvResCreateBulk is the builder for creating many OrderItemShipGrpInvRes entities in bulk.
type OrderItemShipGrpInvResCreateBulk struct {
	config
	builders []*OrderItemShipGrpInvResCreate
}

// Save creates the OrderItemShipGrpInvRes entities in the database.
func (oisgircb *OrderItemShipGrpInvResCreateBulk) Save(ctx context.Context) ([]*OrderItemShipGrpInvRes, error) {
	specs := make([]*sqlgraph.CreateSpec, len(oisgircb.builders))
	nodes := make([]*OrderItemShipGrpInvRes, len(oisgircb.builders))
	mutators := make([]Mutator, len(oisgircb.builders))
	for i := range oisgircb.builders {
		func(i int, root context.Context) {
			builder := oisgircb.builders[i]
			builder.defaults()
			var mut Mutator = MutateFunc(func(ctx context.Context, m Mutation) (Value, error) {
				mutation, ok := m.(*OrderItemShipGrpInvResMutation)
				if !ok {
					return nil, fmt.Errorf("unexpected mutation type %T", m)
				}
				if err := builder.check(); err != nil {
					return nil, err
				}
				builder.mutation = mutation
				nodes[i], specs[i] = builder.createSpec()
				var err error
				if i < len(mutators)-1 {
					_, err = mutators[i+1].Mutate(root, oisgircb.builders[i+1].mutation)
				} else {
					// Invoke the actual operation on the latest mutation in the chain.
					if err = sqlgraph.BatchCreate(ctx, oisgircb.driver, &sqlgraph.BatchCreateSpec{Nodes: specs}); err != nil {
						if cerr, ok := isSQLConstraintError(err); ok {
							err = cerr
						}
					}
				}
				if err != nil {
					return nil, err
				}
				mutation.id = &nodes[i].ID
				mutation.done = true
				id := specs[i].ID.Value.(int64)
				nodes[i].ID = int(id)
				return nodes[i], nil
			})
			for i := len(builder.hooks) - 1; i >= 0; i-- {
				mut = builder.hooks[i](mut)
			}
			mutators[i] = mut
		}(i, ctx)
	}
	if len(mutators) > 0 {
		if _, err := mutators[0].Mutate(ctx, oisgircb.builders[0].mutation); err != nil {
			return nil, err
		}
	}
	return nodes, nil
}

// SaveX is like Save, but panics if an error occurs.
func (oisgircb *OrderItemShipGrpInvResCreateBulk) SaveX(ctx context.Context) []*OrderItemShipGrpInvRes {
	v, err := oisgircb.Save(ctx)
	if err != nil {
		panic(err)
	}
	return v
}
