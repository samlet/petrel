// Code generated by entc, DO NOT EDIT.

package productassoc

import (
	"time"
)

const (
	// Label holds the string label denoting the productassoc type in the database.
	Label = "product_assoc"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldCreateTime holds the string denoting the create_time field in the database.
	FieldCreateTime = "create_time"
	// FieldUpdateTime holds the string denoting the update_time field in the database.
	FieldUpdateTime = "update_time"
	// FieldStringRef holds the string denoting the string_ref field in the database.
	FieldStringRef = "string_ref"
	// FieldFromDate holds the string denoting the from_date field in the database.
	FieldFromDate = "from_date"
	// FieldThruDate holds the string denoting the thru_date field in the database.
	FieldThruDate = "thru_date"
	// FieldSequenceNum holds the string denoting the sequence_num field in the database.
	FieldSequenceNum = "sequence_num"
	// FieldReason holds the string denoting the reason field in the database.
	FieldReason = "reason"
	// FieldQuantity holds the string denoting the quantity field in the database.
	FieldQuantity = "quantity"
	// FieldScrapFactor holds the string denoting the scrap_factor field in the database.
	FieldScrapFactor = "scrap_factor"
	// FieldInstruction holds the string denoting the instruction field in the database.
	FieldInstruction = "instruction"
	// FieldRoutingWorkEffortID holds the string denoting the routing_work_effort_id field in the database.
	FieldRoutingWorkEffortID = "routing_work_effort_id"
	// FieldRecurrenceInfoID holds the string denoting the recurrence_info_id field in the database.
	FieldRecurrenceInfoID = "recurrence_info_id"
	// EdgeProductAssocType holds the string denoting the product_assoc_type edge name in mutations.
	EdgeProductAssocType = "product_assoc_type"
	// EdgeMainProduct holds the string denoting the main_product edge name in mutations.
	EdgeMainProduct = "main_product"
	// EdgeAssocProduct holds the string denoting the assoc_product edge name in mutations.
	EdgeAssocProduct = "assoc_product"
	// EdgeCustomMethod holds the string denoting the custom_method edge name in mutations.
	EdgeCustomMethod = "custom_method"
	// Table holds the table name of the productassoc in the database.
	Table = "product_assocs"
	// ProductAssocTypeTable is the table the holds the product_assoc_type relation/edge.
	ProductAssocTypeTable = "product_assocs"
	// ProductAssocTypeInverseTable is the table name for the ProductAssocType entity.
	// It exists in this package in order to avoid circular dependency with the "productassoctype" package.
	ProductAssocTypeInverseTable = "product_assoc_types"
	// ProductAssocTypeColumn is the table column denoting the product_assoc_type relation/edge.
	ProductAssocTypeColumn = "product_assoc_type_product_assocs"
	// MainProductTable is the table the holds the main_product relation/edge.
	MainProductTable = "product_assocs"
	// MainProductInverseTable is the table name for the Product entity.
	// It exists in this package in order to avoid circular dependency with the "product" package.
	MainProductInverseTable = "products"
	// MainProductColumn is the table column denoting the main_product relation/edge.
	MainProductColumn = "product_main_product_assocs"
	// AssocProductTable is the table the holds the assoc_product relation/edge.
	AssocProductTable = "product_assocs"
	// AssocProductInverseTable is the table name for the Product entity.
	// It exists in this package in order to avoid circular dependency with the "product" package.
	AssocProductInverseTable = "products"
	// AssocProductColumn is the table column denoting the assoc_product relation/edge.
	AssocProductColumn = "product_assoc_product_assocs"
	// CustomMethodTable is the table the holds the custom_method relation/edge.
	CustomMethodTable = "product_assocs"
	// CustomMethodInverseTable is the table name for the CustomMethod entity.
	// It exists in this package in order to avoid circular dependency with the "custommethod" package.
	CustomMethodInverseTable = "custom_methods"
	// CustomMethodColumn is the table column denoting the custom_method relation/edge.
	CustomMethodColumn = "custom_method_product_assocs"
)

// Columns holds all SQL columns for productassoc fields.
var Columns = []string{
	FieldID,
	FieldCreateTime,
	FieldUpdateTime,
	FieldStringRef,
	FieldFromDate,
	FieldThruDate,
	FieldSequenceNum,
	FieldReason,
	FieldQuantity,
	FieldScrapFactor,
	FieldInstruction,
	FieldRoutingWorkEffortID,
	FieldRecurrenceInfoID,
}

// ForeignKeys holds the SQL foreign-keys that are owned by the "product_assocs"
// table and are not defined as standalone fields in the schema.
var ForeignKeys = []string{
	"custom_method_product_assocs",
	"product_main_product_assocs",
	"product_assoc_product_assocs",
	"product_assoc_type_product_assocs",
}

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	for i := range ForeignKeys {
		if column == ForeignKeys[i] {
			return true
		}
	}
	return false
}

var (
	// DefaultCreateTime holds the default value on creation for the "create_time" field.
	DefaultCreateTime func() time.Time
	// DefaultUpdateTime holds the default value on creation for the "update_time" field.
	DefaultUpdateTime func() time.Time
	// UpdateDefaultUpdateTime holds the default value on update for the "update_time" field.
	UpdateDefaultUpdateTime func() time.Time
	// DefaultFromDate holds the default value on creation for the "from_date" field.
	DefaultFromDate func() time.Time
	// DefaultThruDate holds the default value on creation for the "thru_date" field.
	DefaultThruDate func() time.Time
)
