// Code generated by entc, DO NOT EDIT.

package productcategory

import (
	"fmt"
	"time"
)

const (
	// Label holds the string label denoting the productcategory type in the database.
	Label = "product_category"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldCreateTime holds the string denoting the create_time field in the database.
	FieldCreateTime = "create_time"
	// FieldUpdateTime holds the string denoting the update_time field in the database.
	FieldUpdateTime = "update_time"
	// FieldStringRef holds the string denoting the string_ref field in the database.
	FieldStringRef = "string_ref"
	// FieldCategoryName holds the string denoting the category_name field in the database.
	FieldCategoryName = "category_name"
	// FieldDescription holds the string denoting the description field in the database.
	FieldDescription = "description"
	// FieldLongDescription holds the string denoting the long_description field in the database.
	FieldLongDescription = "long_description"
	// FieldCategoryImageURL holds the string denoting the category_image_url field in the database.
	FieldCategoryImageURL = "category_image_url"
	// FieldLinkOneImageURL holds the string denoting the link_one_image_url field in the database.
	FieldLinkOneImageURL = "link_one_image_url"
	// FieldLinkTwoImageURL holds the string denoting the link_two_image_url field in the database.
	FieldLinkTwoImageURL = "link_two_image_url"
	// FieldDetailScreen holds the string denoting the detail_screen field in the database.
	FieldDetailScreen = "detail_screen"
	// FieldShowInSelect holds the string denoting the show_in_select field in the database.
	FieldShowInSelect = "show_in_select"
	// EdgeProductCategoryType holds the string denoting the product_category_type edge name in mutations.
	EdgeProductCategoryType = "product_category_type"
	// EdgeParent holds the string denoting the parent edge name in mutations.
	EdgeParent = "parent"
	// EdgeChildren holds the string denoting the children edge name in mutations.
	EdgeChildren = "children"
	// EdgePrimaryChildProductCategories holds the string denoting the primary_child_product_categories edge name in mutations.
	EdgePrimaryChildProductCategories = "primary_child_product_categories"
	// EdgePrimaryProducts holds the string denoting the primary_products edge name in mutations.
	EdgePrimaryProducts = "primary_products"
	// Table holds the table name of the productcategory in the database.
	Table = "product_categories"
	// ProductCategoryTypeTable is the table the holds the product_category_type relation/edge.
	ProductCategoryTypeTable = "product_categories"
	// ProductCategoryTypeInverseTable is the table name for the ProductCategoryType entity.
	// It exists in this package in order to avoid circular dependency with the "productcategorytype" package.
	ProductCategoryTypeInverseTable = "product_category_types"
	// ProductCategoryTypeColumn is the table column denoting the product_category_type relation/edge.
	ProductCategoryTypeColumn = "product_category_type_product_categories"
	// ParentTable is the table the holds the parent relation/edge.
	ParentTable = "product_categories"
	// ParentColumn is the table column denoting the parent relation/edge.
	ParentColumn = "product_category_children"
	// ChildrenTable is the table the holds the children relation/edge.
	ChildrenTable = "product_categories"
	// ChildrenColumn is the table column denoting the children relation/edge.
	ChildrenColumn = "product_category_children"
	// PrimaryChildProductCategoriesTable is the table the holds the primary_child_product_categories relation/edge. The primary key declared below.
	PrimaryChildProductCategoriesTable = "product_category_primary_child_product_categories"
	// PrimaryProductsTable is the table the holds the primary_products relation/edge.
	PrimaryProductsTable = "products"
	// PrimaryProductsInverseTable is the table name for the Product entity.
	// It exists in this package in order to avoid circular dependency with the "product" package.
	PrimaryProductsInverseTable = "products"
	// PrimaryProductsColumn is the table column denoting the primary_products relation/edge.
	PrimaryProductsColumn = "product_category_primary_products"
)

// Columns holds all SQL columns for productcategory fields.
var Columns = []string{
	FieldID,
	FieldCreateTime,
	FieldUpdateTime,
	FieldStringRef,
	FieldCategoryName,
	FieldDescription,
	FieldLongDescription,
	FieldCategoryImageURL,
	FieldLinkOneImageURL,
	FieldLinkTwoImageURL,
	FieldDetailScreen,
	FieldShowInSelect,
}

// ForeignKeys holds the SQL foreign-keys that are owned by the "product_categories"
// table and are not defined as standalone fields in the schema.
var ForeignKeys = []string{
	"product_category_children",
	"product_category_type_product_categories",
}

var (
	// PrimaryChildProductCategoriesPrimaryKey and PrimaryChildProductCategoriesColumn2 are the table columns denoting the
	// primary key for the primary_child_product_categories relation (M2M).
	PrimaryChildProductCategoriesPrimaryKey = []string{"product_category_id", "primary_child_product_category_id"}
)

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	for i := range ForeignKeys {
		if column == ForeignKeys[i] {
			return true
		}
	}
	return false
}

var (
	// DefaultCreateTime holds the default value on creation for the "create_time" field.
	DefaultCreateTime func() time.Time
	// DefaultUpdateTime holds the default value on creation for the "update_time" field.
	DefaultUpdateTime func() time.Time
	// UpdateDefaultUpdateTime holds the default value on update for the "update_time" field.
	UpdateDefaultUpdateTime func() time.Time
)

// ShowInSelect defines the type for the "show_in_select" enum field.
type ShowInSelect string

// ShowInSelect values.
const (
	ShowInSelectYes     ShowInSelect = "Yes"
	ShowInSelectNo      ShowInSelect = "No"
	ShowInSelectUnknown ShowInSelect = "Unknown"
)

func (sis ShowInSelect) String() string {
	return string(sis)
}

// ShowInSelectValidator is a validator for the "show_in_select" field enum values. It is called by the builders before save.
func ShowInSelectValidator(sis ShowInSelect) error {
	switch sis {
	case ShowInSelectYes, ShowInSelectNo, ShowInSelectUnknown:
		return nil
	default:
		return fmt.Errorf("productcategory: invalid enum value for show_in_select field: %q", sis)
	}
}
