// Code generated by entc, DO NOT EDIT.

package productfeature

import (
	"time"
)

const (
	// Label holds the string label denoting the productfeature type in the database.
	Label = "product_feature"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldCreateTime holds the string denoting the create_time field in the database.
	FieldCreateTime = "create_time"
	// FieldUpdateTime holds the string denoting the update_time field in the database.
	FieldUpdateTime = "update_time"
	// FieldStringRef holds the string denoting the string_ref field in the database.
	FieldStringRef = "string_ref"
	// FieldDescription holds the string denoting the description field in the database.
	FieldDescription = "description"
	// FieldUomID holds the string denoting the uom_id field in the database.
	FieldUomID = "uom_id"
	// FieldNumberSpecified holds the string denoting the number_specified field in the database.
	FieldNumberSpecified = "number_specified"
	// FieldDefaultAmount holds the string denoting the default_amount field in the database.
	FieldDefaultAmount = "default_amount"
	// FieldDefaultSequenceNum holds the string denoting the default_sequence_num field in the database.
	FieldDefaultSequenceNum = "default_sequence_num"
	// FieldAbbrev holds the string denoting the abbrev field in the database.
	FieldAbbrev = "abbrev"
	// FieldIDCode holds the string denoting the id_code field in the database.
	FieldIDCode = "id_code"
	// EdgeProductFeatureCategory holds the string denoting the product_feature_category edge name in mutations.
	EdgeProductFeatureCategory = "product_feature_category"
	// EdgeProductFeatureType holds the string denoting the product_feature_type edge name in mutations.
	EdgeProductFeatureType = "product_feature_type"
	// Table holds the table name of the productfeature in the database.
	Table = "product_features"
	// ProductFeatureCategoryTable is the table the holds the product_feature_category relation/edge.
	ProductFeatureCategoryTable = "product_features"
	// ProductFeatureCategoryInverseTable is the table name for the ProductFeatureCategory entity.
	// It exists in this package in order to avoid circular dependency with the "productfeaturecategory" package.
	ProductFeatureCategoryInverseTable = "product_feature_categories"
	// ProductFeatureCategoryColumn is the table column denoting the product_feature_category relation/edge.
	ProductFeatureCategoryColumn = "product_feature_category_product_features"
	// ProductFeatureTypeTable is the table the holds the product_feature_type relation/edge.
	ProductFeatureTypeTable = "product_features"
	// ProductFeatureTypeInverseTable is the table name for the ProductFeatureType entity.
	// It exists in this package in order to avoid circular dependency with the "productfeaturetype" package.
	ProductFeatureTypeInverseTable = "product_feature_types"
	// ProductFeatureTypeColumn is the table column denoting the product_feature_type relation/edge.
	ProductFeatureTypeColumn = "product_feature_type_product_features"
)

// Columns holds all SQL columns for productfeature fields.
var Columns = []string{
	FieldID,
	FieldCreateTime,
	FieldUpdateTime,
	FieldStringRef,
	FieldDescription,
	FieldUomID,
	FieldNumberSpecified,
	FieldDefaultAmount,
	FieldDefaultSequenceNum,
	FieldAbbrev,
	FieldIDCode,
}

// ForeignKeys holds the SQL foreign-keys that are owned by the "product_features"
// table and are not defined as standalone fields in the schema.
var ForeignKeys = []string{
	"product_feature_category_product_features",
	"product_feature_type_product_features",
}

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	for i := range ForeignKeys {
		if column == ForeignKeys[i] {
			return true
		}
	}
	return false
}

var (
	// DefaultCreateTime holds the default value on creation for the "create_time" field.
	DefaultCreateTime func() time.Time
	// DefaultUpdateTime holds the default value on creation for the "update_time" field.
	DefaultUpdateTime func() time.Time
	// UpdateDefaultUpdateTime holds the default value on update for the "update_time" field.
	UpdateDefaultUpdateTime func() time.Time
	// IDCodeValidator is a validator for the "id_code" field. It is called by the builders before save.
	IDCodeValidator func(string) error
)
