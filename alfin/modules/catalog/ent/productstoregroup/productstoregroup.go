// Code generated by entc, DO NOT EDIT.

package productstoregroup

import (
	"time"
)

const (
	// Label holds the string label denoting the productstoregroup type in the database.
	Label = "product_store_group"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldCreateTime holds the string denoting the create_time field in the database.
	FieldCreateTime = "create_time"
	// FieldUpdateTime holds the string denoting the update_time field in the database.
	FieldUpdateTime = "update_time"
	// FieldStringRef holds the string denoting the string_ref field in the database.
	FieldStringRef = "string_ref"
	// FieldProductStoreGroupTypeID holds the string denoting the product_store_group_type_id field in the database.
	FieldProductStoreGroupTypeID = "product_store_group_type_id"
	// FieldProductStoreGroupName holds the string denoting the product_store_group_name field in the database.
	FieldProductStoreGroupName = "product_store_group_name"
	// FieldDescription holds the string denoting the description field in the database.
	FieldDescription = "description"
	// EdgeParent holds the string denoting the parent edge name in mutations.
	EdgeParent = "parent"
	// EdgeChildren holds the string denoting the children edge name in mutations.
	EdgeChildren = "children"
	// EdgeProductPrices holds the string denoting the product_prices edge name in mutations.
	EdgeProductPrices = "product_prices"
	// EdgePrimaryProductStores holds the string denoting the primary_product_stores edge name in mutations.
	EdgePrimaryProductStores = "primary_product_stores"
	// Table holds the table name of the productstoregroup in the database.
	Table = "product_store_groups"
	// ParentTable is the table the holds the parent relation/edge.
	ParentTable = "product_store_groups"
	// ParentColumn is the table column denoting the parent relation/edge.
	ParentColumn = "product_store_group_children"
	// ChildrenTable is the table the holds the children relation/edge.
	ChildrenTable = "product_store_groups"
	// ChildrenColumn is the table column denoting the children relation/edge.
	ChildrenColumn = "product_store_group_children"
	// ProductPricesTable is the table the holds the product_prices relation/edge.
	ProductPricesTable = "product_prices"
	// ProductPricesInverseTable is the table name for the ProductPrice entity.
	// It exists in this package in order to avoid circular dependency with the "productprice" package.
	ProductPricesInverseTable = "product_prices"
	// ProductPricesColumn is the table column denoting the product_prices relation/edge.
	ProductPricesColumn = "product_store_group_product_prices"
	// PrimaryProductStoresTable is the table the holds the primary_product_stores relation/edge.
	PrimaryProductStoresTable = "product_stores"
	// PrimaryProductStoresInverseTable is the table name for the ProductStore entity.
	// It exists in this package in order to avoid circular dependency with the "productstore" package.
	PrimaryProductStoresInverseTable = "product_stores"
	// PrimaryProductStoresColumn is the table column denoting the primary_product_stores relation/edge.
	PrimaryProductStoresColumn = "product_store_group_primary_product_stores"
)

// Columns holds all SQL columns for productstoregroup fields.
var Columns = []string{
	FieldID,
	FieldCreateTime,
	FieldUpdateTime,
	FieldStringRef,
	FieldProductStoreGroupTypeID,
	FieldProductStoreGroupName,
	FieldDescription,
}

// ForeignKeys holds the SQL foreign-keys that are owned by the "product_store_groups"
// table and are not defined as standalone fields in the schema.
var ForeignKeys = []string{
	"product_store_group_children",
}

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	for i := range ForeignKeys {
		if column == ForeignKeys[i] {
			return true
		}
	}
	return false
}

var (
	// DefaultCreateTime holds the default value on creation for the "create_time" field.
	DefaultCreateTime func() time.Time
	// DefaultUpdateTime holds the default value on creation for the "update_time" field.
	DefaultUpdateTime func() time.Time
	// UpdateDefaultUpdateTime holds the default value on update for the "update_time" field.
	UpdateDefaultUpdateTime func() time.Time
)
