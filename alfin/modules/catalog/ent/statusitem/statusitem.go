// Code generated by entc, DO NOT EDIT.

package statusitem

import (
	"time"
)

const (
	// Label holds the string label denoting the statusitem type in the database.
	Label = "status_item"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldCreateTime holds the string denoting the create_time field in the database.
	FieldCreateTime = "create_time"
	// FieldUpdateTime holds the string denoting the update_time field in the database.
	FieldUpdateTime = "update_time"
	// FieldStringRef holds the string denoting the string_ref field in the database.
	FieldStringRef = "string_ref"
	// FieldStatusCode holds the string denoting the status_code field in the database.
	FieldStatusCode = "status_code"
	// FieldSequenceID holds the string denoting the sequence_id field in the database.
	FieldSequenceID = "sequence_id"
	// FieldDescription holds the string denoting the description field in the database.
	FieldDescription = "description"
	// EdgeStatusType holds the string denoting the status_type edge name in mutations.
	EdgeStatusType = "status_type"
	// EdgeOrderHeaders holds the string denoting the order_headers edge name in mutations.
	EdgeOrderHeaders = "order_headers"
	// EdgeSyncOrderHeaders holds the string denoting the sync_order_headers edge name in mutations.
	EdgeSyncOrderHeaders = "sync_order_headers"
	// EdgeOrderItems holds the string denoting the order_items edge name in mutations.
	EdgeOrderItems = "order_items"
	// EdgeSyncOrderItems holds the string denoting the sync_order_items edge name in mutations.
	EdgeSyncOrderItems = "sync_order_items"
	// EdgeOrderPaymentPreferences holds the string denoting the order_payment_preferences edge name in mutations.
	EdgeOrderPaymentPreferences = "order_payment_preferences"
	// EdgeOrderStatuses holds the string denoting the order_statuses edge name in mutations.
	EdgeOrderStatuses = "order_statuses"
	// EdgeProductReviews holds the string denoting the product_reviews edge name in mutations.
	EdgeProductReviews = "product_reviews"
	// EdgeHeaderApprovedProductStores holds the string denoting the header_approved_product_stores edge name in mutations.
	EdgeHeaderApprovedProductStores = "header_approved_product_stores"
	// EdgeItemApprovedProductStores holds the string denoting the item_approved_product_stores edge name in mutations.
	EdgeItemApprovedProductStores = "item_approved_product_stores"
	// EdgeDigitalItemApprovedProductStores holds the string denoting the digital_item_approved_product_stores edge name in mutations.
	EdgeDigitalItemApprovedProductStores = "digital_item_approved_product_stores"
	// EdgeHeaderDeclinedProductStores holds the string denoting the header_declined_product_stores edge name in mutations.
	EdgeHeaderDeclinedProductStores = "header_declined_product_stores"
	// EdgeItemDeclinedProductStores holds the string denoting the item_declined_product_stores edge name in mutations.
	EdgeItemDeclinedProductStores = "item_declined_product_stores"
	// EdgeHeaderCancelProductStores holds the string denoting the header_cancel_product_stores edge name in mutations.
	EdgeHeaderCancelProductStores = "header_cancel_product_stores"
	// EdgeItemCancelProductStores holds the string denoting the item_cancel_product_stores edge name in mutations.
	EdgeItemCancelProductStores = "item_cancel_product_stores"
	// EdgeMainStatusValidChanges holds the string denoting the main_status_valid_changes edge name in mutations.
	EdgeMainStatusValidChanges = "main_status_valid_changes"
	// EdgeToStatusValidChanges holds the string denoting the to_status_valid_changes edge name in mutations.
	EdgeToStatusValidChanges = "to_status_valid_changes"
	// Table holds the table name of the statusitem in the database.
	Table = "status_items"
	// StatusTypeTable is the table the holds the status_type relation/edge.
	StatusTypeTable = "status_items"
	// StatusTypeInverseTable is the table name for the StatusType entity.
	// It exists in this package in order to avoid circular dependency with the "statustype" package.
	StatusTypeInverseTable = "status_types"
	// StatusTypeColumn is the table column denoting the status_type relation/edge.
	StatusTypeColumn = "status_type_status_items"
	// OrderHeadersTable is the table the holds the order_headers relation/edge.
	OrderHeadersTable = "order_headers"
	// OrderHeadersInverseTable is the table name for the OrderHeader entity.
	// It exists in this package in order to avoid circular dependency with the "orderheader" package.
	OrderHeadersInverseTable = "order_headers"
	// OrderHeadersColumn is the table column denoting the order_headers relation/edge.
	OrderHeadersColumn = "status_item_order_headers"
	// SyncOrderHeadersTable is the table the holds the sync_order_headers relation/edge.
	SyncOrderHeadersTable = "order_headers"
	// SyncOrderHeadersInverseTable is the table name for the OrderHeader entity.
	// It exists in this package in order to avoid circular dependency with the "orderheader" package.
	SyncOrderHeadersInverseTable = "order_headers"
	// SyncOrderHeadersColumn is the table column denoting the sync_order_headers relation/edge.
	SyncOrderHeadersColumn = "status_item_sync_order_headers"
	// OrderItemsTable is the table the holds the order_items relation/edge.
	OrderItemsTable = "order_items"
	// OrderItemsInverseTable is the table name for the OrderItem entity.
	// It exists in this package in order to avoid circular dependency with the "orderitem" package.
	OrderItemsInverseTable = "order_items"
	// OrderItemsColumn is the table column denoting the order_items relation/edge.
	OrderItemsColumn = "status_item_order_items"
	// SyncOrderItemsTable is the table the holds the sync_order_items relation/edge.
	SyncOrderItemsTable = "order_items"
	// SyncOrderItemsInverseTable is the table name for the OrderItem entity.
	// It exists in this package in order to avoid circular dependency with the "orderitem" package.
	SyncOrderItemsInverseTable = "order_items"
	// SyncOrderItemsColumn is the table column denoting the sync_order_items relation/edge.
	SyncOrderItemsColumn = "status_item_sync_order_items"
	// OrderPaymentPreferencesTable is the table the holds the order_payment_preferences relation/edge.
	OrderPaymentPreferencesTable = "order_payment_preferences"
	// OrderPaymentPreferencesInverseTable is the table name for the OrderPaymentPreference entity.
	// It exists in this package in order to avoid circular dependency with the "orderpaymentpreference" package.
	OrderPaymentPreferencesInverseTable = "order_payment_preferences"
	// OrderPaymentPreferencesColumn is the table column denoting the order_payment_preferences relation/edge.
	OrderPaymentPreferencesColumn = "status_item_order_payment_preferences"
	// OrderStatusesTable is the table the holds the order_statuses relation/edge.
	OrderStatusesTable = "order_status"
	// OrderStatusesInverseTable is the table name for the OrderStatus entity.
	// It exists in this package in order to avoid circular dependency with the "orderstatus" package.
	OrderStatusesInverseTable = "order_status"
	// OrderStatusesColumn is the table column denoting the order_statuses relation/edge.
	OrderStatusesColumn = "status_item_order_statuses"
	// ProductReviewsTable is the table the holds the product_reviews relation/edge.
	ProductReviewsTable = "product_reviews"
	// ProductReviewsInverseTable is the table name for the ProductReview entity.
	// It exists in this package in order to avoid circular dependency with the "productreview" package.
	ProductReviewsInverseTable = "product_reviews"
	// ProductReviewsColumn is the table column denoting the product_reviews relation/edge.
	ProductReviewsColumn = "status_item_product_reviews"
	// HeaderApprovedProductStoresTable is the table the holds the header_approved_product_stores relation/edge.
	HeaderApprovedProductStoresTable = "product_stores"
	// HeaderApprovedProductStoresInverseTable is the table name for the ProductStore entity.
	// It exists in this package in order to avoid circular dependency with the "productstore" package.
	HeaderApprovedProductStoresInverseTable = "product_stores"
	// HeaderApprovedProductStoresColumn is the table column denoting the header_approved_product_stores relation/edge.
	HeaderApprovedProductStoresColumn = "status_item_header_approved_product_stores"
	// ItemApprovedProductStoresTable is the table the holds the item_approved_product_stores relation/edge.
	ItemApprovedProductStoresTable = "product_stores"
	// ItemApprovedProductStoresInverseTable is the table name for the ProductStore entity.
	// It exists in this package in order to avoid circular dependency with the "productstore" package.
	ItemApprovedProductStoresInverseTable = "product_stores"
	// ItemApprovedProductStoresColumn is the table column denoting the item_approved_product_stores relation/edge.
	ItemApprovedProductStoresColumn = "status_item_item_approved_product_stores"
	// DigitalItemApprovedProductStoresTable is the table the holds the digital_item_approved_product_stores relation/edge.
	DigitalItemApprovedProductStoresTable = "product_stores"
	// DigitalItemApprovedProductStoresInverseTable is the table name for the ProductStore entity.
	// It exists in this package in order to avoid circular dependency with the "productstore" package.
	DigitalItemApprovedProductStoresInverseTable = "product_stores"
	// DigitalItemApprovedProductStoresColumn is the table column denoting the digital_item_approved_product_stores relation/edge.
	DigitalItemApprovedProductStoresColumn = "status_item_digital_item_approved_product_stores"
	// HeaderDeclinedProductStoresTable is the table the holds the header_declined_product_stores relation/edge.
	HeaderDeclinedProductStoresTable = "product_stores"
	// HeaderDeclinedProductStoresInverseTable is the table name for the ProductStore entity.
	// It exists in this package in order to avoid circular dependency with the "productstore" package.
	HeaderDeclinedProductStoresInverseTable = "product_stores"
	// HeaderDeclinedProductStoresColumn is the table column denoting the header_declined_product_stores relation/edge.
	HeaderDeclinedProductStoresColumn = "status_item_header_declined_product_stores"
	// ItemDeclinedProductStoresTable is the table the holds the item_declined_product_stores relation/edge.
	ItemDeclinedProductStoresTable = "product_stores"
	// ItemDeclinedProductStoresInverseTable is the table name for the ProductStore entity.
	// It exists in this package in order to avoid circular dependency with the "productstore" package.
	ItemDeclinedProductStoresInverseTable = "product_stores"
	// ItemDeclinedProductStoresColumn is the table column denoting the item_declined_product_stores relation/edge.
	ItemDeclinedProductStoresColumn = "status_item_item_declined_product_stores"
	// HeaderCancelProductStoresTable is the table the holds the header_cancel_product_stores relation/edge.
	HeaderCancelProductStoresTable = "product_stores"
	// HeaderCancelProductStoresInverseTable is the table name for the ProductStore entity.
	// It exists in this package in order to avoid circular dependency with the "productstore" package.
	HeaderCancelProductStoresInverseTable = "product_stores"
	// HeaderCancelProductStoresColumn is the table column denoting the header_cancel_product_stores relation/edge.
	HeaderCancelProductStoresColumn = "status_item_header_cancel_product_stores"
	// ItemCancelProductStoresTable is the table the holds the item_cancel_product_stores relation/edge.
	ItemCancelProductStoresTable = "product_stores"
	// ItemCancelProductStoresInverseTable is the table name for the ProductStore entity.
	// It exists in this package in order to avoid circular dependency with the "productstore" package.
	ItemCancelProductStoresInverseTable = "product_stores"
	// ItemCancelProductStoresColumn is the table column denoting the item_cancel_product_stores relation/edge.
	ItemCancelProductStoresColumn = "status_item_item_cancel_product_stores"
	// MainStatusValidChangesTable is the table the holds the main_status_valid_changes relation/edge.
	MainStatusValidChangesTable = "status_valid_changes"
	// MainStatusValidChangesInverseTable is the table name for the StatusValidChange entity.
	// It exists in this package in order to avoid circular dependency with the "statusvalidchange" package.
	MainStatusValidChangesInverseTable = "status_valid_changes"
	// MainStatusValidChangesColumn is the table column denoting the main_status_valid_changes relation/edge.
	MainStatusValidChangesColumn = "status_item_main_status_valid_changes"
	// ToStatusValidChangesTable is the table the holds the to_status_valid_changes relation/edge.
	ToStatusValidChangesTable = "status_valid_changes"
	// ToStatusValidChangesInverseTable is the table name for the StatusValidChange entity.
	// It exists in this package in order to avoid circular dependency with the "statusvalidchange" package.
	ToStatusValidChangesInverseTable = "status_valid_changes"
	// ToStatusValidChangesColumn is the table column denoting the to_status_valid_changes relation/edge.
	ToStatusValidChangesColumn = "status_item_to_status_valid_changes"
)

// Columns holds all SQL columns for statusitem fields.
var Columns = []string{
	FieldID,
	FieldCreateTime,
	FieldUpdateTime,
	FieldStringRef,
	FieldStatusCode,
	FieldSequenceID,
	FieldDescription,
}

// ForeignKeys holds the SQL foreign-keys that are owned by the "status_items"
// table and are not defined as standalone fields in the schema.
var ForeignKeys = []string{
	"status_type_status_items",
}

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	for i := range ForeignKeys {
		if column == ForeignKeys[i] {
			return true
		}
	}
	return false
}

var (
	// DefaultCreateTime holds the default value on creation for the "create_time" field.
	DefaultCreateTime func() time.Time
	// DefaultUpdateTime holds the default value on creation for the "update_time" field.
	DefaultUpdateTime func() time.Time
	// UpdateDefaultUpdateTime holds the default value on update for the "update_time" field.
	UpdateDefaultUpdateTime func() time.Time
)
