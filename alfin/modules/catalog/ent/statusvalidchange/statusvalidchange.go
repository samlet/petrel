// Code generated by entc, DO NOT EDIT.

package statusvalidchange

import (
	"time"
)

const (
	// Label holds the string label denoting the statusvalidchange type in the database.
	Label = "status_valid_change"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldCreateTime holds the string denoting the create_time field in the database.
	FieldCreateTime = "create_time"
	// FieldUpdateTime holds the string denoting the update_time field in the database.
	FieldUpdateTime = "update_time"
	// FieldStringRef holds the string denoting the string_ref field in the database.
	FieldStringRef = "string_ref"
	// FieldConditionExpression holds the string denoting the condition_expression field in the database.
	FieldConditionExpression = "condition_expression"
	// FieldTransitionName holds the string denoting the transition_name field in the database.
	FieldTransitionName = "transition_name"
	// EdgeMainStatusItem holds the string denoting the main_status_item edge name in mutations.
	EdgeMainStatusItem = "main_status_item"
	// EdgeToStatusItem holds the string denoting the to_status_item edge name in mutations.
	EdgeToStatusItem = "to_status_item"
	// Table holds the table name of the statusvalidchange in the database.
	Table = "status_valid_changes"
	// MainStatusItemTable is the table the holds the main_status_item relation/edge.
	MainStatusItemTable = "status_valid_changes"
	// MainStatusItemInverseTable is the table name for the StatusItem entity.
	// It exists in this package in order to avoid circular dependency with the "statusitem" package.
	MainStatusItemInverseTable = "status_items"
	// MainStatusItemColumn is the table column denoting the main_status_item relation/edge.
	MainStatusItemColumn = "status_item_main_status_valid_changes"
	// ToStatusItemTable is the table the holds the to_status_item relation/edge.
	ToStatusItemTable = "status_valid_changes"
	// ToStatusItemInverseTable is the table name for the StatusItem entity.
	// It exists in this package in order to avoid circular dependency with the "statusitem" package.
	ToStatusItemInverseTable = "status_items"
	// ToStatusItemColumn is the table column denoting the to_status_item relation/edge.
	ToStatusItemColumn = "status_item_to_status_valid_changes"
)

// Columns holds all SQL columns for statusvalidchange fields.
var Columns = []string{
	FieldID,
	FieldCreateTime,
	FieldUpdateTime,
	FieldStringRef,
	FieldConditionExpression,
	FieldTransitionName,
}

// ForeignKeys holds the SQL foreign-keys that are owned by the "status_valid_changes"
// table and are not defined as standalone fields in the schema.
var ForeignKeys = []string{
	"order_item_status_valid_changes",
	"status_item_main_status_valid_changes",
	"status_item_to_status_valid_changes",
}

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	for i := range ForeignKeys {
		if column == ForeignKeys[i] {
			return true
		}
	}
	return false
}

var (
	// DefaultCreateTime holds the default value on creation for the "create_time" field.
	DefaultCreateTime func() time.Time
	// DefaultUpdateTime holds the default value on creation for the "update_time" field.
	DefaultUpdateTime func() time.Time
	// UpdateDefaultUpdateTime holds the default value on update for the "update_time" field.
	UpdateDefaultUpdateTime func() time.Time
)
