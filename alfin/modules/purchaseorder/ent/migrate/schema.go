// Code generated by entc, DO NOT EDIT.

package migrate

import (
	"entgo.io/ent/dialect/sql/schema"
	"entgo.io/ent/schema/field"
)

var (
	// ItemIssuancesColumns holds the columns for the "item_issuances" table.
	ItemIssuancesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "create_time", Type: field.TypeTime},
		{Name: "update_time", Type: field.TypeTime},
		{Name: "order_item_seq_id", Type: field.TypeInt, Nullable: true},
		{Name: "ship_group_seq_id", Type: field.TypeInt, Nullable: true},
		{Name: "inventory_item_id", Type: field.TypeInt, Nullable: true},
		{Name: "shipment_item_seq_id", Type: field.TypeInt, Nullable: true},
		{Name: "fixed_asset_id", Type: field.TypeInt, Nullable: true},
		{Name: "maint_hist_seq_id", Type: field.TypeInt, Nullable: true},
		{Name: "issued_date_time", Type: field.TypeTime, Nullable: true},
		{Name: "issued_by_user_login_id", Type: field.TypeString, Nullable: true},
		{Name: "quantity", Type: field.TypeFloat64, Nullable: true},
		{Name: "cancel_quantity", Type: field.TypeFloat64, Nullable: true},
		{Name: "order_header_item_issuances", Type: field.TypeInt, Nullable: true},
		{Name: "order_item_item_issuances", Type: field.TypeInt, Nullable: true},
		{Name: "shipment_item_issuances", Type: field.TypeInt, Nullable: true},
		{Name: "shipment_item_item_issuances", Type: field.TypeInt, Nullable: true},
	}
	// ItemIssuancesTable holds the schema information for the "item_issuances" table.
	ItemIssuancesTable = &schema.Table{
		Name:       "item_issuances",
		Columns:    ItemIssuancesColumns,
		PrimaryKey: []*schema.Column{ItemIssuancesColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "item_issuances_order_headers_item_issuances",
				Columns:    []*schema.Column{ItemIssuancesColumns[13]},
				RefColumns: []*schema.Column{OrderHeadersColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "item_issuances_order_items_item_issuances",
				Columns:    []*schema.Column{ItemIssuancesColumns[14]},
				RefColumns: []*schema.Column{OrderItemsColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "item_issuances_shipments_item_issuances",
				Columns:    []*schema.Column{ItemIssuancesColumns[15]},
				RefColumns: []*schema.Column{ShipmentsColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "item_issuances_shipment_items_item_issuances",
				Columns:    []*schema.Column{ItemIssuancesColumns[16]},
				RefColumns: []*schema.Column{ShipmentItemsColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// OrderContactMechesColumns holds the columns for the "order_contact_meches" table.
	OrderContactMechesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "create_time", Type: field.TypeTime},
		{Name: "update_time", Type: field.TypeTime},
		{Name: "contact_mech_purpose_type_id", Type: field.TypeInt},
		{Name: "contact_mech_id", Type: field.TypeInt},
		{Name: "order_header_order_contact_meches", Type: field.TypeInt, Nullable: true},
	}
	// OrderContactMechesTable holds the schema information for the "order_contact_meches" table.
	OrderContactMechesTable = &schema.Table{
		Name:       "order_contact_meches",
		Columns:    OrderContactMechesColumns,
		PrimaryKey: []*schema.Column{OrderContactMechesColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "order_contact_meches_order_headers_order_contact_meches",
				Columns:    []*schema.Column{OrderContactMechesColumns[5]},
				RefColumns: []*schema.Column{OrderHeadersColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// OrderHeadersColumns holds the columns for the "order_headers" table.
	OrderHeadersColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "create_time", Type: field.TypeTime},
		{Name: "update_time", Type: field.TypeTime},
		{Name: "order_type_id", Type: field.TypeInt, Nullable: true},
		{Name: "order_name", Type: field.TypeString, Nullable: true},
		{Name: "external_id", Type: field.TypeInt, Nullable: true},
		{Name: "sales_channel_enum_id", Type: field.TypeInt, Nullable: true},
		{Name: "order_date", Type: field.TypeTime, Nullable: true},
		{Name: "priority", Type: field.TypeEnum, Nullable: true, Enums: []string{"Y", "N", "-"}},
		{Name: "entry_date", Type: field.TypeTime, Nullable: true},
		{Name: "pick_sheet_printed_date", Type: field.TypeTime, Nullable: true},
		{Name: "visit_id", Type: field.TypeInt, Nullable: true},
		{Name: "status_id", Type: field.TypeInt, Nullable: true},
		{Name: "created_by", Type: field.TypeString, Nullable: true},
		{Name: "first_attempt_order_id", Type: field.TypeInt, Nullable: true},
		{Name: "currency_uom", Type: field.TypeInt, Nullable: true},
		{Name: "sync_status_id", Type: field.TypeInt, Nullable: true},
		{Name: "billing_account_id", Type: field.TypeInt, Nullable: true},
		{Name: "origin_facility_id", Type: field.TypeInt, Nullable: true},
		{Name: "web_site_id", Type: field.TypeInt, Nullable: true},
		{Name: "product_store_id", Type: field.TypeInt, Nullable: true},
		{Name: "agreement_id", Type: field.TypeInt, Nullable: true},
		{Name: "terminal_id", Type: field.TypeString, Nullable: true, Size: 32},
		{Name: "transaction_id", Type: field.TypeString, Nullable: true, Size: 32},
		{Name: "auto_order_shopping_list_id", Type: field.TypeInt, Nullable: true},
		{Name: "needs_inventory_issuance", Type: field.TypeEnum, Nullable: true, Enums: []string{"Y", "N", "-"}},
		{Name: "is_rush_order", Type: field.TypeEnum, Nullable: true, Enums: []string{"Y", "N", "-"}},
		{Name: "internal_code", Type: field.TypeString, Nullable: true, Size: 32},
		{Name: "remaining_sub_total", Type: field.TypeFloat64, Nullable: true},
		{Name: "grand_total", Type: field.TypeFloat64, Nullable: true},
		{Name: "is_viewed", Type: field.TypeEnum, Nullable: true, Enums: []string{"Y", "N", "-"}},
		{Name: "invoice_per_shipment", Type: field.TypeEnum, Nullable: true, Enums: []string{"Y", "N", "-"}},
	}
	// OrderHeadersTable holds the schema information for the "order_headers" table.
	OrderHeadersTable = &schema.Table{
		Name:        "order_headers",
		Columns:     OrderHeadersColumns,
		PrimaryKey:  []*schema.Column{OrderHeadersColumns[0]},
		ForeignKeys: []*schema.ForeignKey{},
	}
	// OrderItemsColumns holds the columns for the "order_items" table.
	OrderItemsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "create_time", Type: field.TypeTime},
		{Name: "update_time", Type: field.TypeTime},
		{Name: "order_item_seq_id", Type: field.TypeInt},
		{Name: "external_id", Type: field.TypeInt, Nullable: true},
		{Name: "order_item_type_id", Type: field.TypeInt, Nullable: true},
		{Name: "order_item_group_seq_id", Type: field.TypeInt, Nullable: true},
		{Name: "is_item_group_primary", Type: field.TypeEnum, Nullable: true, Enums: []string{"Y", "N", "-"}},
		{Name: "from_inventory_item_id", Type: field.TypeInt, Nullable: true},
		{Name: "budget_id", Type: field.TypeInt, Nullable: true},
		{Name: "budget_item_seq_id", Type: field.TypeInt, Nullable: true},
		{Name: "product_id", Type: field.TypeInt, Nullable: true},
		{Name: "supplier_product_id", Type: field.TypeString, Nullable: true, Size: 32},
		{Name: "product_feature_id", Type: field.TypeInt, Nullable: true},
		{Name: "prod_catalog_id", Type: field.TypeInt, Nullable: true},
		{Name: "product_category_id", Type: field.TypeInt, Nullable: true},
		{Name: "is_promo", Type: field.TypeEnum, Nullable: true, Enums: []string{"Y", "N", "-"}},
		{Name: "quote_id", Type: field.TypeInt, Nullable: true},
		{Name: "quote_item_seq_id", Type: field.TypeInt, Nullable: true},
		{Name: "shopping_list_id", Type: field.TypeInt, Nullable: true},
		{Name: "shopping_list_item_seq_id", Type: field.TypeInt, Nullable: true},
		{Name: "subscription_id", Type: field.TypeInt, Nullable: true},
		{Name: "deployment_id", Type: field.TypeInt, Nullable: true},
		{Name: "quantity", Type: field.TypeFloat64, Nullable: true},
		{Name: "cancel_quantity", Type: field.TypeFloat64, Nullable: true},
		{Name: "selected_amount", Type: field.TypeFloat64, Nullable: true},
		{Name: "unit_price", Type: field.TypeFloat64, Nullable: true},
		{Name: "unit_list_price", Type: field.TypeFloat64, Nullable: true},
		{Name: "unit_average_cost", Type: field.TypeFloat64, Nullable: true},
		{Name: "unit_recurring_price", Type: field.TypeFloat64, Nullable: true},
		{Name: "is_modified_price", Type: field.TypeEnum, Nullable: true, Enums: []string{"Y", "N", "-"}},
		{Name: "recurring_freq_uom_id", Type: field.TypeInt, Nullable: true},
		{Name: "item_description", Type: field.TypeString, Nullable: true},
		{Name: "comments", Type: field.TypeString, Nullable: true},
		{Name: "corresponding_po_id", Type: field.TypeInt, Nullable: true},
		{Name: "status_id", Type: field.TypeInt, Nullable: true},
		{Name: "sync_status_id", Type: field.TypeInt, Nullable: true},
		{Name: "estimated_ship_date", Type: field.TypeTime, Nullable: true},
		{Name: "estimated_delivery_date", Type: field.TypeTime, Nullable: true},
		{Name: "auto_cancel_date", Type: field.TypeTime, Nullable: true},
		{Name: "dont_cancel_set_date", Type: field.TypeTime, Nullable: true},
		{Name: "dont_cancel_set_user_login", Type: field.TypeString, Nullable: true},
		{Name: "ship_before_date", Type: field.TypeTime, Nullable: true},
		{Name: "ship_after_date", Type: field.TypeTime, Nullable: true},
		{Name: "reserve_after_date", Type: field.TypeTime, Nullable: true},
		{Name: "cancel_back_order_date", Type: field.TypeTime, Nullable: true},
		{Name: "override_gl_account_id", Type: field.TypeInt, Nullable: true},
		{Name: "sales_opportunity_id", Type: field.TypeInt, Nullable: true},
		{Name: "change_by_user_login_id", Type: field.TypeString, Nullable: true},
		{Name: "order_header_order_items", Type: field.TypeInt, Nullable: true},
		{Name: "order_role_order_items", Type: field.TypeInt, Nullable: true},
	}
	// OrderItemsTable holds the schema information for the "order_items" table.
	OrderItemsTable = &schema.Table{
		Name:       "order_items",
		Columns:    OrderItemsColumns,
		PrimaryKey: []*schema.Column{OrderItemsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "order_items_order_headers_order_items",
				Columns:    []*schema.Column{OrderItemsColumns[49]},
				RefColumns: []*schema.Column{OrderHeadersColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "order_items_order_roles_order_items",
				Columns:    []*schema.Column{OrderItemsColumns[50]},
				RefColumns: []*schema.Column{OrderRolesColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// OrderItemPriceInfosColumns holds the columns for the "order_item_price_infos" table.
	OrderItemPriceInfosColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "create_time", Type: field.TypeTime},
		{Name: "update_time", Type: field.TypeTime},
		{Name: "order_item_seq_id", Type: field.TypeInt, Nullable: true},
		{Name: "product_price_rule_id", Type: field.TypeInt, Nullable: true},
		{Name: "product_price_action_seq_id", Type: field.TypeInt, Nullable: true},
		{Name: "modify_amount", Type: field.TypeFloat64, Nullable: true},
		{Name: "description", Type: field.TypeString, Nullable: true},
		{Name: "rate_code", Type: field.TypeString, Nullable: true},
		{Name: "order_header_order_item_price_infos", Type: field.TypeInt, Nullable: true},
		{Name: "order_item_order_item_price_infos", Type: field.TypeInt, Nullable: true},
	}
	// OrderItemPriceInfosTable holds the schema information for the "order_item_price_infos" table.
	OrderItemPriceInfosTable = &schema.Table{
		Name:       "order_item_price_infos",
		Columns:    OrderItemPriceInfosColumns,
		PrimaryKey: []*schema.Column{OrderItemPriceInfosColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "order_item_price_infos_order_headers_order_item_price_infos",
				Columns:    []*schema.Column{OrderItemPriceInfosColumns[9]},
				RefColumns: []*schema.Column{OrderHeadersColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "order_item_price_infos_order_items_order_item_price_infos",
				Columns:    []*schema.Column{OrderItemPriceInfosColumns[10]},
				RefColumns: []*schema.Column{OrderItemsColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// OrderItemShipGroupsColumns holds the columns for the "order_item_ship_groups" table.
	OrderItemShipGroupsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "create_time", Type: field.TypeTime},
		{Name: "update_time", Type: field.TypeTime},
		{Name: "ship_group_seq_id", Type: field.TypeInt},
		{Name: "shipment_method_type_id", Type: field.TypeInt, Nullable: true},
		{Name: "supplier_party_id", Type: field.TypeInt, Nullable: true},
		{Name: "supplier_agreement_id", Type: field.TypeInt, Nullable: true},
		{Name: "vendor_party_id", Type: field.TypeInt, Nullable: true},
		{Name: "carrier_party_id", Type: field.TypeInt, Nullable: true},
		{Name: "carrier_role_type_id", Type: field.TypeInt, Nullable: true},
		{Name: "facility_id", Type: field.TypeInt, Nullable: true},
		{Name: "contact_mech_id", Type: field.TypeInt, Nullable: true},
		{Name: "telecom_contact_mech_id", Type: field.TypeInt, Nullable: true},
		{Name: "tracking_number", Type: field.TypeString, Nullable: true},
		{Name: "shipping_instructions", Type: field.TypeString, Nullable: true},
		{Name: "may_split", Type: field.TypeEnum, Nullable: true, Enums: []string{"Y", "N", "-"}},
		{Name: "gift_message", Type: field.TypeString, Nullable: true},
		{Name: "is_gift", Type: field.TypeEnum, Nullable: true, Enums: []string{"Y", "N", "-"}},
		{Name: "ship_after_date", Type: field.TypeTime, Nullable: true},
		{Name: "ship_by_date", Type: field.TypeTime, Nullable: true},
		{Name: "estimated_ship_date", Type: field.TypeTime, Nullable: true},
		{Name: "estimated_delivery_date", Type: field.TypeTime, Nullable: true},
		{Name: "order_header_order_item_ship_groups", Type: field.TypeInt, Nullable: true},
	}
	// OrderItemShipGroupsTable holds the schema information for the "order_item_ship_groups" table.
	OrderItemShipGroupsTable = &schema.Table{
		Name:       "order_item_ship_groups",
		Columns:    OrderItemShipGroupsColumns,
		PrimaryKey: []*schema.Column{OrderItemShipGroupsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "order_item_ship_groups_order_headers_order_item_ship_groups",
				Columns:    []*schema.Column{OrderItemShipGroupsColumns[22]},
				RefColumns: []*schema.Column{OrderHeadersColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// OrderItemShipGroupAssocsColumns holds the columns for the "order_item_ship_group_assocs" table.
	OrderItemShipGroupAssocsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "create_time", Type: field.TypeTime},
		{Name: "update_time", Type: field.TypeTime},
		{Name: "order_item_seq_id", Type: field.TypeInt},
		{Name: "ship_group_seq_id", Type: field.TypeInt},
		{Name: "quantity", Type: field.TypeFloat64, Nullable: true},
		{Name: "cancel_quantity", Type: field.TypeFloat64, Nullable: true},
		{Name: "order_header_order_item_ship_group_assocs", Type: field.TypeInt, Nullable: true},
		{Name: "order_item_order_item_ship_group_assocs", Type: field.TypeInt, Nullable: true},
		{Name: "order_item_ship_group_order_item_ship_group_assocs", Type: field.TypeInt, Nullable: true},
	}
	// OrderItemShipGroupAssocsTable holds the schema information for the "order_item_ship_group_assocs" table.
	OrderItemShipGroupAssocsTable = &schema.Table{
		Name:       "order_item_ship_group_assocs",
		Columns:    OrderItemShipGroupAssocsColumns,
		PrimaryKey: []*schema.Column{OrderItemShipGroupAssocsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "order_item_ship_group_assocs_order_headers_order_item_ship_group_assocs",
				Columns:    []*schema.Column{OrderItemShipGroupAssocsColumns[7]},
				RefColumns: []*schema.Column{OrderHeadersColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "order_item_ship_group_assocs_order_items_order_item_ship_group_assocs",
				Columns:    []*schema.Column{OrderItemShipGroupAssocsColumns[8]},
				RefColumns: []*schema.Column{OrderItemsColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "order_item_ship_group_assocs_order_item_ship_groups_order_item_ship_group_assocs",
				Columns:    []*schema.Column{OrderItemShipGroupAssocsColumns[9]},
				RefColumns: []*schema.Column{OrderItemShipGroupsColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// OrderRolesColumns holds the columns for the "order_roles" table.
	OrderRolesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "create_time", Type: field.TypeTime},
		{Name: "update_time", Type: field.TypeTime},
		{Name: "party_id", Type: field.TypeInt},
		{Name: "role_type_id", Type: field.TypeInt},
		{Name: "order_header_order_roles", Type: field.TypeInt, Nullable: true},
	}
	// OrderRolesTable holds the schema information for the "order_roles" table.
	OrderRolesTable = &schema.Table{
		Name:       "order_roles",
		Columns:    OrderRolesColumns,
		PrimaryKey: []*schema.Column{OrderRolesColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "order_roles_order_headers_order_roles",
				Columns:    []*schema.Column{OrderRolesColumns[5]},
				RefColumns: []*schema.Column{OrderHeadersColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// OrderStatusColumns holds the columns for the "order_status" table.
	OrderStatusColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "create_time", Type: field.TypeTime},
		{Name: "update_time", Type: field.TypeTime},
		{Name: "status_id", Type: field.TypeInt, Nullable: true},
		{Name: "order_item_seq_id", Type: field.TypeInt, Nullable: true},
		{Name: "order_payment_preference_id", Type: field.TypeInt, Nullable: true},
		{Name: "status_datetime", Type: field.TypeTime, Nullable: true},
		{Name: "status_user_login", Type: field.TypeString, Nullable: true},
		{Name: "change_reason", Type: field.TypeString, Nullable: true},
		{Name: "order_header_order_statuses", Type: field.TypeInt, Nullable: true},
		{Name: "order_item_order_statuses", Type: field.TypeInt, Nullable: true},
	}
	// OrderStatusTable holds the schema information for the "order_status" table.
	OrderStatusTable = &schema.Table{
		Name:       "order_status",
		Columns:    OrderStatusColumns,
		PrimaryKey: []*schema.Column{OrderStatusColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "order_status_order_headers_order_statuses",
				Columns:    []*schema.Column{OrderStatusColumns[9]},
				RefColumns: []*schema.Column{OrderHeadersColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "order_status_order_items_order_statuses",
				Columns:    []*schema.Column{OrderStatusColumns[10]},
				RefColumns: []*schema.Column{OrderItemsColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// PaymentsColumns holds the columns for the "payments" table.
	PaymentsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "create_time", Type: field.TypeTime},
		{Name: "update_time", Type: field.TypeTime},
		{Name: "payment_type_id", Type: field.TypeInt, Nullable: true},
		{Name: "payment_method_type_id", Type: field.TypeInt, Nullable: true},
		{Name: "payment_method_id", Type: field.TypeInt, Nullable: true},
		{Name: "payment_gateway_response_id", Type: field.TypeInt, Nullable: true},
		{Name: "payment_preference_id", Type: field.TypeInt, Nullable: true},
		{Name: "party_id_from", Type: field.TypeInt, Nullable: true},
		{Name: "party_id_to", Type: field.TypeInt, Nullable: true},
		{Name: "role_type_id_to", Type: field.TypeInt, Nullable: true},
		{Name: "status_id", Type: field.TypeInt, Nullable: true},
		{Name: "effective_date", Type: field.TypeTime, Nullable: true},
		{Name: "payment_ref_num", Type: field.TypeString, Nullable: true},
		{Name: "amount", Type: field.TypeFloat64, Nullable: true},
		{Name: "currency_uom_id", Type: field.TypeInt, Nullable: true},
		{Name: "comments", Type: field.TypeString, Nullable: true},
		{Name: "fin_account_trans_id", Type: field.TypeInt, Nullable: true},
		{Name: "override_gl_account_id", Type: field.TypeInt, Nullable: true},
		{Name: "actual_currency_amount", Type: field.TypeFloat64, Nullable: true},
		{Name: "actual_currency_uom_id", Type: field.TypeInt, Nullable: true},
	}
	// PaymentsTable holds the schema information for the "payments" table.
	PaymentsTable = &schema.Table{
		Name:        "payments",
		Columns:     PaymentsColumns,
		PrimaryKey:  []*schema.Column{PaymentsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{},
	}
	// ShipmentsColumns holds the columns for the "shipments" table.
	ShipmentsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "create_time", Type: field.TypeTime},
		{Name: "update_time", Type: field.TypeTime},
		{Name: "shipment_type_id", Type: field.TypeInt, Nullable: true},
		{Name: "status_id", Type: field.TypeInt, Nullable: true},
		{Name: "primary_return_id", Type: field.TypeInt, Nullable: true},
		{Name: "primary_ship_group_seq_id", Type: field.TypeInt, Nullable: true},
		{Name: "picklist_bin_id", Type: field.TypeInt, Nullable: true},
		{Name: "estimated_ready_date", Type: field.TypeTime, Nullable: true},
		{Name: "estimated_ship_date", Type: field.TypeTime, Nullable: true},
		{Name: "estimated_ship_work_eff_id", Type: field.TypeInt, Nullable: true},
		{Name: "estimated_arrival_date", Type: field.TypeTime, Nullable: true},
		{Name: "estimated_arrival_work_eff_id", Type: field.TypeInt, Nullable: true},
		{Name: "latest_cancel_date", Type: field.TypeTime, Nullable: true},
		{Name: "estimated_ship_cost", Type: field.TypeFloat64, Nullable: true},
		{Name: "currency_uom_id", Type: field.TypeInt, Nullable: true},
		{Name: "handling_instructions", Type: field.TypeString, Nullable: true},
		{Name: "origin_facility_id", Type: field.TypeInt, Nullable: true},
		{Name: "destination_facility_id", Type: field.TypeInt, Nullable: true},
		{Name: "origin_contact_mech_id", Type: field.TypeInt, Nullable: true},
		{Name: "origin_telecom_number_id", Type: field.TypeInt, Nullable: true},
		{Name: "destination_contact_mech_id", Type: field.TypeInt, Nullable: true},
		{Name: "destination_telecom_number_id", Type: field.TypeInt, Nullable: true},
		{Name: "party_id_to", Type: field.TypeInt, Nullable: true},
		{Name: "party_id_from", Type: field.TypeInt, Nullable: true},
		{Name: "additional_shipping_charge", Type: field.TypeFloat64, Nullable: true},
		{Name: "addtl_shipping_charge_desc", Type: field.TypeString, Nullable: true},
		{Name: "created_date", Type: field.TypeTime, Nullable: true},
		{Name: "created_by_user_login", Type: field.TypeString, Nullable: true},
		{Name: "last_modified_date", Type: field.TypeTime, Nullable: true},
		{Name: "last_modified_by_user_login", Type: field.TypeString, Nullable: true},
		{Name: "order_header_primary_shipments", Type: field.TypeInt, Nullable: true},
		{Name: "order_item_ship_group_primary_shipments", Type: field.TypeInt, Nullable: true},
	}
	// ShipmentsTable holds the schema information for the "shipments" table.
	ShipmentsTable = &schema.Table{
		Name:       "shipments",
		Columns:    ShipmentsColumns,
		PrimaryKey: []*schema.Column{ShipmentsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "shipments_order_headers_primary_shipments",
				Columns:    []*schema.Column{ShipmentsColumns[31]},
				RefColumns: []*schema.Column{OrderHeadersColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "shipments_order_item_ship_groups_primary_shipments",
				Columns:    []*schema.Column{ShipmentsColumns[32]},
				RefColumns: []*schema.Column{OrderItemShipGroupsColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// ShipmentItemsColumns holds the columns for the "shipment_items" table.
	ShipmentItemsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "create_time", Type: field.TypeTime},
		{Name: "update_time", Type: field.TypeTime},
		{Name: "shipment_item_seq_id", Type: field.TypeInt},
		{Name: "product_id", Type: field.TypeInt, Nullable: true},
		{Name: "quantity", Type: field.TypeFloat64, Nullable: true},
		{Name: "shipment_content_description", Type: field.TypeString, Nullable: true},
		{Name: "shipment_shipment_items", Type: field.TypeInt, Nullable: true},
	}
	// ShipmentItemsTable holds the schema information for the "shipment_items" table.
	ShipmentItemsTable = &schema.Table{
		Name:       "shipment_items",
		Columns:    ShipmentItemsColumns,
		PrimaryKey: []*schema.Column{ShipmentItemsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "shipment_items_shipments_shipment_items",
				Columns:    []*schema.Column{ShipmentItemsColumns[7]},
				RefColumns: []*schema.Column{ShipmentsColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// Tables holds all the tables in the schema.
	Tables = []*schema.Table{
		ItemIssuancesTable,
		OrderContactMechesTable,
		OrderHeadersTable,
		OrderItemsTable,
		OrderItemPriceInfosTable,
		OrderItemShipGroupsTable,
		OrderItemShipGroupAssocsTable,
		OrderRolesTable,
		OrderStatusTable,
		PaymentsTable,
		ShipmentsTable,
		ShipmentItemsTable,
	}
)

func init() {
	ItemIssuancesTable.ForeignKeys[0].RefTable = OrderHeadersTable
	ItemIssuancesTable.ForeignKeys[1].RefTable = OrderItemsTable
	ItemIssuancesTable.ForeignKeys[2].RefTable = ShipmentsTable
	ItemIssuancesTable.ForeignKeys[3].RefTable = ShipmentItemsTable
	OrderContactMechesTable.ForeignKeys[0].RefTable = OrderHeadersTable
	OrderItemsTable.ForeignKeys[0].RefTable = OrderHeadersTable
	OrderItemsTable.ForeignKeys[1].RefTable = OrderRolesTable
	OrderItemPriceInfosTable.ForeignKeys[0].RefTable = OrderHeadersTable
	OrderItemPriceInfosTable.ForeignKeys[1].RefTable = OrderItemsTable
	OrderItemShipGroupsTable.ForeignKeys[0].RefTable = OrderHeadersTable
	OrderItemShipGroupAssocsTable.ForeignKeys[0].RefTable = OrderHeadersTable
	OrderItemShipGroupAssocsTable.ForeignKeys[1].RefTable = OrderItemsTable
	OrderItemShipGroupAssocsTable.ForeignKeys[2].RefTable = OrderItemShipGroupsTable
	OrderRolesTable.ForeignKeys[0].RefTable = OrderHeadersTable
	OrderStatusTable.ForeignKeys[0].RefTable = OrderHeadersTable
	OrderStatusTable.ForeignKeys[1].RefTable = OrderItemsTable
	ShipmentsTable.ForeignKeys[0].RefTable = OrderHeadersTable
	ShipmentsTable.ForeignKeys[1].RefTable = OrderItemShipGroupsTable
	ShipmentItemsTable.ForeignKeys[0].RefTable = ShipmentsTable
}
