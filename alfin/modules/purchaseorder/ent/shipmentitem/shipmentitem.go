// Code generated by entc, DO NOT EDIT.

package shipmentitem

import (
	"time"
)

const (
	// Label holds the string label denoting the shipmentitem type in the database.
	Label = "shipment_item"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldCreateTime holds the string denoting the create_time field in the database.
	FieldCreateTime = "create_time"
	// FieldUpdateTime holds the string denoting the update_time field in the database.
	FieldUpdateTime = "update_time"
	// FieldShipmentItemSeqID holds the string denoting the shipment_item_seq_id field in the database.
	FieldShipmentItemSeqID = "shipment_item_seq_id"
	// FieldProductID holds the string denoting the product_id field in the database.
	FieldProductID = "product_id"
	// FieldQuantity holds the string denoting the quantity field in the database.
	FieldQuantity = "quantity"
	// FieldShipmentContentDescription holds the string denoting the shipment_content_description field in the database.
	FieldShipmentContentDescription = "shipment_content_description"
	// EdgeShipment holds the string denoting the shipment edge name in mutations.
	EdgeShipment = "shipment"
	// EdgeItemIssuances holds the string denoting the item_issuances edge name in mutations.
	EdgeItemIssuances = "item_issuances"
	// Table holds the table name of the shipmentitem in the database.
	Table = "shipment_items"
	// ShipmentTable is the table the holds the shipment relation/edge.
	ShipmentTable = "shipment_items"
	// ShipmentInverseTable is the table name for the Shipment entity.
	// It exists in this package in order to avoid circular dependency with the "shipment" package.
	ShipmentInverseTable = "shipments"
	// ShipmentColumn is the table column denoting the shipment relation/edge.
	ShipmentColumn = "shipment_shipment_items"
	// ItemIssuancesTable is the table the holds the item_issuances relation/edge.
	ItemIssuancesTable = "item_issuances"
	// ItemIssuancesInverseTable is the table name for the ItemIssuance entity.
	// It exists in this package in order to avoid circular dependency with the "itemissuance" package.
	ItemIssuancesInverseTable = "item_issuances"
	// ItemIssuancesColumn is the table column denoting the item_issuances relation/edge.
	ItemIssuancesColumn = "shipment_item_item_issuances"
)

// Columns holds all SQL columns for shipmentitem fields.
var Columns = []string{
	FieldID,
	FieldCreateTime,
	FieldUpdateTime,
	FieldShipmentItemSeqID,
	FieldProductID,
	FieldQuantity,
	FieldShipmentContentDescription,
}

// ForeignKeys holds the SQL foreign-keys that are owned by the "shipment_items"
// table and are not defined as standalone fields in the schema.
var ForeignKeys = []string{
	"shipment_shipment_items",
}

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	for i := range ForeignKeys {
		if column == ForeignKeys[i] {
			return true
		}
	}
	return false
}

var (
	// DefaultCreateTime holds the default value on creation for the "create_time" field.
	DefaultCreateTime func() time.Time
	// DefaultUpdateTime holds the default value on creation for the "update_time" field.
	DefaultUpdateTime func() time.Time
	// UpdateDefaultUpdateTime holds the default value on update for the "update_time" field.
	UpdateDefaultUpdateTime func() time.Time
)
