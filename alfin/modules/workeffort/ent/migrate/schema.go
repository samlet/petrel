// Code generated by entc, DO NOT EDIT.

package migrate

import (
	"entgo.io/ent/dialect/sql/schema"
	"entgo.io/ent/schema/field"
)

var (
	// CommunicationEventPrpTypsColumns holds the columns for the "communication_event_prp_typs" table.
	CommunicationEventPrpTypsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "create_time", Type: field.TypeTime},
		{Name: "update_time", Type: field.TypeTime},
		{Name: "string_ref", Type: field.TypeString, Nullable: true},
		{Name: "has_table", Type: field.TypeEnum, Nullable: true, Enums: []string{"Yes", "No", "Unknown"}},
		{Name: "description", Type: field.TypeString, Nullable: true},
		{Name: "communication_event_prp_typ_children", Type: field.TypeInt, Nullable: true},
	}
	// CommunicationEventPrpTypsTable holds the schema information for the "communication_event_prp_typs" table.
	CommunicationEventPrpTypsTable = &schema.Table{
		Name:       "communication_event_prp_typs",
		Columns:    CommunicationEventPrpTypsColumns,
		PrimaryKey: []*schema.Column{CommunicationEventPrpTypsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "communication_event_prp_typs_communication_event_prp_typs_children",
				Columns:    []*schema.Column{CommunicationEventPrpTypsColumns[6]},
				RefColumns: []*schema.Column{CommunicationEventPrpTypsColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// CommunicationEventTypesColumns holds the columns for the "communication_event_types" table.
	CommunicationEventTypesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "create_time", Type: field.TypeTime},
		{Name: "update_time", Type: field.TypeTime},
		{Name: "string_ref", Type: field.TypeString, Nullable: true},
		{Name: "has_table", Type: field.TypeEnum, Nullable: true, Enums: []string{"Yes", "No", "Unknown"}},
		{Name: "description", Type: field.TypeString, Nullable: true},
		{Name: "communication_event_type_children", Type: field.TypeInt, Nullable: true},
		{Name: "contact_mech_type_contac_mech_type_communication_event_types", Type: field.TypeInt, Nullable: true},
	}
	// CommunicationEventTypesTable holds the schema information for the "communication_event_types" table.
	CommunicationEventTypesTable = &schema.Table{
		Name:       "communication_event_types",
		Columns:    CommunicationEventTypesColumns,
		PrimaryKey: []*schema.Column{CommunicationEventTypesColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "communication_event_types_communication_event_types_children",
				Columns:    []*schema.Column{CommunicationEventTypesColumns[6]},
				RefColumns: []*schema.Column{CommunicationEventTypesColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "communication_event_types_contact_mech_types_contac_mech_type_communication_event_types",
				Columns:    []*schema.Column{CommunicationEventTypesColumns[7]},
				RefColumns: []*schema.Column{ContactMechTypesColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// ContactMechPurposeTypesColumns holds the columns for the "contact_mech_purpose_types" table.
	ContactMechPurposeTypesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "create_time", Type: field.TypeTime},
		{Name: "update_time", Type: field.TypeTime},
		{Name: "string_ref", Type: field.TypeString, Nullable: true},
		{Name: "parent_type_id", Type: field.TypeInt, Nullable: true},
		{Name: "has_table", Type: field.TypeEnum, Nullable: true, Enums: []string{"Yes", "No", "Unknown"}},
		{Name: "description", Type: field.TypeString, Nullable: true},
	}
	// ContactMechPurposeTypesTable holds the schema information for the "contact_mech_purpose_types" table.
	ContactMechPurposeTypesTable = &schema.Table{
		Name:       "contact_mech_purpose_types",
		Columns:    ContactMechPurposeTypesColumns,
		PrimaryKey: []*schema.Column{ContactMechPurposeTypesColumns[0]},
	}
	// ContactMechTypesColumns holds the columns for the "contact_mech_types" table.
	ContactMechTypesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "create_time", Type: field.TypeTime},
		{Name: "update_time", Type: field.TypeTime},
		{Name: "string_ref", Type: field.TypeString, Nullable: true},
		{Name: "has_table", Type: field.TypeEnum, Nullable: true, Enums: []string{"Yes", "No", "Unknown"}},
		{Name: "description", Type: field.TypeString, Nullable: true},
		{Name: "contact_mech_type_children", Type: field.TypeInt, Nullable: true},
	}
	// ContactMechTypesTable holds the schema information for the "contact_mech_types" table.
	ContactMechTypesTable = &schema.Table{
		Name:       "contact_mech_types",
		Columns:    ContactMechTypesColumns,
		PrimaryKey: []*schema.Column{ContactMechTypesColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "contact_mech_types_contact_mech_types_children",
				Columns:    []*schema.Column{ContactMechTypesColumns[6]},
				RefColumns: []*schema.Column{ContactMechTypesColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// ContactMechTypePurposesColumns holds the columns for the "contact_mech_type_purposes" table.
	ContactMechTypePurposesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "create_time", Type: field.TypeTime},
		{Name: "update_time", Type: field.TypeTime},
		{Name: "string_ref", Type: field.TypeString, Nullable: true},
		{Name: "contact_mech_purpose_type_contact_mech_type_purposes", Type: field.TypeInt, Nullable: true},
		{Name: "contact_mech_type_contact_mech_type_purposes", Type: field.TypeInt, Nullable: true},
	}
	// ContactMechTypePurposesTable holds the schema information for the "contact_mech_type_purposes" table.
	ContactMechTypePurposesTable = &schema.Table{
		Name:       "contact_mech_type_purposes",
		Columns:    ContactMechTypePurposesColumns,
		PrimaryKey: []*schema.Column{ContactMechTypePurposesColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "contact_mech_type_purposes_contact_mech_purpose_types_contact_mech_type_purposes",
				Columns:    []*schema.Column{ContactMechTypePurposesColumns[4]},
				RefColumns: []*schema.Column{ContactMechPurposeTypesColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "contact_mech_type_purposes_contact_mech_types_contact_mech_type_purposes",
				Columns:    []*schema.Column{ContactMechTypePurposesColumns[5]},
				RefColumns: []*schema.Column{ContactMechTypesColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// EnumerationsColumns holds the columns for the "enumerations" table.
	EnumerationsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "create_time", Type: field.TypeTime},
		{Name: "update_time", Type: field.TypeTime},
		{Name: "string_ref", Type: field.TypeString, Nullable: true},
		{Name: "enum_code", Type: field.TypeString, Nullable: true},
		{Name: "sequence_id", Type: field.TypeInt, Nullable: true},
		{Name: "description", Type: field.TypeString, Nullable: true},
		{Name: "enumeration_type_enumerations", Type: field.TypeInt, Nullable: true},
	}
	// EnumerationsTable holds the schema information for the "enumerations" table.
	EnumerationsTable = &schema.Table{
		Name:       "enumerations",
		Columns:    EnumerationsColumns,
		PrimaryKey: []*schema.Column{EnumerationsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "enumerations_enumeration_types_enumerations",
				Columns:    []*schema.Column{EnumerationsColumns[7]},
				RefColumns: []*schema.Column{EnumerationTypesColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// EnumerationTypesColumns holds the columns for the "enumeration_types" table.
	EnumerationTypesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "create_time", Type: field.TypeTime},
		{Name: "update_time", Type: field.TypeTime},
		{Name: "string_ref", Type: field.TypeString, Nullable: true},
		{Name: "has_table", Type: field.TypeEnum, Nullable: true, Enums: []string{"Yes", "No", "Unknown"}},
		{Name: "description", Type: field.TypeString, Nullable: true},
		{Name: "enumeration_type_children", Type: field.TypeInt, Nullable: true},
	}
	// EnumerationTypesTable holds the schema information for the "enumeration_types" table.
	EnumerationTypesTable = &schema.Table{
		Name:       "enumeration_types",
		Columns:    EnumerationTypesColumns,
		PrimaryKey: []*schema.Column{EnumerationTypesColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "enumeration_types_enumeration_types_children",
				Columns:    []*schema.Column{EnumerationTypesColumns[6]},
				RefColumns: []*schema.Column{EnumerationTypesColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// FixedAssetsColumns holds the columns for the "fixed_assets" table.
	FixedAssetsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "create_time", Type: field.TypeTime},
		{Name: "update_time", Type: field.TypeTime},
		{Name: "string_ref", Type: field.TypeString, Nullable: true},
		{Name: "fixed_asset_type_id", Type: field.TypeInt, Nullable: true},
		{Name: "instance_of_product_id", Type: field.TypeInt, Nullable: true},
		{Name: "fixed_asset_name", Type: field.TypeString, Nullable: true},
		{Name: "acquire_order_id", Type: field.TypeInt, Nullable: true},
		{Name: "acquire_order_item_seq_id", Type: field.TypeInt, Nullable: true},
		{Name: "date_acquired", Type: field.TypeTime, Nullable: true},
		{Name: "date_last_serviced", Type: field.TypeTime, Nullable: true},
		{Name: "date_next_service", Type: field.TypeTime, Nullable: true},
		{Name: "expected_end_of_life", Type: field.TypeTime, Nullable: true},
		{Name: "actual_end_of_life", Type: field.TypeTime, Nullable: true},
		{Name: "production_capacity", Type: field.TypeFloat64, Nullable: true},
		{Name: "uom_id", Type: field.TypeInt, Nullable: true},
		{Name: "calendar_id", Type: field.TypeInt, Nullable: true},
		{Name: "serial_number", Type: field.TypeString, Nullable: true},
		{Name: "located_at_facility_id", Type: field.TypeInt, Nullable: true},
		{Name: "located_at_location_seq_id", Type: field.TypeInt, Nullable: true},
		{Name: "salvage_value", Type: field.TypeFloat64, Nullable: true},
		{Name: "depreciation", Type: field.TypeFloat64, Nullable: true},
		{Name: "purchase_cost", Type: field.TypeFloat64, Nullable: true},
		{Name: "purchase_cost_uom_id", Type: field.TypeInt, Nullable: true},
		{Name: "enumeration_class_fixed_assets", Type: field.TypeInt, Nullable: true},
		{Name: "fixed_asset_children", Type: field.TypeInt, Nullable: true},
		{Name: "party_fixed_assets", Type: field.TypeInt, Nullable: true},
		{Name: "party_role_fixed_assets", Type: field.TypeInt, Nullable: true},
		{Name: "role_type_fixed_assets", Type: field.TypeInt, Nullable: true},
	}
	// FixedAssetsTable holds the schema information for the "fixed_assets" table.
	FixedAssetsTable = &schema.Table{
		Name:       "fixed_assets",
		Columns:    FixedAssetsColumns,
		PrimaryKey: []*schema.Column{FixedAssetsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "fixed_assets_enumerations_class_fixed_assets",
				Columns:    []*schema.Column{FixedAssetsColumns[24]},
				RefColumns: []*schema.Column{EnumerationsColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "fixed_assets_fixed_assets_children",
				Columns:    []*schema.Column{FixedAssetsColumns[25]},
				RefColumns: []*schema.Column{FixedAssetsColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "fixed_assets_parties_fixed_assets",
				Columns:    []*schema.Column{FixedAssetsColumns[26]},
				RefColumns: []*schema.Column{PartiesColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "fixed_assets_party_roles_fixed_assets",
				Columns:    []*schema.Column{FixedAssetsColumns[27]},
				RefColumns: []*schema.Column{PartyRolesColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "fixed_assets_role_types_fixed_assets",
				Columns:    []*schema.Column{FixedAssetsColumns[28]},
				RefColumns: []*schema.Column{RoleTypesColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// PartiesColumns holds the columns for the "parties" table.
	PartiesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "create_time", Type: field.TypeTime},
		{Name: "update_time", Type: field.TypeTime},
		{Name: "string_ref", Type: field.TypeString, Nullable: true},
		{Name: "external_id", Type: field.TypeInt, Nullable: true},
		{Name: "preferred_currency_uom_id", Type: field.TypeInt, Nullable: true},
		{Name: "description", Type: field.TypeString, Nullable: true},
		{Name: "created_date", Type: field.TypeTime, Nullable: true},
		{Name: "last_modified_date", Type: field.TypeTime, Nullable: true},
		{Name: "data_source_id", Type: field.TypeInt, Nullable: true},
		{Name: "is_unread", Type: field.TypeEnum, Nullable: true, Enums: []string{"Yes", "No", "Unknown"}},
		{Name: "party_type_parties", Type: field.TypeInt, Nullable: true},
		{Name: "status_item_parties", Type: field.TypeInt, Nullable: true},
		{Name: "user_login_created_by_parties", Type: field.TypeInt, Nullable: true},
		{Name: "user_login_last_modified_by_parties", Type: field.TypeInt, Nullable: true},
	}
	// PartiesTable holds the schema information for the "parties" table.
	PartiesTable = &schema.Table{
		Name:       "parties",
		Columns:    PartiesColumns,
		PrimaryKey: []*schema.Column{PartiesColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "parties_party_types_parties",
				Columns:    []*schema.Column{PartiesColumns[11]},
				RefColumns: []*schema.Column{PartyTypesColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "parties_status_items_parties",
				Columns:    []*schema.Column{PartiesColumns[12]},
				RefColumns: []*schema.Column{StatusItemsColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "parties_user_logins_created_by_parties",
				Columns:    []*schema.Column{PartiesColumns[13]},
				RefColumns: []*schema.Column{UserLoginsColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "parties_user_logins_last_modified_by_parties",
				Columns:    []*schema.Column{PartiesColumns[14]},
				RefColumns: []*schema.Column{UserLoginsColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// PartyClassificationTypesColumns holds the columns for the "party_classification_types" table.
	PartyClassificationTypesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "create_time", Type: field.TypeTime},
		{Name: "update_time", Type: field.TypeTime},
		{Name: "string_ref", Type: field.TypeString, Nullable: true},
		{Name: "has_table", Type: field.TypeEnum, Nullable: true, Enums: []string{"Yes", "No", "Unknown"}},
		{Name: "description", Type: field.TypeString, Nullable: true},
		{Name: "party_classification_type_children", Type: field.TypeInt, Nullable: true},
	}
	// PartyClassificationTypesTable holds the schema information for the "party_classification_types" table.
	PartyClassificationTypesTable = &schema.Table{
		Name:       "party_classification_types",
		Columns:    PartyClassificationTypesColumns,
		PrimaryKey: []*schema.Column{PartyClassificationTypesColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "party_classification_types_party_classification_types_children",
				Columns:    []*schema.Column{PartyClassificationTypesColumns[6]},
				RefColumns: []*schema.Column{PartyClassificationTypesColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// PartyContactMechesColumns holds the columns for the "party_contact_meches" table.
	PartyContactMechesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "create_time", Type: field.TypeTime},
		{Name: "update_time", Type: field.TypeTime},
		{Name: "string_ref", Type: field.TypeString, Nullable: true},
		{Name: "contact_mech_id", Type: field.TypeInt},
		{Name: "from_date", Type: field.TypeTime},
		{Name: "thru_date", Type: field.TypeTime, Nullable: true},
		{Name: "allow_solicitation", Type: field.TypeEnum, Nullable: true, Enums: []string{"Yes", "No", "Unknown"}},
		{Name: "extension", Type: field.TypeString, Nullable: true},
		{Name: "verified", Type: field.TypeEnum, Nullable: true, Enums: []string{"Yes", "No", "Unknown"}},
		{Name: "comments", Type: field.TypeString, Nullable: true},
		{Name: "years_with_contact_mech", Type: field.TypeInt, Nullable: true},
		{Name: "months_with_contact_mech", Type: field.TypeInt, Nullable: true},
		{Name: "party_party_contact_meches", Type: field.TypeInt, Nullable: true},
		{Name: "party_role_party_contact_meches", Type: field.TypeInt, Nullable: true},
		{Name: "person_party_contact_meches", Type: field.TypeInt, Nullable: true},
		{Name: "role_type_party_contact_meches", Type: field.TypeInt, Nullable: true},
	}
	// PartyContactMechesTable holds the schema information for the "party_contact_meches" table.
	PartyContactMechesTable = &schema.Table{
		Name:       "party_contact_meches",
		Columns:    PartyContactMechesColumns,
		PrimaryKey: []*schema.Column{PartyContactMechesColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "party_contact_meches_parties_party_contact_meches",
				Columns:    []*schema.Column{PartyContactMechesColumns[13]},
				RefColumns: []*schema.Column{PartiesColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "party_contact_meches_party_roles_party_contact_meches",
				Columns:    []*schema.Column{PartyContactMechesColumns[14]},
				RefColumns: []*schema.Column{PartyRolesColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "party_contact_meches_persons_party_contact_meches",
				Columns:    []*schema.Column{PartyContactMechesColumns[15]},
				RefColumns: []*schema.Column{PersonsColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "party_contact_meches_role_types_party_contact_meches",
				Columns:    []*schema.Column{PartyContactMechesColumns[16]},
				RefColumns: []*schema.Column{RoleTypesColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// PartyContentTypesColumns holds the columns for the "party_content_types" table.
	PartyContentTypesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "create_time", Type: field.TypeTime},
		{Name: "update_time", Type: field.TypeTime},
		{Name: "string_ref", Type: field.TypeString, Nullable: true},
		{Name: "description", Type: field.TypeString, Nullable: true},
		{Name: "party_content_type_children", Type: field.TypeInt, Nullable: true},
	}
	// PartyContentTypesTable holds the schema information for the "party_content_types" table.
	PartyContentTypesTable = &schema.Table{
		Name:       "party_content_types",
		Columns:    PartyContentTypesColumns,
		PrimaryKey: []*schema.Column{PartyContentTypesColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "party_content_types_party_content_types_children",
				Columns:    []*schema.Column{PartyContentTypesColumns[5]},
				RefColumns: []*schema.Column{PartyContentTypesColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// PartyIdentificationTypesColumns holds the columns for the "party_identification_types" table.
	PartyIdentificationTypesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "create_time", Type: field.TypeTime},
		{Name: "update_time", Type: field.TypeTime},
		{Name: "string_ref", Type: field.TypeString, Nullable: true},
		{Name: "has_table", Type: field.TypeEnum, Nullable: true, Enums: []string{"Yes", "No", "Unknown"}},
		{Name: "description", Type: field.TypeString, Nullable: true},
		{Name: "party_identification_type_children", Type: field.TypeInt, Nullable: true},
	}
	// PartyIdentificationTypesTable holds the schema information for the "party_identification_types" table.
	PartyIdentificationTypesTable = &schema.Table{
		Name:       "party_identification_types",
		Columns:    PartyIdentificationTypesColumns,
		PrimaryKey: []*schema.Column{PartyIdentificationTypesColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "party_identification_types_party_identification_types_children",
				Columns:    []*schema.Column{PartyIdentificationTypesColumns[6]},
				RefColumns: []*schema.Column{PartyIdentificationTypesColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// PartyQualTypesColumns holds the columns for the "party_qual_types" table.
	PartyQualTypesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "create_time", Type: field.TypeTime},
		{Name: "update_time", Type: field.TypeTime},
		{Name: "string_ref", Type: field.TypeString, Nullable: true},
		{Name: "has_table", Type: field.TypeEnum, Nullable: true, Enums: []string{"Yes", "No", "Unknown"}},
		{Name: "description", Type: field.TypeString, Nullable: true},
		{Name: "party_qual_type_children", Type: field.TypeInt, Nullable: true},
	}
	// PartyQualTypesTable holds the schema information for the "party_qual_types" table.
	PartyQualTypesTable = &schema.Table{
		Name:       "party_qual_types",
		Columns:    PartyQualTypesColumns,
		PrimaryKey: []*schema.Column{PartyQualTypesColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "party_qual_types_party_qual_types_children",
				Columns:    []*schema.Column{PartyQualTypesColumns[6]},
				RefColumns: []*schema.Column{PartyQualTypesColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// PartyRelationshipTypesColumns holds the columns for the "party_relationship_types" table.
	PartyRelationshipTypesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "create_time", Type: field.TypeTime},
		{Name: "update_time", Type: field.TypeTime},
		{Name: "string_ref", Type: field.TypeString, Nullable: true},
		{Name: "has_table", Type: field.TypeEnum, Nullable: true, Enums: []string{"Yes", "No", "Unknown"}},
		{Name: "party_relationship_name", Type: field.TypeString, Nullable: true},
		{Name: "description", Type: field.TypeString, Nullable: true},
		{Name: "party_relationship_type_children", Type: field.TypeInt, Nullable: true},
		{Name: "role_type_valid_from_party_relationship_types", Type: field.TypeInt, Nullable: true},
		{Name: "role_type_valid_to_party_relationship_types", Type: field.TypeInt, Nullable: true},
	}
	// PartyRelationshipTypesTable holds the schema information for the "party_relationship_types" table.
	PartyRelationshipTypesTable = &schema.Table{
		Name:       "party_relationship_types",
		Columns:    PartyRelationshipTypesColumns,
		PrimaryKey: []*schema.Column{PartyRelationshipTypesColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "party_relationship_types_party_relationship_types_children",
				Columns:    []*schema.Column{PartyRelationshipTypesColumns[7]},
				RefColumns: []*schema.Column{PartyRelationshipTypesColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "party_relationship_types_role_types_valid_from_party_relationship_types",
				Columns:    []*schema.Column{PartyRelationshipTypesColumns[8]},
				RefColumns: []*schema.Column{RoleTypesColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "party_relationship_types_role_types_valid_to_party_relationship_types",
				Columns:    []*schema.Column{PartyRelationshipTypesColumns[9]},
				RefColumns: []*schema.Column{RoleTypesColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// PartyRolesColumns holds the columns for the "party_roles" table.
	PartyRolesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "create_time", Type: field.TypeTime},
		{Name: "update_time", Type: field.TypeTime},
		{Name: "string_ref", Type: field.TypeString, Nullable: true},
		{Name: "party_party_roles", Type: field.TypeInt, Nullable: true},
		{Name: "role_type_party_roles", Type: field.TypeInt, Nullable: true},
	}
	// PartyRolesTable holds the schema information for the "party_roles" table.
	PartyRolesTable = &schema.Table{
		Name:       "party_roles",
		Columns:    PartyRolesColumns,
		PrimaryKey: []*schema.Column{PartyRolesColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "party_roles_parties_party_roles",
				Columns:    []*schema.Column{PartyRolesColumns[4]},
				RefColumns: []*schema.Column{PartiesColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "party_roles_role_types_party_roles",
				Columns:    []*schema.Column{PartyRolesColumns[5]},
				RefColumns: []*schema.Column{RoleTypesColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// PartyStatusColumns holds the columns for the "party_status" table.
	PartyStatusColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "create_time", Type: field.TypeTime},
		{Name: "update_time", Type: field.TypeTime},
		{Name: "string_ref", Type: field.TypeString, Nullable: true},
		{Name: "status_date", Type: field.TypeTime},
		{Name: "party_party_statuses", Type: field.TypeInt, Nullable: true},
		{Name: "status_item_party_statuses", Type: field.TypeInt, Nullable: true},
		{Name: "user_login_change_by_party_statuses", Type: field.TypeInt, Nullable: true},
	}
	// PartyStatusTable holds the schema information for the "party_status" table.
	PartyStatusTable = &schema.Table{
		Name:       "party_status",
		Columns:    PartyStatusColumns,
		PrimaryKey: []*schema.Column{PartyStatusColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "party_status_parties_party_statuses",
				Columns:    []*schema.Column{PartyStatusColumns[5]},
				RefColumns: []*schema.Column{PartiesColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "party_status_status_items_party_statuses",
				Columns:    []*schema.Column{PartyStatusColumns[6]},
				RefColumns: []*schema.Column{StatusItemsColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "party_status_user_logins_change_by_party_statuses",
				Columns:    []*schema.Column{PartyStatusColumns[7]},
				RefColumns: []*schema.Column{UserLoginsColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// PartyTypesColumns holds the columns for the "party_types" table.
	PartyTypesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "create_time", Type: field.TypeTime},
		{Name: "update_time", Type: field.TypeTime},
		{Name: "string_ref", Type: field.TypeString, Nullable: true},
		{Name: "has_table", Type: field.TypeEnum, Nullable: true, Enums: []string{"Yes", "No", "Unknown"}},
		{Name: "description", Type: field.TypeString, Nullable: true},
		{Name: "party_type_children", Type: field.TypeInt, Nullable: true},
	}
	// PartyTypesTable holds the schema information for the "party_types" table.
	PartyTypesTable = &schema.Table{
		Name:       "party_types",
		Columns:    PartyTypesColumns,
		PrimaryKey: []*schema.Column{PartyTypesColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "party_types_party_types_children",
				Columns:    []*schema.Column{PartyTypesColumns[6]},
				RefColumns: []*schema.Column{PartyTypesColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// PersonsColumns holds the columns for the "persons" table.
	PersonsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "create_time", Type: field.TypeTime},
		{Name: "update_time", Type: field.TypeTime},
		{Name: "string_ref", Type: field.TypeString, Nullable: true},
		{Name: "salutation", Type: field.TypeString, Nullable: true},
		{Name: "first_name", Type: field.TypeString, Nullable: true},
		{Name: "middle_name", Type: field.TypeString, Nullable: true},
		{Name: "last_name", Type: field.TypeString, Nullable: true},
		{Name: "personal_title", Type: field.TypeString, Nullable: true},
		{Name: "suffix", Type: field.TypeString, Nullable: true},
		{Name: "nickname", Type: field.TypeString, Nullable: true},
		{Name: "first_name_local", Type: field.TypeString, Nullable: true},
		{Name: "middle_name_local", Type: field.TypeString, Nullable: true},
		{Name: "last_name_local", Type: field.TypeString, Nullable: true},
		{Name: "other_local", Type: field.TypeString, Nullable: true},
		{Name: "member_id", Type: field.TypeInt, Nullable: true},
		{Name: "gender", Type: field.TypeEnum, Nullable: true, Enums: []string{"Yes", "No", "Unknown"}},
		{Name: "birth_date", Type: field.TypeTime, Nullable: true},
		{Name: "deceased_date", Type: field.TypeTime, Nullable: true},
		{Name: "height", Type: field.TypeFloat64, Nullable: true},
		{Name: "weight", Type: field.TypeFloat64, Nullable: true},
		{Name: "mothers_maiden_name", Type: field.TypeString, Nullable: true},
		{Name: "old_marital_status", Type: field.TypeEnum, Nullable: true, Enums: []string{"Yes", "No", "Unknown"}},
		{Name: "social_security_number", Type: field.TypeString, Nullable: true},
		{Name: "passport_number", Type: field.TypeString, Nullable: true},
		{Name: "passport_expire_date", Type: field.TypeTime, Nullable: true},
		{Name: "total_years_work_experience", Type: field.TypeFloat64, Nullable: true},
		{Name: "comments", Type: field.TypeString, Nullable: true},
		{Name: "occupation", Type: field.TypeString, Nullable: true},
		{Name: "years_with_employer", Type: field.TypeInt, Nullable: true},
		{Name: "months_with_employer", Type: field.TypeInt, Nullable: true},
		{Name: "existing_customer", Type: field.TypeEnum, Nullable: true, Enums: []string{"Yes", "No", "Unknown"}},
		{Name: "card_id", Type: field.TypeString, Nullable: true, Size: 32},
		{Name: "enumeration_employment_status_people", Type: field.TypeInt, Nullable: true},
		{Name: "enumeration_residence_status_people", Type: field.TypeInt, Nullable: true},
		{Name: "enumeration_marital_status_people", Type: field.TypeInt, Nullable: true},
		{Name: "party_person", Type: field.TypeInt, Unique: true, Nullable: true},
	}
	// PersonsTable holds the schema information for the "persons" table.
	PersonsTable = &schema.Table{
		Name:       "persons",
		Columns:    PersonsColumns,
		PrimaryKey: []*schema.Column{PersonsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "persons_enumerations_employment_status_people",
				Columns:    []*schema.Column{PersonsColumns[33]},
				RefColumns: []*schema.Column{EnumerationsColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "persons_enumerations_residence_status_people",
				Columns:    []*schema.Column{PersonsColumns[34]},
				RefColumns: []*schema.Column{EnumerationsColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "persons_enumerations_marital_status_people",
				Columns:    []*schema.Column{PersonsColumns[35]},
				RefColumns: []*schema.Column{EnumerationsColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "persons_parties_person",
				Columns:    []*schema.Column{PersonsColumns[36]},
				RefColumns: []*schema.Column{PartiesColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// RoleTypesColumns holds the columns for the "role_types" table.
	RoleTypesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "create_time", Type: field.TypeTime},
		{Name: "update_time", Type: field.TypeTime},
		{Name: "string_ref", Type: field.TypeString, Nullable: true},
		{Name: "has_table", Type: field.TypeEnum, Nullable: true, Enums: []string{"Yes", "No", "Unknown"}},
		{Name: "description", Type: field.TypeString, Nullable: true},
		{Name: "role_type_children", Type: field.TypeInt, Nullable: true},
	}
	// RoleTypesTable holds the schema information for the "role_types" table.
	RoleTypesTable = &schema.Table{
		Name:       "role_types",
		Columns:    RoleTypesColumns,
		PrimaryKey: []*schema.Column{RoleTypesColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "role_types_role_types_children",
				Columns:    []*schema.Column{RoleTypesColumns[6]},
				RefColumns: []*schema.Column{RoleTypesColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// SecurityGroupsColumns holds the columns for the "security_groups" table.
	SecurityGroupsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "create_time", Type: field.TypeTime},
		{Name: "update_time", Type: field.TypeTime},
		{Name: "string_ref", Type: field.TypeString, Nullable: true},
		{Name: "group_name", Type: field.TypeString, Nullable: true},
		{Name: "description", Type: field.TypeString, Nullable: true},
	}
	// SecurityGroupsTable holds the schema information for the "security_groups" table.
	SecurityGroupsTable = &schema.Table{
		Name:       "security_groups",
		Columns:    SecurityGroupsColumns,
		PrimaryKey: []*schema.Column{SecurityGroupsColumns[0]},
	}
	// SecurityGroupPermissionsColumns holds the columns for the "security_group_permissions" table.
	SecurityGroupPermissionsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "create_time", Type: field.TypeTime},
		{Name: "update_time", Type: field.TypeTime},
		{Name: "string_ref", Type: field.TypeString, Nullable: true},
		{Name: "from_date", Type: field.TypeTime},
		{Name: "thru_date", Type: field.TypeTime, Nullable: true},
		{Name: "security_group_security_group_permissions", Type: field.TypeInt, Nullable: true},
		{Name: "security_permission_security_group_permissions", Type: field.TypeInt, Nullable: true},
		{Name: "user_login_security_group_security_group_permissions", Type: field.TypeInt, Nullable: true},
	}
	// SecurityGroupPermissionsTable holds the schema information for the "security_group_permissions" table.
	SecurityGroupPermissionsTable = &schema.Table{
		Name:       "security_group_permissions",
		Columns:    SecurityGroupPermissionsColumns,
		PrimaryKey: []*schema.Column{SecurityGroupPermissionsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "security_group_permissions_security_groups_security_group_permissions",
				Columns:    []*schema.Column{SecurityGroupPermissionsColumns[6]},
				RefColumns: []*schema.Column{SecurityGroupsColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "security_group_permissions_security_permissions_security_group_permissions",
				Columns:    []*schema.Column{SecurityGroupPermissionsColumns[7]},
				RefColumns: []*schema.Column{SecurityPermissionsColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "security_group_permissions_user_login_security_groups_security_group_permissions",
				Columns:    []*schema.Column{SecurityGroupPermissionsColumns[8]},
				RefColumns: []*schema.Column{UserLoginSecurityGroupsColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// SecurityPermissionsColumns holds the columns for the "security_permissions" table.
	SecurityPermissionsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "create_time", Type: field.TypeTime},
		{Name: "update_time", Type: field.TypeTime},
		{Name: "string_ref", Type: field.TypeString, Nullable: true},
		{Name: "description", Type: field.TypeString, Nullable: true},
	}
	// SecurityPermissionsTable holds the schema information for the "security_permissions" table.
	SecurityPermissionsTable = &schema.Table{
		Name:       "security_permissions",
		Columns:    SecurityPermissionsColumns,
		PrimaryKey: []*schema.Column{SecurityPermissionsColumns[0]},
	}
	// SkillTypesColumns holds the columns for the "skill_types" table.
	SkillTypesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "create_time", Type: field.TypeTime},
		{Name: "update_time", Type: field.TypeTime},
		{Name: "string_ref", Type: field.TypeString, Nullable: true},
		{Name: "has_table", Type: field.TypeEnum, Nullable: true, Enums: []string{"Yes", "No", "Unknown"}},
		{Name: "description", Type: field.TypeString, Nullable: true},
		{Name: "skill_type_children", Type: field.TypeInt, Nullable: true},
	}
	// SkillTypesTable holds the schema information for the "skill_types" table.
	SkillTypesTable = &schema.Table{
		Name:       "skill_types",
		Columns:    SkillTypesColumns,
		PrimaryKey: []*schema.Column{SkillTypesColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "skill_types_skill_types_children",
				Columns:    []*schema.Column{SkillTypesColumns[6]},
				RefColumns: []*schema.Column{SkillTypesColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// StatusItemsColumns holds the columns for the "status_items" table.
	StatusItemsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "create_time", Type: field.TypeTime},
		{Name: "update_time", Type: field.TypeTime},
		{Name: "string_ref", Type: field.TypeString, Nullable: true},
		{Name: "status_code", Type: field.TypeString, Nullable: true},
		{Name: "sequence_id", Type: field.TypeInt, Nullable: true},
		{Name: "description", Type: field.TypeString, Nullable: true},
		{Name: "status_type_status_items", Type: field.TypeInt, Nullable: true},
	}
	// StatusItemsTable holds the schema information for the "status_items" table.
	StatusItemsTable = &schema.Table{
		Name:       "status_items",
		Columns:    StatusItemsColumns,
		PrimaryKey: []*schema.Column{StatusItemsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "status_items_status_types_status_items",
				Columns:    []*schema.Column{StatusItemsColumns[7]},
				RefColumns: []*schema.Column{StatusTypesColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// StatusTypesColumns holds the columns for the "status_types" table.
	StatusTypesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "create_time", Type: field.TypeTime},
		{Name: "update_time", Type: field.TypeTime},
		{Name: "string_ref", Type: field.TypeString, Nullable: true},
		{Name: "has_table", Type: field.TypeEnum, Nullable: true, Enums: []string{"Yes", "No", "Unknown"}},
		{Name: "description", Type: field.TypeString, Nullable: true},
		{Name: "status_type_children", Type: field.TypeInt, Nullable: true},
	}
	// StatusTypesTable holds the schema information for the "status_types" table.
	StatusTypesTable = &schema.Table{
		Name:       "status_types",
		Columns:    StatusTypesColumns,
		PrimaryKey: []*schema.Column{StatusTypesColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "status_types_status_types_children",
				Columns:    []*schema.Column{StatusTypesColumns[6]},
				RefColumns: []*schema.Column{StatusTypesColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// StatusValidChangesColumns holds the columns for the "status_valid_changes" table.
	StatusValidChangesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "create_time", Type: field.TypeTime},
		{Name: "update_time", Type: field.TypeTime},
		{Name: "string_ref", Type: field.TypeString, Nullable: true},
		{Name: "condition_expression", Type: field.TypeString, Nullable: true},
		{Name: "transition_name", Type: field.TypeString, Nullable: true},
		{Name: "status_item_main_status_valid_changes", Type: field.TypeInt, Nullable: true},
		{Name: "status_item_to_status_valid_changes", Type: field.TypeInt, Nullable: true},
	}
	// StatusValidChangesTable holds the schema information for the "status_valid_changes" table.
	StatusValidChangesTable = &schema.Table{
		Name:       "status_valid_changes",
		Columns:    StatusValidChangesColumns,
		PrimaryKey: []*schema.Column{StatusValidChangesColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "status_valid_changes_status_items_main_status_valid_changes",
				Columns:    []*schema.Column{StatusValidChangesColumns[6]},
				RefColumns: []*schema.Column{StatusItemsColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "status_valid_changes_status_items_to_status_valid_changes",
				Columns:    []*schema.Column{StatusValidChangesColumns[7]},
				RefColumns: []*schema.Column{StatusItemsColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// TemporalExpressionsColumns holds the columns for the "temporal_expressions" table.
	TemporalExpressionsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "create_time", Type: field.TypeTime},
		{Name: "update_time", Type: field.TypeTime},
		{Name: "string_ref", Type: field.TypeString, Nullable: true},
		{Name: "temp_expr_type_id", Type: field.TypeInt, Nullable: true},
		{Name: "description", Type: field.TypeString, Nullable: true},
		{Name: "date_1", Type: field.TypeTime, Nullable: true},
		{Name: "date_2", Type: field.TypeTime, Nullable: true},
		{Name: "integer_1", Type: field.TypeInt, Nullable: true},
		{Name: "integer_2", Type: field.TypeInt, Nullable: true},
		{Name: "string_1", Type: field.TypeInt, Nullable: true},
		{Name: "string_2", Type: field.TypeInt, Nullable: true},
	}
	// TemporalExpressionsTable holds the schema information for the "temporal_expressions" table.
	TemporalExpressionsTable = &schema.Table{
		Name:       "temporal_expressions",
		Columns:    TemporalExpressionsColumns,
		PrimaryKey: []*schema.Column{TemporalExpressionsColumns[0]},
	}
	// TemporalExpressionAssocsColumns holds the columns for the "temporal_expression_assocs" table.
	TemporalExpressionAssocsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "create_time", Type: field.TypeTime},
		{Name: "update_time", Type: field.TypeTime},
		{Name: "string_ref", Type: field.TypeString, Nullable: true},
		{Name: "expr_assoc_type", Type: field.TypeInt, Nullable: true},
		{Name: "temporal_expression_from_temporal_expression_assocs", Type: field.TypeInt, Nullable: true},
		{Name: "temporal_expression_to_temporal_expression_assocs", Type: field.TypeInt, Nullable: true},
	}
	// TemporalExpressionAssocsTable holds the schema information for the "temporal_expression_assocs" table.
	TemporalExpressionAssocsTable = &schema.Table{
		Name:       "temporal_expression_assocs",
		Columns:    TemporalExpressionAssocsColumns,
		PrimaryKey: []*schema.Column{TemporalExpressionAssocsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "temporal_expression_assocs_temporal_expressions_from_temporal_expression_assocs",
				Columns:    []*schema.Column{TemporalExpressionAssocsColumns[5]},
				RefColumns: []*schema.Column{TemporalExpressionsColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "temporal_expression_assocs_temporal_expressions_to_temporal_expression_assocs",
				Columns:    []*schema.Column{TemporalExpressionAssocsColumns[6]},
				RefColumns: []*schema.Column{TemporalExpressionsColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// TermTypesColumns holds the columns for the "term_types" table.
	TermTypesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "create_time", Type: field.TypeTime},
		{Name: "update_time", Type: field.TypeTime},
		{Name: "string_ref", Type: field.TypeString, Nullable: true},
		{Name: "has_table", Type: field.TypeEnum, Nullable: true, Enums: []string{"Yes", "No", "Unknown"}},
		{Name: "description", Type: field.TypeString, Nullable: true},
		{Name: "term_type_children", Type: field.TypeInt, Nullable: true},
	}
	// TermTypesTable holds the schema information for the "term_types" table.
	TermTypesTable = &schema.Table{
		Name:       "term_types",
		Columns:    TermTypesColumns,
		PrimaryKey: []*schema.Column{TermTypesColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "term_types_term_types_children",
				Columns:    []*schema.Column{TermTypesColumns[6]},
				RefColumns: []*schema.Column{TermTypesColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// UserLoginsColumns holds the columns for the "user_logins" table.
	UserLoginsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "create_time", Type: field.TypeTime},
		{Name: "update_time", Type: field.TypeTime},
		{Name: "string_ref", Type: field.TypeString, Nullable: true},
		{Name: "current_password", Type: field.TypeString, Nullable: true},
		{Name: "password_hint", Type: field.TypeString, Nullable: true},
		{Name: "is_system", Type: field.TypeEnum, Nullable: true, Enums: []string{"Yes", "No", "Unknown"}},
		{Name: "enabled", Type: field.TypeEnum, Nullable: true, Enums: []string{"Yes", "No", "Unknown"}},
		{Name: "has_logged_out", Type: field.TypeEnum, Nullable: true, Enums: []string{"Yes", "No", "Unknown"}},
		{Name: "require_password_change", Type: field.TypeEnum, Nullable: true, Enums: []string{"Yes", "No", "Unknown"}},
		{Name: "last_currency_uom", Type: field.TypeInt, Nullable: true},
		{Name: "last_locale", Type: field.TypeString, Nullable: true, Size: 10},
		{Name: "last_time_zone", Type: field.TypeString, Nullable: true, Size: 32},
		{Name: "disabled_date_time", Type: field.TypeTime, Nullable: true},
		{Name: "successive_failed_logins", Type: field.TypeInt, Nullable: true},
		{Name: "external_auth_id", Type: field.TypeString, Nullable: true},
		{Name: "user_ldap_dn", Type: field.TypeString, Nullable: true},
		{Name: "disabled_by", Type: field.TypeString, Nullable: true},
		{Name: "party_user_logins", Type: field.TypeInt, Nullable: true},
		{Name: "person_user_logins", Type: field.TypeInt, Nullable: true},
	}
	// UserLoginsTable holds the schema information for the "user_logins" table.
	UserLoginsTable = &schema.Table{
		Name:       "user_logins",
		Columns:    UserLoginsColumns,
		PrimaryKey: []*schema.Column{UserLoginsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "user_logins_parties_user_logins",
				Columns:    []*schema.Column{UserLoginsColumns[18]},
				RefColumns: []*schema.Column{PartiesColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "user_logins_persons_user_logins",
				Columns:    []*schema.Column{UserLoginsColumns[19]},
				RefColumns: []*schema.Column{PersonsColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// UserLoginSecurityGroupsColumns holds the columns for the "user_login_security_groups" table.
	UserLoginSecurityGroupsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "create_time", Type: field.TypeTime},
		{Name: "update_time", Type: field.TypeTime},
		{Name: "string_ref", Type: field.TypeString, Nullable: true},
		{Name: "from_date", Type: field.TypeTime},
		{Name: "thru_date", Type: field.TypeTime, Nullable: true},
		{Name: "security_group_user_login_security_groups", Type: field.TypeInt, Nullable: true},
		{Name: "user_login_user_login_security_groups", Type: field.TypeInt, Nullable: true},
	}
	// UserLoginSecurityGroupsTable holds the schema information for the "user_login_security_groups" table.
	UserLoginSecurityGroupsTable = &schema.Table{
		Name:       "user_login_security_groups",
		Columns:    UserLoginSecurityGroupsColumns,
		PrimaryKey: []*schema.Column{UserLoginSecurityGroupsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "user_login_security_groups_security_groups_user_login_security_groups",
				Columns:    []*schema.Column{UserLoginSecurityGroupsColumns[6]},
				RefColumns: []*schema.Column{SecurityGroupsColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "user_login_security_groups_user_logins_user_login_security_groups",
				Columns:    []*schema.Column{UserLoginSecurityGroupsColumns[7]},
				RefColumns: []*schema.Column{UserLoginsColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// UserPreferencesColumns holds the columns for the "user_preferences" table.
	UserPreferencesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "create_time", Type: field.TypeTime},
		{Name: "update_time", Type: field.TypeTime},
		{Name: "string_ref", Type: field.TypeString, Nullable: true},
		{Name: "user_pref_type_id", Type: field.TypeString, Size: 32},
		{Name: "user_pref_group_type_id", Type: field.TypeString, Nullable: true, Size: 32},
		{Name: "user_pref_value", Type: field.TypeString, Nullable: true},
		{Name: "user_pref_data_type", Type: field.TypeString, Nullable: true, Size: 32},
		{Name: "user_login_user_preferences", Type: field.TypeInt, Nullable: true},
	}
	// UserPreferencesTable holds the schema information for the "user_preferences" table.
	UserPreferencesTable = &schema.Table{
		Name:       "user_preferences",
		Columns:    UserPreferencesColumns,
		PrimaryKey: []*schema.Column{UserPreferencesColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "user_preferences_user_logins_user_preferences",
				Columns:    []*schema.Column{UserPreferencesColumns[8]},
				RefColumns: []*schema.Column{UserLoginsColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// WorkEffortsColumns holds the columns for the "work_efforts" table.
	WorkEffortsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "create_time", Type: field.TypeTime},
		{Name: "update_time", Type: field.TypeTime},
		{Name: "string_ref", Type: field.TypeString, Nullable: true},
		{Name: "last_status_update", Type: field.TypeTime, Nullable: true},
		{Name: "work_effort_purpose_type_id", Type: field.TypeInt, Nullable: true},
		{Name: "priority", Type: field.TypeInt, Nullable: true},
		{Name: "percent_complete", Type: field.TypeInt, Nullable: true},
		{Name: "work_effort_name", Type: field.TypeString, Nullable: true},
		{Name: "show_as_enum_id", Type: field.TypeInt, Nullable: true},
		{Name: "send_notification_email", Type: field.TypeEnum, Nullable: true, Enums: []string{"Yes", "No", "Unknown"}},
		{Name: "description", Type: field.TypeString, Nullable: true},
		{Name: "location_desc", Type: field.TypeString, Nullable: true},
		{Name: "estimated_start_date", Type: field.TypeTime, Nullable: true},
		{Name: "estimated_completion_date", Type: field.TypeTime, Nullable: true},
		{Name: "actual_start_date", Type: field.TypeTime, Nullable: true},
		{Name: "actual_completion_date", Type: field.TypeTime, Nullable: true},
		{Name: "estimated_milli_seconds", Type: field.TypeFloat64, Nullable: true},
		{Name: "estimated_setup_millis", Type: field.TypeFloat64, Nullable: true},
		{Name: "estimate_calc_method", Type: field.TypeInt, Nullable: true},
		{Name: "actual_milli_seconds", Type: field.TypeFloat64, Nullable: true},
		{Name: "actual_setup_millis", Type: field.TypeFloat64, Nullable: true},
		{Name: "total_milli_seconds_allowed", Type: field.TypeFloat64, Nullable: true},
		{Name: "total_money_allowed", Type: field.TypeFloat64, Nullable: true},
		{Name: "money_uom_id", Type: field.TypeInt, Nullable: true},
		{Name: "special_terms", Type: field.TypeString, Nullable: true},
		{Name: "time_transparency", Type: field.TypeInt, Nullable: true},
		{Name: "universal_id", Type: field.TypeString, Nullable: true},
		{Name: "source_reference_id", Type: field.TypeString, Nullable: true, Size: 32},
		{Name: "facility_id", Type: field.TypeInt, Nullable: true},
		{Name: "info_url", Type: field.TypeString, Nullable: true},
		{Name: "recurrence_info_id", Type: field.TypeInt, Nullable: true},
		{Name: "runtime_data_id", Type: field.TypeInt, Nullable: true},
		{Name: "note_id", Type: field.TypeInt, Nullable: true},
		{Name: "service_loader_name", Type: field.TypeString, Nullable: true},
		{Name: "quantity_to_produce", Type: field.TypeFloat64, Nullable: true},
		{Name: "quantity_produced", Type: field.TypeFloat64, Nullable: true},
		{Name: "quantity_rejected", Type: field.TypeFloat64, Nullable: true},
		{Name: "reserv_persons", Type: field.TypeFloat64, Nullable: true},
		{Name: "reserv_2_nd_pp_perc", Type: field.TypeFloat64, Nullable: true},
		{Name: "reserv_nth_pp_perc", Type: field.TypeFloat64, Nullable: true},
		{Name: "accommodation_map_id", Type: field.TypeInt, Nullable: true},
		{Name: "accommodation_spot_id", Type: field.TypeInt, Nullable: true},
		{Name: "revision_number", Type: field.TypeInt, Nullable: true},
		{Name: "created_date", Type: field.TypeTime, Nullable: true},
		{Name: "created_by_user_login", Type: field.TypeString, Nullable: true},
		{Name: "last_modified_date", Type: field.TypeTime, Nullable: true},
		{Name: "last_modified_by_user_login", Type: field.TypeString, Nullable: true},
		{Name: "sequence_num", Type: field.TypeInt, Nullable: true},
		{Name: "enumeration_scope_work_efforts", Type: field.TypeInt, Nullable: true},
		{Name: "fixed_asset_work_efforts", Type: field.TypeInt, Nullable: true},
		{Name: "status_item_current_work_efforts", Type: field.TypeInt, Nullable: true},
		{Name: "temporal_expression_work_efforts", Type: field.TypeInt, Nullable: true},
		{Name: "work_effort_children", Type: field.TypeInt, Nullable: true},
		{Name: "work_effort_type_work_efforts", Type: field.TypeInt, Nullable: true},
	}
	// WorkEffortsTable holds the schema information for the "work_efforts" table.
	WorkEffortsTable = &schema.Table{
		Name:       "work_efforts",
		Columns:    WorkEffortsColumns,
		PrimaryKey: []*schema.Column{WorkEffortsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "work_efforts_enumerations_scope_work_efforts",
				Columns:    []*schema.Column{WorkEffortsColumns[49]},
				RefColumns: []*schema.Column{EnumerationsColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "work_efforts_fixed_assets_work_efforts",
				Columns:    []*schema.Column{WorkEffortsColumns[50]},
				RefColumns: []*schema.Column{FixedAssetsColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "work_efforts_status_items_current_work_efforts",
				Columns:    []*schema.Column{WorkEffortsColumns[51]},
				RefColumns: []*schema.Column{StatusItemsColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "work_efforts_temporal_expressions_work_efforts",
				Columns:    []*schema.Column{WorkEffortsColumns[52]},
				RefColumns: []*schema.Column{TemporalExpressionsColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "work_efforts_work_efforts_children",
				Columns:    []*schema.Column{WorkEffortsColumns[53]},
				RefColumns: []*schema.Column{WorkEffortsColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "work_efforts_work_effort_types_work_efforts",
				Columns:    []*schema.Column{WorkEffortsColumns[54]},
				RefColumns: []*schema.Column{WorkEffortTypesColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// WorkEffortAssocsColumns holds the columns for the "work_effort_assocs" table.
	WorkEffortAssocsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "create_time", Type: field.TypeTime},
		{Name: "update_time", Type: field.TypeTime},
		{Name: "string_ref", Type: field.TypeString, Nullable: true},
		{Name: "work_effort_assoc_type_id", Type: field.TypeInt},
		{Name: "sequence_num", Type: field.TypeInt, Nullable: true},
		{Name: "from_date", Type: field.TypeTime},
		{Name: "thru_date", Type: field.TypeTime, Nullable: true},
		{Name: "work_effort_from_work_effort_assocs", Type: field.TypeInt, Nullable: true},
		{Name: "work_effort_to_work_effort_assocs", Type: field.TypeInt, Nullable: true},
	}
	// WorkEffortAssocsTable holds the schema information for the "work_effort_assocs" table.
	WorkEffortAssocsTable = &schema.Table{
		Name:       "work_effort_assocs",
		Columns:    WorkEffortAssocsColumns,
		PrimaryKey: []*schema.Column{WorkEffortAssocsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "work_effort_assocs_work_efforts_from_work_effort_assocs",
				Columns:    []*schema.Column{WorkEffortAssocsColumns[8]},
				RefColumns: []*schema.Column{WorkEffortsColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "work_effort_assocs_work_efforts_to_work_effort_assocs",
				Columns:    []*schema.Column{WorkEffortAssocsColumns[9]},
				RefColumns: []*schema.Column{WorkEffortsColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// WorkEffortFixedAssetAssignsColumns holds the columns for the "work_effort_fixed_asset_assigns" table.
	WorkEffortFixedAssetAssignsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "create_time", Type: field.TypeTime},
		{Name: "update_time", Type: field.TypeTime},
		{Name: "string_ref", Type: field.TypeString, Nullable: true},
		{Name: "from_date", Type: field.TypeTime},
		{Name: "thru_date", Type: field.TypeTime, Nullable: true},
		{Name: "allocated_cost", Type: field.TypeFloat64, Nullable: true},
		{Name: "comments", Type: field.TypeString, Nullable: true},
		{Name: "fixed_asset_work_effort_fixed_asset_assigns", Type: field.TypeInt, Nullable: true},
		{Name: "status_item_work_effort_fixed_asset_assigns", Type: field.TypeInt, Nullable: true},
		{Name: "status_item_availability_work_effort_fixed_asset_assigns", Type: field.TypeInt, Nullable: true},
		{Name: "work_effort_work_effort_fixed_asset_assigns", Type: field.TypeInt, Nullable: true},
	}
	// WorkEffortFixedAssetAssignsTable holds the schema information for the "work_effort_fixed_asset_assigns" table.
	WorkEffortFixedAssetAssignsTable = &schema.Table{
		Name:       "work_effort_fixed_asset_assigns",
		Columns:    WorkEffortFixedAssetAssignsColumns,
		PrimaryKey: []*schema.Column{WorkEffortFixedAssetAssignsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "work_effort_fixed_asset_assigns_fixed_assets_work_effort_fixed_asset_assigns",
				Columns:    []*schema.Column{WorkEffortFixedAssetAssignsColumns[8]},
				RefColumns: []*schema.Column{FixedAssetsColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "work_effort_fixed_asset_assigns_status_items_work_effort_fixed_asset_assigns",
				Columns:    []*schema.Column{WorkEffortFixedAssetAssignsColumns[9]},
				RefColumns: []*schema.Column{StatusItemsColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "work_effort_fixed_asset_assigns_status_items_availability_work_effort_fixed_asset_assigns",
				Columns:    []*schema.Column{WorkEffortFixedAssetAssignsColumns[10]},
				RefColumns: []*schema.Column{StatusItemsColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "work_effort_fixed_asset_assigns_work_efforts_work_effort_fixed_asset_assigns",
				Columns:    []*schema.Column{WorkEffortFixedAssetAssignsColumns[11]},
				RefColumns: []*schema.Column{WorkEffortsColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// WorkEffortPartyAssignmentsColumns holds the columns for the "work_effort_party_assignments" table.
	WorkEffortPartyAssignmentsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "create_time", Type: field.TypeTime},
		{Name: "update_time", Type: field.TypeTime},
		{Name: "string_ref", Type: field.TypeString, Nullable: true},
		{Name: "from_date", Type: field.TypeTime},
		{Name: "thru_date", Type: field.TypeTime, Nullable: true},
		{Name: "status_date_time", Type: field.TypeTime, Nullable: true},
		{Name: "facility_id", Type: field.TypeInt, Nullable: true},
		{Name: "comments", Type: field.TypeString, Nullable: true},
		{Name: "must_rsvp", Type: field.TypeEnum, Nullable: true, Enums: []string{"Yes", "No", "Unknown"}},
		{Name: "enumeration_expectation_work_effort_party_assignments", Type: field.TypeInt, Nullable: true},
		{Name: "enumeration_delegate_reason_work_effort_party_assignments", Type: field.TypeInt, Nullable: true},
		{Name: "party_work_effort_party_assignments", Type: field.TypeInt, Nullable: true},
		{Name: "party_role_work_effort_party_assignments", Type: field.TypeInt, Nullable: true},
		{Name: "role_type_work_effort_party_assignments", Type: field.TypeInt, Nullable: true},
		{Name: "status_item_assignment_work_effort_party_assignments", Type: field.TypeInt, Nullable: true},
		{Name: "status_item_availability_work_effort_party_assignments", Type: field.TypeInt, Nullable: true},
		{Name: "user_login_assigned_by_work_effort_party_assignments", Type: field.TypeInt, Nullable: true},
		{Name: "work_effort_work_effort_party_assignments", Type: field.TypeInt, Nullable: true},
	}
	// WorkEffortPartyAssignmentsTable holds the schema information for the "work_effort_party_assignments" table.
	WorkEffortPartyAssignmentsTable = &schema.Table{
		Name:       "work_effort_party_assignments",
		Columns:    WorkEffortPartyAssignmentsColumns,
		PrimaryKey: []*schema.Column{WorkEffortPartyAssignmentsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "work_effort_party_assignments_enumerations_expectation_work_effort_party_assignments",
				Columns:    []*schema.Column{WorkEffortPartyAssignmentsColumns[10]},
				RefColumns: []*schema.Column{EnumerationsColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "work_effort_party_assignments_enumerations_delegate_reason_work_effort_party_assignments",
				Columns:    []*schema.Column{WorkEffortPartyAssignmentsColumns[11]},
				RefColumns: []*schema.Column{EnumerationsColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "work_effort_party_assignments_parties_work_effort_party_assignments",
				Columns:    []*schema.Column{WorkEffortPartyAssignmentsColumns[12]},
				RefColumns: []*schema.Column{PartiesColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "work_effort_party_assignments_party_roles_work_effort_party_assignments",
				Columns:    []*schema.Column{WorkEffortPartyAssignmentsColumns[13]},
				RefColumns: []*schema.Column{PartyRolesColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "work_effort_party_assignments_role_types_work_effort_party_assignments",
				Columns:    []*schema.Column{WorkEffortPartyAssignmentsColumns[14]},
				RefColumns: []*schema.Column{RoleTypesColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "work_effort_party_assignments_status_items_assignment_work_effort_party_assignments",
				Columns:    []*schema.Column{WorkEffortPartyAssignmentsColumns[15]},
				RefColumns: []*schema.Column{StatusItemsColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "work_effort_party_assignments_status_items_availability_work_effort_party_assignments",
				Columns:    []*schema.Column{WorkEffortPartyAssignmentsColumns[16]},
				RefColumns: []*schema.Column{StatusItemsColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "work_effort_party_assignments_user_logins_assigned_by_work_effort_party_assignments",
				Columns:    []*schema.Column{WorkEffortPartyAssignmentsColumns[17]},
				RefColumns: []*schema.Column{UserLoginsColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "work_effort_party_assignments_work_efforts_work_effort_party_assignments",
				Columns:    []*schema.Column{WorkEffortPartyAssignmentsColumns[18]},
				RefColumns: []*schema.Column{WorkEffortsColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// WorkEffortSkillStandardsColumns holds the columns for the "work_effort_skill_standards" table.
	WorkEffortSkillStandardsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "create_time", Type: field.TypeTime},
		{Name: "update_time", Type: field.TypeTime},
		{Name: "string_ref", Type: field.TypeString, Nullable: true},
		{Name: "estimated_num_people", Type: field.TypeFloat64, Nullable: true},
		{Name: "estimated_duration", Type: field.TypeFloat64, Nullable: true},
		{Name: "estimated_cost", Type: field.TypeFloat64, Nullable: true},
		{Name: "skill_type_work_effort_skill_standards", Type: field.TypeInt, Nullable: true},
		{Name: "work_effort_work_effort_skill_standards", Type: field.TypeInt, Nullable: true},
	}
	// WorkEffortSkillStandardsTable holds the schema information for the "work_effort_skill_standards" table.
	WorkEffortSkillStandardsTable = &schema.Table{
		Name:       "work_effort_skill_standards",
		Columns:    WorkEffortSkillStandardsColumns,
		PrimaryKey: []*schema.Column{WorkEffortSkillStandardsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "work_effort_skill_standards_skill_types_work_effort_skill_standards",
				Columns:    []*schema.Column{WorkEffortSkillStandardsColumns[7]},
				RefColumns: []*schema.Column{SkillTypesColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "work_effort_skill_standards_work_efforts_work_effort_skill_standards",
				Columns:    []*schema.Column{WorkEffortSkillStandardsColumns[8]},
				RefColumns: []*schema.Column{WorkEffortsColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// WorkEffortTypesColumns holds the columns for the "work_effort_types" table.
	WorkEffortTypesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "create_time", Type: field.TypeTime},
		{Name: "update_time", Type: field.TypeTime},
		{Name: "string_ref", Type: field.TypeString, Nullable: true},
		{Name: "has_table", Type: field.TypeEnum, Nullable: true, Enums: []string{"Yes", "No", "Unknown"}},
		{Name: "description", Type: field.TypeString, Nullable: true},
		{Name: "work_effort_type_children", Type: field.TypeInt, Nullable: true},
	}
	// WorkEffortTypesTable holds the schema information for the "work_effort_types" table.
	WorkEffortTypesTable = &schema.Table{
		Name:       "work_effort_types",
		Columns:    WorkEffortTypesColumns,
		PrimaryKey: []*schema.Column{WorkEffortTypesColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "work_effort_types_work_effort_types_children",
				Columns:    []*schema.Column{WorkEffortTypesColumns[6]},
				RefColumns: []*schema.Column{WorkEffortTypesColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// CommunicationEventPrpTypChildCommunicationEventPrpTypsColumns holds the columns for the "communication_event_prp_typ_child_communication_event_prp_typs" table.
	CommunicationEventPrpTypChildCommunicationEventPrpTypsColumns = []*schema.Column{
		{Name: "communication_event_prp_typ_id", Type: field.TypeInt},
		{Name: "child_communication_event_prp_typ_id", Type: field.TypeInt},
	}
	// CommunicationEventPrpTypChildCommunicationEventPrpTypsTable holds the schema information for the "communication_event_prp_typ_child_communication_event_prp_typs" table.
	CommunicationEventPrpTypChildCommunicationEventPrpTypsTable = &schema.Table{
		Name:       "communication_event_prp_typ_child_communication_event_prp_typs",
		Columns:    CommunicationEventPrpTypChildCommunicationEventPrpTypsColumns,
		PrimaryKey: []*schema.Column{CommunicationEventPrpTypChildCommunicationEventPrpTypsColumns[0], CommunicationEventPrpTypChildCommunicationEventPrpTypsColumns[1]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "communication_event_prp_typ_child_communication_event_prp_typs_communication_event_prp_typ_id",
				Columns:    []*schema.Column{CommunicationEventPrpTypChildCommunicationEventPrpTypsColumns[0]},
				RefColumns: []*schema.Column{CommunicationEventPrpTypsColumns[0]},
				OnDelete:   schema.Cascade,
			},
			{
				Symbol:     "communication_event_prp_typ_child_communication_event_prp_typs_child_communication_event_prp_typ_id",
				Columns:    []*schema.Column{CommunicationEventPrpTypChildCommunicationEventPrpTypsColumns[1]},
				RefColumns: []*schema.Column{CommunicationEventPrpTypsColumns[0]},
				OnDelete:   schema.Cascade,
			},
		},
	}
	// CommunicationEventTypeChildCommunicationEventTypesColumns holds the columns for the "communication_event_type_child_communication_event_types" table.
	CommunicationEventTypeChildCommunicationEventTypesColumns = []*schema.Column{
		{Name: "communication_event_type_id", Type: field.TypeInt},
		{Name: "child_communication_event_type_id", Type: field.TypeInt},
	}
	// CommunicationEventTypeChildCommunicationEventTypesTable holds the schema information for the "communication_event_type_child_communication_event_types" table.
	CommunicationEventTypeChildCommunicationEventTypesTable = &schema.Table{
		Name:       "communication_event_type_child_communication_event_types",
		Columns:    CommunicationEventTypeChildCommunicationEventTypesColumns,
		PrimaryKey: []*schema.Column{CommunicationEventTypeChildCommunicationEventTypesColumns[0], CommunicationEventTypeChildCommunicationEventTypesColumns[1]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "communication_event_type_child_communication_event_types_communication_event_type_id",
				Columns:    []*schema.Column{CommunicationEventTypeChildCommunicationEventTypesColumns[0]},
				RefColumns: []*schema.Column{CommunicationEventTypesColumns[0]},
				OnDelete:   schema.Cascade,
			},
			{
				Symbol:     "communication_event_type_child_communication_event_types_child_communication_event_type_id",
				Columns:    []*schema.Column{CommunicationEventTypeChildCommunicationEventTypesColumns[1]},
				RefColumns: []*schema.Column{CommunicationEventTypesColumns[0]},
				OnDelete:   schema.Cascade,
			},
		},
	}
	// ContactMechTypeChildContactMechTypesColumns holds the columns for the "contact_mech_type_child_contact_mech_types" table.
	ContactMechTypeChildContactMechTypesColumns = []*schema.Column{
		{Name: "contact_mech_type_id", Type: field.TypeInt},
		{Name: "child_contact_mech_type_id", Type: field.TypeInt},
	}
	// ContactMechTypeChildContactMechTypesTable holds the schema information for the "contact_mech_type_child_contact_mech_types" table.
	ContactMechTypeChildContactMechTypesTable = &schema.Table{
		Name:       "contact_mech_type_child_contact_mech_types",
		Columns:    ContactMechTypeChildContactMechTypesColumns,
		PrimaryKey: []*schema.Column{ContactMechTypeChildContactMechTypesColumns[0], ContactMechTypeChildContactMechTypesColumns[1]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "contact_mech_type_child_contact_mech_types_contact_mech_type_id",
				Columns:    []*schema.Column{ContactMechTypeChildContactMechTypesColumns[0]},
				RefColumns: []*schema.Column{ContactMechTypesColumns[0]},
				OnDelete:   schema.Cascade,
			},
			{
				Symbol:     "contact_mech_type_child_contact_mech_types_child_contact_mech_type_id",
				Columns:    []*schema.Column{ContactMechTypeChildContactMechTypesColumns[1]},
				RefColumns: []*schema.Column{ContactMechTypesColumns[0]},
				OnDelete:   schema.Cascade,
			},
		},
	}
	// EnumerationTypeChildEnumerationTypesColumns holds the columns for the "enumeration_type_child_enumeration_types" table.
	EnumerationTypeChildEnumerationTypesColumns = []*schema.Column{
		{Name: "enumeration_type_id", Type: field.TypeInt},
		{Name: "child_enumeration_type_id", Type: field.TypeInt},
	}
	// EnumerationTypeChildEnumerationTypesTable holds the schema information for the "enumeration_type_child_enumeration_types" table.
	EnumerationTypeChildEnumerationTypesTable = &schema.Table{
		Name:       "enumeration_type_child_enumeration_types",
		Columns:    EnumerationTypeChildEnumerationTypesColumns,
		PrimaryKey: []*schema.Column{EnumerationTypeChildEnumerationTypesColumns[0], EnumerationTypeChildEnumerationTypesColumns[1]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "enumeration_type_child_enumeration_types_enumeration_type_id",
				Columns:    []*schema.Column{EnumerationTypeChildEnumerationTypesColumns[0]},
				RefColumns: []*schema.Column{EnumerationTypesColumns[0]},
				OnDelete:   schema.Cascade,
			},
			{
				Symbol:     "enumeration_type_child_enumeration_types_child_enumeration_type_id",
				Columns:    []*schema.Column{EnumerationTypeChildEnumerationTypesColumns[1]},
				RefColumns: []*schema.Column{EnumerationTypesColumns[0]},
				OnDelete:   schema.Cascade,
			},
		},
	}
	// FixedAssetChildFixedAssetsColumns holds the columns for the "fixed_asset_child_fixed_assets" table.
	FixedAssetChildFixedAssetsColumns = []*schema.Column{
		{Name: "fixed_asset_id", Type: field.TypeInt},
		{Name: "child_fixed_asset_id", Type: field.TypeInt},
	}
	// FixedAssetChildFixedAssetsTable holds the schema information for the "fixed_asset_child_fixed_assets" table.
	FixedAssetChildFixedAssetsTable = &schema.Table{
		Name:       "fixed_asset_child_fixed_assets",
		Columns:    FixedAssetChildFixedAssetsColumns,
		PrimaryKey: []*schema.Column{FixedAssetChildFixedAssetsColumns[0], FixedAssetChildFixedAssetsColumns[1]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "fixed_asset_child_fixed_assets_fixed_asset_id",
				Columns:    []*schema.Column{FixedAssetChildFixedAssetsColumns[0]},
				RefColumns: []*schema.Column{FixedAssetsColumns[0]},
				OnDelete:   schema.Cascade,
			},
			{
				Symbol:     "fixed_asset_child_fixed_assets_child_fixed_asset_id",
				Columns:    []*schema.Column{FixedAssetChildFixedAssetsColumns[1]},
				RefColumns: []*schema.Column{FixedAssetsColumns[0]},
				OnDelete:   schema.Cascade,
			},
		},
	}
	// PartyClassificationTypeChildPartyClassificationTypesColumns holds the columns for the "party_classification_type_child_party_classification_types" table.
	PartyClassificationTypeChildPartyClassificationTypesColumns = []*schema.Column{
		{Name: "party_classification_type_id", Type: field.TypeInt},
		{Name: "child_party_classification_type_id", Type: field.TypeInt},
	}
	// PartyClassificationTypeChildPartyClassificationTypesTable holds the schema information for the "party_classification_type_child_party_classification_types" table.
	PartyClassificationTypeChildPartyClassificationTypesTable = &schema.Table{
		Name:       "party_classification_type_child_party_classification_types",
		Columns:    PartyClassificationTypeChildPartyClassificationTypesColumns,
		PrimaryKey: []*schema.Column{PartyClassificationTypeChildPartyClassificationTypesColumns[0], PartyClassificationTypeChildPartyClassificationTypesColumns[1]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "party_classification_type_child_party_classification_types_party_classification_type_id",
				Columns:    []*schema.Column{PartyClassificationTypeChildPartyClassificationTypesColumns[0]},
				RefColumns: []*schema.Column{PartyClassificationTypesColumns[0]},
				OnDelete:   schema.Cascade,
			},
			{
				Symbol:     "party_classification_type_child_party_classification_types_child_party_classification_type_id",
				Columns:    []*schema.Column{PartyClassificationTypeChildPartyClassificationTypesColumns[1]},
				RefColumns: []*schema.Column{PartyClassificationTypesColumns[0]},
				OnDelete:   schema.Cascade,
			},
		},
	}
	// PartyContentTypeChildPartyContentTypesColumns holds the columns for the "party_content_type_child_party_content_types" table.
	PartyContentTypeChildPartyContentTypesColumns = []*schema.Column{
		{Name: "party_content_type_id", Type: field.TypeInt},
		{Name: "child_party_content_type_id", Type: field.TypeInt},
	}
	// PartyContentTypeChildPartyContentTypesTable holds the schema information for the "party_content_type_child_party_content_types" table.
	PartyContentTypeChildPartyContentTypesTable = &schema.Table{
		Name:       "party_content_type_child_party_content_types",
		Columns:    PartyContentTypeChildPartyContentTypesColumns,
		PrimaryKey: []*schema.Column{PartyContentTypeChildPartyContentTypesColumns[0], PartyContentTypeChildPartyContentTypesColumns[1]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "party_content_type_child_party_content_types_party_content_type_id",
				Columns:    []*schema.Column{PartyContentTypeChildPartyContentTypesColumns[0]},
				RefColumns: []*schema.Column{PartyContentTypesColumns[0]},
				OnDelete:   schema.Cascade,
			},
			{
				Symbol:     "party_content_type_child_party_content_types_child_party_content_type_id",
				Columns:    []*schema.Column{PartyContentTypeChildPartyContentTypesColumns[1]},
				RefColumns: []*schema.Column{PartyContentTypesColumns[0]},
				OnDelete:   schema.Cascade,
			},
		},
	}
	// PartyIdentificationTypeChildPartyIdentificationTypesColumns holds the columns for the "party_identification_type_child_party_identification_types" table.
	PartyIdentificationTypeChildPartyIdentificationTypesColumns = []*schema.Column{
		{Name: "party_identification_type_id", Type: field.TypeInt},
		{Name: "child_party_identification_type_id", Type: field.TypeInt},
	}
	// PartyIdentificationTypeChildPartyIdentificationTypesTable holds the schema information for the "party_identification_type_child_party_identification_types" table.
	PartyIdentificationTypeChildPartyIdentificationTypesTable = &schema.Table{
		Name:       "party_identification_type_child_party_identification_types",
		Columns:    PartyIdentificationTypeChildPartyIdentificationTypesColumns,
		PrimaryKey: []*schema.Column{PartyIdentificationTypeChildPartyIdentificationTypesColumns[0], PartyIdentificationTypeChildPartyIdentificationTypesColumns[1]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "party_identification_type_child_party_identification_types_party_identification_type_id",
				Columns:    []*schema.Column{PartyIdentificationTypeChildPartyIdentificationTypesColumns[0]},
				RefColumns: []*schema.Column{PartyIdentificationTypesColumns[0]},
				OnDelete:   schema.Cascade,
			},
			{
				Symbol:     "party_identification_type_child_party_identification_types_child_party_identification_type_id",
				Columns:    []*schema.Column{PartyIdentificationTypeChildPartyIdentificationTypesColumns[1]},
				RefColumns: []*schema.Column{PartyIdentificationTypesColumns[0]},
				OnDelete:   schema.Cascade,
			},
		},
	}
	// PartyQualTypeChildPartyQualTypesColumns holds the columns for the "party_qual_type_child_party_qual_types" table.
	PartyQualTypeChildPartyQualTypesColumns = []*schema.Column{
		{Name: "party_qual_type_id", Type: field.TypeInt},
		{Name: "child_party_qual_type_id", Type: field.TypeInt},
	}
	// PartyQualTypeChildPartyQualTypesTable holds the schema information for the "party_qual_type_child_party_qual_types" table.
	PartyQualTypeChildPartyQualTypesTable = &schema.Table{
		Name:       "party_qual_type_child_party_qual_types",
		Columns:    PartyQualTypeChildPartyQualTypesColumns,
		PrimaryKey: []*schema.Column{PartyQualTypeChildPartyQualTypesColumns[0], PartyQualTypeChildPartyQualTypesColumns[1]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "party_qual_type_child_party_qual_types_party_qual_type_id",
				Columns:    []*schema.Column{PartyQualTypeChildPartyQualTypesColumns[0]},
				RefColumns: []*schema.Column{PartyQualTypesColumns[0]},
				OnDelete:   schema.Cascade,
			},
			{
				Symbol:     "party_qual_type_child_party_qual_types_child_party_qual_type_id",
				Columns:    []*schema.Column{PartyQualTypeChildPartyQualTypesColumns[1]},
				RefColumns: []*schema.Column{PartyQualTypesColumns[0]},
				OnDelete:   schema.Cascade,
			},
		},
	}
	// PartyRelationshipTypeChildPartyRelationshipTypesColumns holds the columns for the "party_relationship_type_child_party_relationship_types" table.
	PartyRelationshipTypeChildPartyRelationshipTypesColumns = []*schema.Column{
		{Name: "party_relationship_type_id", Type: field.TypeInt},
		{Name: "child_party_relationship_type_id", Type: field.TypeInt},
	}
	// PartyRelationshipTypeChildPartyRelationshipTypesTable holds the schema information for the "party_relationship_type_child_party_relationship_types" table.
	PartyRelationshipTypeChildPartyRelationshipTypesTable = &schema.Table{
		Name:       "party_relationship_type_child_party_relationship_types",
		Columns:    PartyRelationshipTypeChildPartyRelationshipTypesColumns,
		PrimaryKey: []*schema.Column{PartyRelationshipTypeChildPartyRelationshipTypesColumns[0], PartyRelationshipTypeChildPartyRelationshipTypesColumns[1]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "party_relationship_type_child_party_relationship_types_party_relationship_type_id",
				Columns:    []*schema.Column{PartyRelationshipTypeChildPartyRelationshipTypesColumns[0]},
				RefColumns: []*schema.Column{PartyRelationshipTypesColumns[0]},
				OnDelete:   schema.Cascade,
			},
			{
				Symbol:     "party_relationship_type_child_party_relationship_types_child_party_relationship_type_id",
				Columns:    []*schema.Column{PartyRelationshipTypeChildPartyRelationshipTypesColumns[1]},
				RefColumns: []*schema.Column{PartyRelationshipTypesColumns[0]},
				OnDelete:   schema.Cascade,
			},
		},
	}
	// PartyTypeSiblingPartyTypesColumns holds the columns for the "party_type_sibling_party_types" table.
	PartyTypeSiblingPartyTypesColumns = []*schema.Column{
		{Name: "party_type_id", Type: field.TypeInt},
		{Name: "sibling_party_type_id", Type: field.TypeInt},
	}
	// PartyTypeSiblingPartyTypesTable holds the schema information for the "party_type_sibling_party_types" table.
	PartyTypeSiblingPartyTypesTable = &schema.Table{
		Name:       "party_type_sibling_party_types",
		Columns:    PartyTypeSiblingPartyTypesColumns,
		PrimaryKey: []*schema.Column{PartyTypeSiblingPartyTypesColumns[0], PartyTypeSiblingPartyTypesColumns[1]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "party_type_sibling_party_types_party_type_id",
				Columns:    []*schema.Column{PartyTypeSiblingPartyTypesColumns[0]},
				RefColumns: []*schema.Column{PartyTypesColumns[0]},
				OnDelete:   schema.Cascade,
			},
			{
				Symbol:     "party_type_sibling_party_types_sibling_party_type_id",
				Columns:    []*schema.Column{PartyTypeSiblingPartyTypesColumns[1]},
				RefColumns: []*schema.Column{PartyTypesColumns[0]},
				OnDelete:   schema.Cascade,
			},
		},
	}
	// PartyTypeChildPartyTypesColumns holds the columns for the "party_type_child_party_types" table.
	PartyTypeChildPartyTypesColumns = []*schema.Column{
		{Name: "party_type_id", Type: field.TypeInt},
		{Name: "child_party_type_id", Type: field.TypeInt},
	}
	// PartyTypeChildPartyTypesTable holds the schema information for the "party_type_child_party_types" table.
	PartyTypeChildPartyTypesTable = &schema.Table{
		Name:       "party_type_child_party_types",
		Columns:    PartyTypeChildPartyTypesColumns,
		PrimaryKey: []*schema.Column{PartyTypeChildPartyTypesColumns[0], PartyTypeChildPartyTypesColumns[1]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "party_type_child_party_types_party_type_id",
				Columns:    []*schema.Column{PartyTypeChildPartyTypesColumns[0]},
				RefColumns: []*schema.Column{PartyTypesColumns[0]},
				OnDelete:   schema.Cascade,
			},
			{
				Symbol:     "party_type_child_party_types_child_party_type_id",
				Columns:    []*schema.Column{PartyTypeChildPartyTypesColumns[1]},
				RefColumns: []*schema.Column{PartyTypesColumns[0]},
				OnDelete:   schema.Cascade,
			},
		},
	}
	// RoleTypeChildRoleTypesColumns holds the columns for the "role_type_child_role_types" table.
	RoleTypeChildRoleTypesColumns = []*schema.Column{
		{Name: "role_type_id", Type: field.TypeInt},
		{Name: "child_role_type_id", Type: field.TypeInt},
	}
	// RoleTypeChildRoleTypesTable holds the schema information for the "role_type_child_role_types" table.
	RoleTypeChildRoleTypesTable = &schema.Table{
		Name:       "role_type_child_role_types",
		Columns:    RoleTypeChildRoleTypesColumns,
		PrimaryKey: []*schema.Column{RoleTypeChildRoleTypesColumns[0], RoleTypeChildRoleTypesColumns[1]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "role_type_child_role_types_role_type_id",
				Columns:    []*schema.Column{RoleTypeChildRoleTypesColumns[0]},
				RefColumns: []*schema.Column{RoleTypesColumns[0]},
				OnDelete:   schema.Cascade,
			},
			{
				Symbol:     "role_type_child_role_types_child_role_type_id",
				Columns:    []*schema.Column{RoleTypeChildRoleTypesColumns[1]},
				RefColumns: []*schema.Column{RoleTypesColumns[0]},
				OnDelete:   schema.Cascade,
			},
		},
	}
	// SkillTypeChildSkillTypesColumns holds the columns for the "skill_type_child_skill_types" table.
	SkillTypeChildSkillTypesColumns = []*schema.Column{
		{Name: "skill_type_id", Type: field.TypeInt},
		{Name: "child_skill_type_id", Type: field.TypeInt},
	}
	// SkillTypeChildSkillTypesTable holds the schema information for the "skill_type_child_skill_types" table.
	SkillTypeChildSkillTypesTable = &schema.Table{
		Name:       "skill_type_child_skill_types",
		Columns:    SkillTypeChildSkillTypesColumns,
		PrimaryKey: []*schema.Column{SkillTypeChildSkillTypesColumns[0], SkillTypeChildSkillTypesColumns[1]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "skill_type_child_skill_types_skill_type_id",
				Columns:    []*schema.Column{SkillTypeChildSkillTypesColumns[0]},
				RefColumns: []*schema.Column{SkillTypesColumns[0]},
				OnDelete:   schema.Cascade,
			},
			{
				Symbol:     "skill_type_child_skill_types_child_skill_type_id",
				Columns:    []*schema.Column{SkillTypeChildSkillTypesColumns[1]},
				RefColumns: []*schema.Column{SkillTypesColumns[0]},
				OnDelete:   schema.Cascade,
			},
		},
	}
	// StatusTypeChildStatusTypesColumns holds the columns for the "status_type_child_status_types" table.
	StatusTypeChildStatusTypesColumns = []*schema.Column{
		{Name: "status_type_id", Type: field.TypeInt},
		{Name: "child_status_type_id", Type: field.TypeInt},
	}
	// StatusTypeChildStatusTypesTable holds the schema information for the "status_type_child_status_types" table.
	StatusTypeChildStatusTypesTable = &schema.Table{
		Name:       "status_type_child_status_types",
		Columns:    StatusTypeChildStatusTypesColumns,
		PrimaryKey: []*schema.Column{StatusTypeChildStatusTypesColumns[0], StatusTypeChildStatusTypesColumns[1]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "status_type_child_status_types_status_type_id",
				Columns:    []*schema.Column{StatusTypeChildStatusTypesColumns[0]},
				RefColumns: []*schema.Column{StatusTypesColumns[0]},
				OnDelete:   schema.Cascade,
			},
			{
				Symbol:     "status_type_child_status_types_child_status_type_id",
				Columns:    []*schema.Column{StatusTypeChildStatusTypesColumns[1]},
				RefColumns: []*schema.Column{StatusTypesColumns[0]},
				OnDelete:   schema.Cascade,
			},
		},
	}
	// TermTypeChildTermTypesColumns holds the columns for the "term_type_child_term_types" table.
	TermTypeChildTermTypesColumns = []*schema.Column{
		{Name: "term_type_id", Type: field.TypeInt},
		{Name: "child_term_type_id", Type: field.TypeInt},
	}
	// TermTypeChildTermTypesTable holds the schema information for the "term_type_child_term_types" table.
	TermTypeChildTermTypesTable = &schema.Table{
		Name:       "term_type_child_term_types",
		Columns:    TermTypeChildTermTypesColumns,
		PrimaryKey: []*schema.Column{TermTypeChildTermTypesColumns[0], TermTypeChildTermTypesColumns[1]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "term_type_child_term_types_term_type_id",
				Columns:    []*schema.Column{TermTypeChildTermTypesColumns[0]},
				RefColumns: []*schema.Column{TermTypesColumns[0]},
				OnDelete:   schema.Cascade,
			},
			{
				Symbol:     "term_type_child_term_types_child_term_type_id",
				Columns:    []*schema.Column{TermTypeChildTermTypesColumns[1]},
				RefColumns: []*schema.Column{TermTypesColumns[0]},
				OnDelete:   schema.Cascade,
			},
		},
	}
	// WorkEffortChildWorkEffortsColumns holds the columns for the "work_effort_child_work_efforts" table.
	WorkEffortChildWorkEffortsColumns = []*schema.Column{
		{Name: "work_effort_id", Type: field.TypeInt},
		{Name: "child_work_effort_id", Type: field.TypeInt},
	}
	// WorkEffortChildWorkEffortsTable holds the schema information for the "work_effort_child_work_efforts" table.
	WorkEffortChildWorkEffortsTable = &schema.Table{
		Name:       "work_effort_child_work_efforts",
		Columns:    WorkEffortChildWorkEffortsColumns,
		PrimaryKey: []*schema.Column{WorkEffortChildWorkEffortsColumns[0], WorkEffortChildWorkEffortsColumns[1]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "work_effort_child_work_efforts_work_effort_id",
				Columns:    []*schema.Column{WorkEffortChildWorkEffortsColumns[0]},
				RefColumns: []*schema.Column{WorkEffortsColumns[0]},
				OnDelete:   schema.Cascade,
			},
			{
				Symbol:     "work_effort_child_work_efforts_child_work_effort_id",
				Columns:    []*schema.Column{WorkEffortChildWorkEffortsColumns[1]},
				RefColumns: []*schema.Column{WorkEffortsColumns[0]},
				OnDelete:   schema.Cascade,
			},
		},
	}
	// WorkEffortTypeChildWorkEffortTypesColumns holds the columns for the "work_effort_type_child_work_effort_types" table.
	WorkEffortTypeChildWorkEffortTypesColumns = []*schema.Column{
		{Name: "work_effort_type_id", Type: field.TypeInt},
		{Name: "child_work_effort_type_id", Type: field.TypeInt},
	}
	// WorkEffortTypeChildWorkEffortTypesTable holds the schema information for the "work_effort_type_child_work_effort_types" table.
	WorkEffortTypeChildWorkEffortTypesTable = &schema.Table{
		Name:       "work_effort_type_child_work_effort_types",
		Columns:    WorkEffortTypeChildWorkEffortTypesColumns,
		PrimaryKey: []*schema.Column{WorkEffortTypeChildWorkEffortTypesColumns[0], WorkEffortTypeChildWorkEffortTypesColumns[1]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "work_effort_type_child_work_effort_types_work_effort_type_id",
				Columns:    []*schema.Column{WorkEffortTypeChildWorkEffortTypesColumns[0]},
				RefColumns: []*schema.Column{WorkEffortTypesColumns[0]},
				OnDelete:   schema.Cascade,
			},
			{
				Symbol:     "work_effort_type_child_work_effort_types_child_work_effort_type_id",
				Columns:    []*schema.Column{WorkEffortTypeChildWorkEffortTypesColumns[1]},
				RefColumns: []*schema.Column{WorkEffortTypesColumns[0]},
				OnDelete:   schema.Cascade,
			},
		},
	}
	// Tables holds all the tables in the schema.
	Tables = []*schema.Table{
		CommunicationEventPrpTypsTable,
		CommunicationEventTypesTable,
		ContactMechPurposeTypesTable,
		ContactMechTypesTable,
		ContactMechTypePurposesTable,
		EnumerationsTable,
		EnumerationTypesTable,
		FixedAssetsTable,
		PartiesTable,
		PartyClassificationTypesTable,
		PartyContactMechesTable,
		PartyContentTypesTable,
		PartyIdentificationTypesTable,
		PartyQualTypesTable,
		PartyRelationshipTypesTable,
		PartyRolesTable,
		PartyStatusTable,
		PartyTypesTable,
		PersonsTable,
		RoleTypesTable,
		SecurityGroupsTable,
		SecurityGroupPermissionsTable,
		SecurityPermissionsTable,
		SkillTypesTable,
		StatusItemsTable,
		StatusTypesTable,
		StatusValidChangesTable,
		TemporalExpressionsTable,
		TemporalExpressionAssocsTable,
		TermTypesTable,
		UserLoginsTable,
		UserLoginSecurityGroupsTable,
		UserPreferencesTable,
		WorkEffortsTable,
		WorkEffortAssocsTable,
		WorkEffortFixedAssetAssignsTable,
		WorkEffortPartyAssignmentsTable,
		WorkEffortSkillStandardsTable,
		WorkEffortTypesTable,
		CommunicationEventPrpTypChildCommunicationEventPrpTypsTable,
		CommunicationEventTypeChildCommunicationEventTypesTable,
		ContactMechTypeChildContactMechTypesTable,
		EnumerationTypeChildEnumerationTypesTable,
		FixedAssetChildFixedAssetsTable,
		PartyClassificationTypeChildPartyClassificationTypesTable,
		PartyContentTypeChildPartyContentTypesTable,
		PartyIdentificationTypeChildPartyIdentificationTypesTable,
		PartyQualTypeChildPartyQualTypesTable,
		PartyRelationshipTypeChildPartyRelationshipTypesTable,
		PartyTypeSiblingPartyTypesTable,
		PartyTypeChildPartyTypesTable,
		RoleTypeChildRoleTypesTable,
		SkillTypeChildSkillTypesTable,
		StatusTypeChildStatusTypesTable,
		TermTypeChildTermTypesTable,
		WorkEffortChildWorkEffortsTable,
		WorkEffortTypeChildWorkEffortTypesTable,
	}
)

func init() {
	CommunicationEventPrpTypsTable.ForeignKeys[0].RefTable = CommunicationEventPrpTypsTable
	CommunicationEventTypesTable.ForeignKeys[0].RefTable = CommunicationEventTypesTable
	CommunicationEventTypesTable.ForeignKeys[1].RefTable = ContactMechTypesTable
	ContactMechTypesTable.ForeignKeys[0].RefTable = ContactMechTypesTable
	ContactMechTypePurposesTable.ForeignKeys[0].RefTable = ContactMechPurposeTypesTable
	ContactMechTypePurposesTable.ForeignKeys[1].RefTable = ContactMechTypesTable
	EnumerationsTable.ForeignKeys[0].RefTable = EnumerationTypesTable
	EnumerationTypesTable.ForeignKeys[0].RefTable = EnumerationTypesTable
	FixedAssetsTable.ForeignKeys[0].RefTable = EnumerationsTable
	FixedAssetsTable.ForeignKeys[1].RefTable = FixedAssetsTable
	FixedAssetsTable.ForeignKeys[2].RefTable = PartiesTable
	FixedAssetsTable.ForeignKeys[3].RefTable = PartyRolesTable
	FixedAssetsTable.ForeignKeys[4].RefTable = RoleTypesTable
	PartiesTable.ForeignKeys[0].RefTable = PartyTypesTable
	PartiesTable.ForeignKeys[1].RefTable = StatusItemsTable
	PartiesTable.ForeignKeys[2].RefTable = UserLoginsTable
	PartiesTable.ForeignKeys[3].RefTable = UserLoginsTable
	PartyClassificationTypesTable.ForeignKeys[0].RefTable = PartyClassificationTypesTable
	PartyContactMechesTable.ForeignKeys[0].RefTable = PartiesTable
	PartyContactMechesTable.ForeignKeys[1].RefTable = PartyRolesTable
	PartyContactMechesTable.ForeignKeys[2].RefTable = PersonsTable
	PartyContactMechesTable.ForeignKeys[3].RefTable = RoleTypesTable
	PartyContentTypesTable.ForeignKeys[0].RefTable = PartyContentTypesTable
	PartyIdentificationTypesTable.ForeignKeys[0].RefTable = PartyIdentificationTypesTable
	PartyQualTypesTable.ForeignKeys[0].RefTable = PartyQualTypesTable
	PartyRelationshipTypesTable.ForeignKeys[0].RefTable = PartyRelationshipTypesTable
	PartyRelationshipTypesTable.ForeignKeys[1].RefTable = RoleTypesTable
	PartyRelationshipTypesTable.ForeignKeys[2].RefTable = RoleTypesTable
	PartyRolesTable.ForeignKeys[0].RefTable = PartiesTable
	PartyRolesTable.ForeignKeys[1].RefTable = RoleTypesTable
	PartyStatusTable.ForeignKeys[0].RefTable = PartiesTable
	PartyStatusTable.ForeignKeys[1].RefTable = StatusItemsTable
	PartyStatusTable.ForeignKeys[2].RefTable = UserLoginsTable
	PartyTypesTable.ForeignKeys[0].RefTable = PartyTypesTable
	PersonsTable.ForeignKeys[0].RefTable = EnumerationsTable
	PersonsTable.ForeignKeys[1].RefTable = EnumerationsTable
	PersonsTable.ForeignKeys[2].RefTable = EnumerationsTable
	PersonsTable.ForeignKeys[3].RefTable = PartiesTable
	RoleTypesTable.ForeignKeys[0].RefTable = RoleTypesTable
	SecurityGroupPermissionsTable.ForeignKeys[0].RefTable = SecurityGroupsTable
	SecurityGroupPermissionsTable.ForeignKeys[1].RefTable = SecurityPermissionsTable
	SecurityGroupPermissionsTable.ForeignKeys[2].RefTable = UserLoginSecurityGroupsTable
	SkillTypesTable.ForeignKeys[0].RefTable = SkillTypesTable
	StatusItemsTable.ForeignKeys[0].RefTable = StatusTypesTable
	StatusTypesTable.ForeignKeys[0].RefTable = StatusTypesTable
	StatusValidChangesTable.ForeignKeys[0].RefTable = StatusItemsTable
	StatusValidChangesTable.ForeignKeys[1].RefTable = StatusItemsTable
	TemporalExpressionAssocsTable.ForeignKeys[0].RefTable = TemporalExpressionsTable
	TemporalExpressionAssocsTable.ForeignKeys[1].RefTable = TemporalExpressionsTable
	TermTypesTable.ForeignKeys[0].RefTable = TermTypesTable
	UserLoginsTable.ForeignKeys[0].RefTable = PartiesTable
	UserLoginsTable.ForeignKeys[1].RefTable = PersonsTable
	UserLoginSecurityGroupsTable.ForeignKeys[0].RefTable = SecurityGroupsTable
	UserLoginSecurityGroupsTable.ForeignKeys[1].RefTable = UserLoginsTable
	UserPreferencesTable.ForeignKeys[0].RefTable = UserLoginsTable
	WorkEffortsTable.ForeignKeys[0].RefTable = EnumerationsTable
	WorkEffortsTable.ForeignKeys[1].RefTable = FixedAssetsTable
	WorkEffortsTable.ForeignKeys[2].RefTable = StatusItemsTable
	WorkEffortsTable.ForeignKeys[3].RefTable = TemporalExpressionsTable
	WorkEffortsTable.ForeignKeys[4].RefTable = WorkEffortsTable
	WorkEffortsTable.ForeignKeys[5].RefTable = WorkEffortTypesTable
	WorkEffortAssocsTable.ForeignKeys[0].RefTable = WorkEffortsTable
	WorkEffortAssocsTable.ForeignKeys[1].RefTable = WorkEffortsTable
	WorkEffortFixedAssetAssignsTable.ForeignKeys[0].RefTable = FixedAssetsTable
	WorkEffortFixedAssetAssignsTable.ForeignKeys[1].RefTable = StatusItemsTable
	WorkEffortFixedAssetAssignsTable.ForeignKeys[2].RefTable = StatusItemsTable
	WorkEffortFixedAssetAssignsTable.ForeignKeys[3].RefTable = WorkEffortsTable
	WorkEffortPartyAssignmentsTable.ForeignKeys[0].RefTable = EnumerationsTable
	WorkEffortPartyAssignmentsTable.ForeignKeys[1].RefTable = EnumerationsTable
	WorkEffortPartyAssignmentsTable.ForeignKeys[2].RefTable = PartiesTable
	WorkEffortPartyAssignmentsTable.ForeignKeys[3].RefTable = PartyRolesTable
	WorkEffortPartyAssignmentsTable.ForeignKeys[4].RefTable = RoleTypesTable
	WorkEffortPartyAssignmentsTable.ForeignKeys[5].RefTable = StatusItemsTable
	WorkEffortPartyAssignmentsTable.ForeignKeys[6].RefTable = StatusItemsTable
	WorkEffortPartyAssignmentsTable.ForeignKeys[7].RefTable = UserLoginsTable
	WorkEffortPartyAssignmentsTable.ForeignKeys[8].RefTable = WorkEffortsTable
	WorkEffortSkillStandardsTable.ForeignKeys[0].RefTable = SkillTypesTable
	WorkEffortSkillStandardsTable.ForeignKeys[1].RefTable = WorkEffortsTable
	WorkEffortTypesTable.ForeignKeys[0].RefTable = WorkEffortTypesTable
	CommunicationEventPrpTypChildCommunicationEventPrpTypsTable.ForeignKeys[0].RefTable = CommunicationEventPrpTypsTable
	CommunicationEventPrpTypChildCommunicationEventPrpTypsTable.ForeignKeys[1].RefTable = CommunicationEventPrpTypsTable
	CommunicationEventTypeChildCommunicationEventTypesTable.ForeignKeys[0].RefTable = CommunicationEventTypesTable
	CommunicationEventTypeChildCommunicationEventTypesTable.ForeignKeys[1].RefTable = CommunicationEventTypesTable
	ContactMechTypeChildContactMechTypesTable.ForeignKeys[0].RefTable = ContactMechTypesTable
	ContactMechTypeChildContactMechTypesTable.ForeignKeys[1].RefTable = ContactMechTypesTable
	EnumerationTypeChildEnumerationTypesTable.ForeignKeys[0].RefTable = EnumerationTypesTable
	EnumerationTypeChildEnumerationTypesTable.ForeignKeys[1].RefTable = EnumerationTypesTable
	FixedAssetChildFixedAssetsTable.ForeignKeys[0].RefTable = FixedAssetsTable
	FixedAssetChildFixedAssetsTable.ForeignKeys[1].RefTable = FixedAssetsTable
	PartyClassificationTypeChildPartyClassificationTypesTable.ForeignKeys[0].RefTable = PartyClassificationTypesTable
	PartyClassificationTypeChildPartyClassificationTypesTable.ForeignKeys[1].RefTable = PartyClassificationTypesTable
	PartyContentTypeChildPartyContentTypesTable.ForeignKeys[0].RefTable = PartyContentTypesTable
	PartyContentTypeChildPartyContentTypesTable.ForeignKeys[1].RefTable = PartyContentTypesTable
	PartyIdentificationTypeChildPartyIdentificationTypesTable.ForeignKeys[0].RefTable = PartyIdentificationTypesTable
	PartyIdentificationTypeChildPartyIdentificationTypesTable.ForeignKeys[1].RefTable = PartyIdentificationTypesTable
	PartyQualTypeChildPartyQualTypesTable.ForeignKeys[0].RefTable = PartyQualTypesTable
	PartyQualTypeChildPartyQualTypesTable.ForeignKeys[1].RefTable = PartyQualTypesTable
	PartyRelationshipTypeChildPartyRelationshipTypesTable.ForeignKeys[0].RefTable = PartyRelationshipTypesTable
	PartyRelationshipTypeChildPartyRelationshipTypesTable.ForeignKeys[1].RefTable = PartyRelationshipTypesTable
	PartyTypeSiblingPartyTypesTable.ForeignKeys[0].RefTable = PartyTypesTable
	PartyTypeSiblingPartyTypesTable.ForeignKeys[1].RefTable = PartyTypesTable
	PartyTypeChildPartyTypesTable.ForeignKeys[0].RefTable = PartyTypesTable
	PartyTypeChildPartyTypesTable.ForeignKeys[1].RefTable = PartyTypesTable
	RoleTypeChildRoleTypesTable.ForeignKeys[0].RefTable = RoleTypesTable
	RoleTypeChildRoleTypesTable.ForeignKeys[1].RefTable = RoleTypesTable
	SkillTypeChildSkillTypesTable.ForeignKeys[0].RefTable = SkillTypesTable
	SkillTypeChildSkillTypesTable.ForeignKeys[1].RefTable = SkillTypesTable
	StatusTypeChildStatusTypesTable.ForeignKeys[0].RefTable = StatusTypesTable
	StatusTypeChildStatusTypesTable.ForeignKeys[1].RefTable = StatusTypesTable
	TermTypeChildTermTypesTable.ForeignKeys[0].RefTable = TermTypesTable
	TermTypeChildTermTypesTable.ForeignKeys[1].RefTable = TermTypesTable
	WorkEffortChildWorkEffortsTable.ForeignKeys[0].RefTable = WorkEffortsTable
	WorkEffortChildWorkEffortsTable.ForeignKeys[1].RefTable = WorkEffortsTable
	WorkEffortTypeChildWorkEffortTypesTable.ForeignKeys[0].RefTable = WorkEffortTypesTable
	WorkEffortTypeChildWorkEffortTypesTable.ForeignKeys[1].RefTable = WorkEffortTypesTable
}
