// Code generated by entc, DO NOT EDIT.

package securitygrouppermission

import (
	"time"
)

const (
	// Label holds the string label denoting the securitygrouppermission type in the database.
	Label = "security_group_permission"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldPermissionID holds the string denoting the permission_id field in the database.
	FieldPermissionID = "permission_id"
	// FieldFromDate holds the string denoting the from_date field in the database.
	FieldFromDate = "from_date"
	// FieldThruDate holds the string denoting the thru_date field in the database.
	FieldThruDate = "thru_date"
	// EdgeSecurityGroup holds the string denoting the security_group edge name in mutations.
	EdgeSecurityGroup = "security_group"
	// Table holds the table name of the securitygrouppermission in the database.
	Table = "security_group_permissions"
	// SecurityGroupTable is the table the holds the security_group relation/edge.
	SecurityGroupTable = "security_group_permissions"
	// SecurityGroupInverseTable is the table name for the SecurityGroup entity.
	// It exists in this package in order to avoid circular dependency with the "securitygroup" package.
	SecurityGroupInverseTable = "security_groups"
	// SecurityGroupColumn is the table column denoting the security_group relation/edge.
	SecurityGroupColumn = "security_group_security_group_permissions"
)

// Columns holds all SQL columns for securitygrouppermission fields.
var Columns = []string{
	FieldID,
	FieldPermissionID,
	FieldFromDate,
	FieldThruDate,
}

// ForeignKeys holds the SQL foreign-keys that are owned by the "security_group_permissions"
// table and are not defined as standalone fields in the schema.
var ForeignKeys = []string{
	"security_group_security_group_permissions",
	"user_login_security_group_security_group_permissions",
}

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	for i := range ForeignKeys {
		if column == ForeignKeys[i] {
			return true
		}
	}
	return false
}

var (
	// PermissionIDValidator is a validator for the "permission_id" field. It is called by the builders before save.
	PermissionIDValidator func(string) error
	// DefaultFromDate holds the default value on creation for the "from_date" field.
	DefaultFromDate func() time.Time
	// DefaultThruDate holds the default value on creation for the "thru_date" field.
	DefaultThruDate func() time.Time
)
