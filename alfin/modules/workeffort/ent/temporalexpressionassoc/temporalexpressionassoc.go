// Code generated by entc, DO NOT EDIT.

package temporalexpressionassoc

import (
	"time"
)

const (
	// Label holds the string label denoting the temporalexpressionassoc type in the database.
	Label = "temporal_expression_assoc"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldCreateTime holds the string denoting the create_time field in the database.
	FieldCreateTime = "create_time"
	// FieldUpdateTime holds the string denoting the update_time field in the database.
	FieldUpdateTime = "update_time"
	// FieldStringRef holds the string denoting the string_ref field in the database.
	FieldStringRef = "string_ref"
	// FieldExprAssocType holds the string denoting the expr_assoc_type field in the database.
	FieldExprAssocType = "expr_assoc_type"
	// EdgeFromTemporalExpression holds the string denoting the from_temporal_expression edge name in mutations.
	EdgeFromTemporalExpression = "from_temporal_expression"
	// EdgeToTemporalExpression holds the string denoting the to_temporal_expression edge name in mutations.
	EdgeToTemporalExpression = "to_temporal_expression"
	// Table holds the table name of the temporalexpressionassoc in the database.
	Table = "temporal_expression_assocs"
	// FromTemporalExpressionTable is the table the holds the from_temporal_expression relation/edge.
	FromTemporalExpressionTable = "temporal_expression_assocs"
	// FromTemporalExpressionInverseTable is the table name for the TemporalExpression entity.
	// It exists in this package in order to avoid circular dependency with the "temporalexpression" package.
	FromTemporalExpressionInverseTable = "temporal_expressions"
	// FromTemporalExpressionColumn is the table column denoting the from_temporal_expression relation/edge.
	FromTemporalExpressionColumn = "temporal_expression_from_temporal_expression_assocs"
	// ToTemporalExpressionTable is the table the holds the to_temporal_expression relation/edge.
	ToTemporalExpressionTable = "temporal_expression_assocs"
	// ToTemporalExpressionInverseTable is the table name for the TemporalExpression entity.
	// It exists in this package in order to avoid circular dependency with the "temporalexpression" package.
	ToTemporalExpressionInverseTable = "temporal_expressions"
	// ToTemporalExpressionColumn is the table column denoting the to_temporal_expression relation/edge.
	ToTemporalExpressionColumn = "temporal_expression_to_temporal_expression_assocs"
)

// Columns holds all SQL columns for temporalexpressionassoc fields.
var Columns = []string{
	FieldID,
	FieldCreateTime,
	FieldUpdateTime,
	FieldStringRef,
	FieldExprAssocType,
}

// ForeignKeys holds the SQL foreign-keys that are owned by the "temporal_expression_assocs"
// table and are not defined as standalone fields in the schema.
var ForeignKeys = []string{
	"temporal_expression_from_temporal_expression_assocs",
	"temporal_expression_to_temporal_expression_assocs",
}

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	for i := range ForeignKeys {
		if column == ForeignKeys[i] {
			return true
		}
	}
	return false
}

var (
	// DefaultCreateTime holds the default value on creation for the "create_time" field.
	DefaultCreateTime func() time.Time
	// DefaultUpdateTime holds the default value on creation for the "update_time" field.
	DefaultUpdateTime func() time.Time
	// UpdateDefaultUpdateTime holds the default value on update for the "update_time" field.
	UpdateDefaultUpdateTime func() time.Time
)
