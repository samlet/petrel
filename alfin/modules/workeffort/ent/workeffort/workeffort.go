// Code generated by entc, DO NOT EDIT.

package workeffort

import (
	"fmt"
	"time"
)

const (
	// Label holds the string label denoting the workeffort type in the database.
	Label = "work_effort"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldCreateTime holds the string denoting the create_time field in the database.
	FieldCreateTime = "create_time"
	// FieldUpdateTime holds the string denoting the update_time field in the database.
	FieldUpdateTime = "update_time"
	// FieldStringRef holds the string denoting the string_ref field in the database.
	FieldStringRef = "string_ref"
	// FieldLastStatusUpdate holds the string denoting the last_status_update field in the database.
	FieldLastStatusUpdate = "last_status_update"
	// FieldWorkEffortPurposeTypeID holds the string denoting the work_effort_purpose_type_id field in the database.
	FieldWorkEffortPurposeTypeID = "work_effort_purpose_type_id"
	// FieldPriority holds the string denoting the priority field in the database.
	FieldPriority = "priority"
	// FieldPercentComplete holds the string denoting the percent_complete field in the database.
	FieldPercentComplete = "percent_complete"
	// FieldWorkEffortName holds the string denoting the work_effort_name field in the database.
	FieldWorkEffortName = "work_effort_name"
	// FieldShowAsEnumID holds the string denoting the show_as_enum_id field in the database.
	FieldShowAsEnumID = "show_as_enum_id"
	// FieldSendNotificationEmail holds the string denoting the send_notification_email field in the database.
	FieldSendNotificationEmail = "send_notification_email"
	// FieldDescription holds the string denoting the description field in the database.
	FieldDescription = "description"
	// FieldLocationDesc holds the string denoting the location_desc field in the database.
	FieldLocationDesc = "location_desc"
	// FieldEstimatedStartDate holds the string denoting the estimated_start_date field in the database.
	FieldEstimatedStartDate = "estimated_start_date"
	// FieldEstimatedCompletionDate holds the string denoting the estimated_completion_date field in the database.
	FieldEstimatedCompletionDate = "estimated_completion_date"
	// FieldActualStartDate holds the string denoting the actual_start_date field in the database.
	FieldActualStartDate = "actual_start_date"
	// FieldActualCompletionDate holds the string denoting the actual_completion_date field in the database.
	FieldActualCompletionDate = "actual_completion_date"
	// FieldEstimatedMilliSeconds holds the string denoting the estimated_milli_seconds field in the database.
	FieldEstimatedMilliSeconds = "estimated_milli_seconds"
	// FieldEstimatedSetupMillis holds the string denoting the estimated_setup_millis field in the database.
	FieldEstimatedSetupMillis = "estimated_setup_millis"
	// FieldEstimateCalcMethod holds the string denoting the estimate_calc_method field in the database.
	FieldEstimateCalcMethod = "estimate_calc_method"
	// FieldActualMilliSeconds holds the string denoting the actual_milli_seconds field in the database.
	FieldActualMilliSeconds = "actual_milli_seconds"
	// FieldActualSetupMillis holds the string denoting the actual_setup_millis field in the database.
	FieldActualSetupMillis = "actual_setup_millis"
	// FieldTotalMilliSecondsAllowed holds the string denoting the total_milli_seconds_allowed field in the database.
	FieldTotalMilliSecondsAllowed = "total_milli_seconds_allowed"
	// FieldTotalMoneyAllowed holds the string denoting the total_money_allowed field in the database.
	FieldTotalMoneyAllowed = "total_money_allowed"
	// FieldMoneyUomID holds the string denoting the money_uom_id field in the database.
	FieldMoneyUomID = "money_uom_id"
	// FieldSpecialTerms holds the string denoting the special_terms field in the database.
	FieldSpecialTerms = "special_terms"
	// FieldTimeTransparency holds the string denoting the time_transparency field in the database.
	FieldTimeTransparency = "time_transparency"
	// FieldUniversalID holds the string denoting the universal_id field in the database.
	FieldUniversalID = "universal_id"
	// FieldSourceReferenceID holds the string denoting the source_reference_id field in the database.
	FieldSourceReferenceID = "source_reference_id"
	// FieldFacilityID holds the string denoting the facility_id field in the database.
	FieldFacilityID = "facility_id"
	// FieldInfoURL holds the string denoting the info_url field in the database.
	FieldInfoURL = "info_url"
	// FieldRecurrenceInfoID holds the string denoting the recurrence_info_id field in the database.
	FieldRecurrenceInfoID = "recurrence_info_id"
	// FieldRuntimeDataID holds the string denoting the runtime_data_id field in the database.
	FieldRuntimeDataID = "runtime_data_id"
	// FieldNoteID holds the string denoting the note_id field in the database.
	FieldNoteID = "note_id"
	// FieldServiceLoaderName holds the string denoting the service_loader_name field in the database.
	FieldServiceLoaderName = "service_loader_name"
	// FieldQuantityToProduce holds the string denoting the quantity_to_produce field in the database.
	FieldQuantityToProduce = "quantity_to_produce"
	// FieldQuantityProduced holds the string denoting the quantity_produced field in the database.
	FieldQuantityProduced = "quantity_produced"
	// FieldQuantityRejected holds the string denoting the quantity_rejected field in the database.
	FieldQuantityRejected = "quantity_rejected"
	// FieldReservPersons holds the string denoting the reserv_persons field in the database.
	FieldReservPersons = "reserv_persons"
	// FieldReserv2NdPpPerc holds the string denoting the reserv_2_nd_pp_perc field in the database.
	FieldReserv2NdPpPerc = "reserv_2_nd_pp_perc"
	// FieldReservNthPpPerc holds the string denoting the reserv_nth_pp_perc field in the database.
	FieldReservNthPpPerc = "reserv_nth_pp_perc"
	// FieldAccommodationMapID holds the string denoting the accommodation_map_id field in the database.
	FieldAccommodationMapID = "accommodation_map_id"
	// FieldAccommodationSpotID holds the string denoting the accommodation_spot_id field in the database.
	FieldAccommodationSpotID = "accommodation_spot_id"
	// FieldRevisionNumber holds the string denoting the revision_number field in the database.
	FieldRevisionNumber = "revision_number"
	// FieldCreatedDate holds the string denoting the created_date field in the database.
	FieldCreatedDate = "created_date"
	// FieldCreatedByUserLogin holds the string denoting the created_by_user_login field in the database.
	FieldCreatedByUserLogin = "created_by_user_login"
	// FieldLastModifiedDate holds the string denoting the last_modified_date field in the database.
	FieldLastModifiedDate = "last_modified_date"
	// FieldLastModifiedByUserLogin holds the string denoting the last_modified_by_user_login field in the database.
	FieldLastModifiedByUserLogin = "last_modified_by_user_login"
	// FieldSequenceNum holds the string denoting the sequence_num field in the database.
	FieldSequenceNum = "sequence_num"
	// EdgeWorkEffortType holds the string denoting the work_effort_type edge name in mutations.
	EdgeWorkEffortType = "work_effort_type"
	// EdgeParent holds the string denoting the parent edge name in mutations.
	EdgeParent = "parent"
	// EdgeChildren holds the string denoting the children edge name in mutations.
	EdgeChildren = "children"
	// EdgeCurrentStatusItem holds the string denoting the current_status_item edge name in mutations.
	EdgeCurrentStatusItem = "current_status_item"
	// EdgeScopeEnumeration holds the string denoting the scope_enumeration edge name in mutations.
	EdgeScopeEnumeration = "scope_enumeration"
	// EdgeFixedAsset holds the string denoting the fixed_asset edge name in mutations.
	EdgeFixedAsset = "fixed_asset"
	// EdgeTemporalExpression holds the string denoting the temporal_expression edge name in mutations.
	EdgeTemporalExpression = "temporal_expression"
	// EdgeChildWorkEfforts holds the string denoting the child_work_efforts edge name in mutations.
	EdgeChildWorkEfforts = "child_work_efforts"
	// EdgeFromWorkEffortAssocs holds the string denoting the from_work_effort_assocs edge name in mutations.
	EdgeFromWorkEffortAssocs = "from_work_effort_assocs"
	// EdgeToWorkEffortAssocs holds the string denoting the to_work_effort_assocs edge name in mutations.
	EdgeToWorkEffortAssocs = "to_work_effort_assocs"
	// EdgeWorkEffortFixedAssetAssigns holds the string denoting the work_effort_fixed_asset_assigns edge name in mutations.
	EdgeWorkEffortFixedAssetAssigns = "work_effort_fixed_asset_assigns"
	// EdgeWorkEffortPartyAssignments holds the string denoting the work_effort_party_assignments edge name in mutations.
	EdgeWorkEffortPartyAssignments = "work_effort_party_assignments"
	// EdgeWorkEffortSkillStandards holds the string denoting the work_effort_skill_standards edge name in mutations.
	EdgeWorkEffortSkillStandards = "work_effort_skill_standards"
	// Table holds the table name of the workeffort in the database.
	Table = "work_efforts"
	// WorkEffortTypeTable is the table the holds the work_effort_type relation/edge.
	WorkEffortTypeTable = "work_efforts"
	// WorkEffortTypeInverseTable is the table name for the WorkEffortType entity.
	// It exists in this package in order to avoid circular dependency with the "workefforttype" package.
	WorkEffortTypeInverseTable = "work_effort_types"
	// WorkEffortTypeColumn is the table column denoting the work_effort_type relation/edge.
	WorkEffortTypeColumn = "work_effort_type_work_efforts"
	// ParentTable is the table the holds the parent relation/edge.
	ParentTable = "work_efforts"
	// ParentColumn is the table column denoting the parent relation/edge.
	ParentColumn = "work_effort_children"
	// ChildrenTable is the table the holds the children relation/edge.
	ChildrenTable = "work_efforts"
	// ChildrenColumn is the table column denoting the children relation/edge.
	ChildrenColumn = "work_effort_children"
	// CurrentStatusItemTable is the table the holds the current_status_item relation/edge.
	CurrentStatusItemTable = "work_efforts"
	// CurrentStatusItemInverseTable is the table name for the StatusItem entity.
	// It exists in this package in order to avoid circular dependency with the "statusitem" package.
	CurrentStatusItemInverseTable = "status_items"
	// CurrentStatusItemColumn is the table column denoting the current_status_item relation/edge.
	CurrentStatusItemColumn = "status_item_current_work_efforts"
	// ScopeEnumerationTable is the table the holds the scope_enumeration relation/edge.
	ScopeEnumerationTable = "work_efforts"
	// ScopeEnumerationInverseTable is the table name for the Enumeration entity.
	// It exists in this package in order to avoid circular dependency with the "enumeration" package.
	ScopeEnumerationInverseTable = "enumerations"
	// ScopeEnumerationColumn is the table column denoting the scope_enumeration relation/edge.
	ScopeEnumerationColumn = "enumeration_scope_work_efforts"
	// FixedAssetTable is the table the holds the fixed_asset relation/edge.
	FixedAssetTable = "work_efforts"
	// FixedAssetInverseTable is the table name for the FixedAsset entity.
	// It exists in this package in order to avoid circular dependency with the "fixedasset" package.
	FixedAssetInverseTable = "fixed_assets"
	// FixedAssetColumn is the table column denoting the fixed_asset relation/edge.
	FixedAssetColumn = "fixed_asset_work_efforts"
	// TemporalExpressionTable is the table the holds the temporal_expression relation/edge.
	TemporalExpressionTable = "work_efforts"
	// TemporalExpressionInverseTable is the table name for the TemporalExpression entity.
	// It exists in this package in order to avoid circular dependency with the "temporalexpression" package.
	TemporalExpressionInverseTable = "temporal_expressions"
	// TemporalExpressionColumn is the table column denoting the temporal_expression relation/edge.
	TemporalExpressionColumn = "temporal_expression_work_efforts"
	// ChildWorkEffortsTable is the table the holds the child_work_efforts relation/edge. The primary key declared below.
	ChildWorkEffortsTable = "work_effort_child_work_efforts"
	// FromWorkEffortAssocsTable is the table the holds the from_work_effort_assocs relation/edge.
	FromWorkEffortAssocsTable = "work_effort_assocs"
	// FromWorkEffortAssocsInverseTable is the table name for the WorkEffortAssoc entity.
	// It exists in this package in order to avoid circular dependency with the "workeffortassoc" package.
	FromWorkEffortAssocsInverseTable = "work_effort_assocs"
	// FromWorkEffortAssocsColumn is the table column denoting the from_work_effort_assocs relation/edge.
	FromWorkEffortAssocsColumn = "work_effort_from_work_effort_assocs"
	// ToWorkEffortAssocsTable is the table the holds the to_work_effort_assocs relation/edge.
	ToWorkEffortAssocsTable = "work_effort_assocs"
	// ToWorkEffortAssocsInverseTable is the table name for the WorkEffortAssoc entity.
	// It exists in this package in order to avoid circular dependency with the "workeffortassoc" package.
	ToWorkEffortAssocsInverseTable = "work_effort_assocs"
	// ToWorkEffortAssocsColumn is the table column denoting the to_work_effort_assocs relation/edge.
	ToWorkEffortAssocsColumn = "work_effort_to_work_effort_assocs"
	// WorkEffortFixedAssetAssignsTable is the table the holds the work_effort_fixed_asset_assigns relation/edge.
	WorkEffortFixedAssetAssignsTable = "work_effort_fixed_asset_assigns"
	// WorkEffortFixedAssetAssignsInverseTable is the table name for the WorkEffortFixedAssetAssign entity.
	// It exists in this package in order to avoid circular dependency with the "workeffortfixedassetassign" package.
	WorkEffortFixedAssetAssignsInverseTable = "work_effort_fixed_asset_assigns"
	// WorkEffortFixedAssetAssignsColumn is the table column denoting the work_effort_fixed_asset_assigns relation/edge.
	WorkEffortFixedAssetAssignsColumn = "work_effort_work_effort_fixed_asset_assigns"
	// WorkEffortPartyAssignmentsTable is the table the holds the work_effort_party_assignments relation/edge.
	WorkEffortPartyAssignmentsTable = "work_effort_party_assignments"
	// WorkEffortPartyAssignmentsInverseTable is the table name for the WorkEffortPartyAssignment entity.
	// It exists in this package in order to avoid circular dependency with the "workeffortpartyassignment" package.
	WorkEffortPartyAssignmentsInverseTable = "work_effort_party_assignments"
	// WorkEffortPartyAssignmentsColumn is the table column denoting the work_effort_party_assignments relation/edge.
	WorkEffortPartyAssignmentsColumn = "work_effort_work_effort_party_assignments"
	// WorkEffortSkillStandardsTable is the table the holds the work_effort_skill_standards relation/edge.
	WorkEffortSkillStandardsTable = "work_effort_skill_standards"
	// WorkEffortSkillStandardsInverseTable is the table name for the WorkEffortSkillStandard entity.
	// It exists in this package in order to avoid circular dependency with the "workeffortskillstandard" package.
	WorkEffortSkillStandardsInverseTable = "work_effort_skill_standards"
	// WorkEffortSkillStandardsColumn is the table column denoting the work_effort_skill_standards relation/edge.
	WorkEffortSkillStandardsColumn = "work_effort_work_effort_skill_standards"
)

// Columns holds all SQL columns for workeffort fields.
var Columns = []string{
	FieldID,
	FieldCreateTime,
	FieldUpdateTime,
	FieldStringRef,
	FieldLastStatusUpdate,
	FieldWorkEffortPurposeTypeID,
	FieldPriority,
	FieldPercentComplete,
	FieldWorkEffortName,
	FieldShowAsEnumID,
	FieldSendNotificationEmail,
	FieldDescription,
	FieldLocationDesc,
	FieldEstimatedStartDate,
	FieldEstimatedCompletionDate,
	FieldActualStartDate,
	FieldActualCompletionDate,
	FieldEstimatedMilliSeconds,
	FieldEstimatedSetupMillis,
	FieldEstimateCalcMethod,
	FieldActualMilliSeconds,
	FieldActualSetupMillis,
	FieldTotalMilliSecondsAllowed,
	FieldTotalMoneyAllowed,
	FieldMoneyUomID,
	FieldSpecialTerms,
	FieldTimeTransparency,
	FieldUniversalID,
	FieldSourceReferenceID,
	FieldFacilityID,
	FieldInfoURL,
	FieldRecurrenceInfoID,
	FieldRuntimeDataID,
	FieldNoteID,
	FieldServiceLoaderName,
	FieldQuantityToProduce,
	FieldQuantityProduced,
	FieldQuantityRejected,
	FieldReservPersons,
	FieldReserv2NdPpPerc,
	FieldReservNthPpPerc,
	FieldAccommodationMapID,
	FieldAccommodationSpotID,
	FieldRevisionNumber,
	FieldCreatedDate,
	FieldCreatedByUserLogin,
	FieldLastModifiedDate,
	FieldLastModifiedByUserLogin,
	FieldSequenceNum,
}

// ForeignKeys holds the SQL foreign-keys that are owned by the "work_efforts"
// table and are not defined as standalone fields in the schema.
var ForeignKeys = []string{
	"enumeration_scope_work_efforts",
	"fixed_asset_work_efforts",
	"status_item_current_work_efforts",
	"temporal_expression_work_efforts",
	"work_effort_children",
	"work_effort_type_work_efforts",
}

var (
	// ChildWorkEffortsPrimaryKey and ChildWorkEffortsColumn2 are the table columns denoting the
	// primary key for the child_work_efforts relation (M2M).
	ChildWorkEffortsPrimaryKey = []string{"work_effort_id", "child_work_effort_id"}
)

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	for i := range ForeignKeys {
		if column == ForeignKeys[i] {
			return true
		}
	}
	return false
}

var (
	// DefaultCreateTime holds the default value on creation for the "create_time" field.
	DefaultCreateTime func() time.Time
	// DefaultUpdateTime holds the default value on creation for the "update_time" field.
	DefaultUpdateTime func() time.Time
	// UpdateDefaultUpdateTime holds the default value on update for the "update_time" field.
	UpdateDefaultUpdateTime func() time.Time
	// DefaultLastStatusUpdate holds the default value on creation for the "last_status_update" field.
	DefaultLastStatusUpdate func() time.Time
	// DefaultEstimatedStartDate holds the default value on creation for the "estimated_start_date" field.
	DefaultEstimatedStartDate func() time.Time
	// DefaultEstimatedCompletionDate holds the default value on creation for the "estimated_completion_date" field.
	DefaultEstimatedCompletionDate func() time.Time
	// DefaultActualStartDate holds the default value on creation for the "actual_start_date" field.
	DefaultActualStartDate func() time.Time
	// DefaultActualCompletionDate holds the default value on creation for the "actual_completion_date" field.
	DefaultActualCompletionDate func() time.Time
	// SourceReferenceIDValidator is a validator for the "source_reference_id" field. It is called by the builders before save.
	SourceReferenceIDValidator func(string) error
	// DefaultCreatedDate holds the default value on creation for the "created_date" field.
	DefaultCreatedDate func() time.Time
	// DefaultLastModifiedDate holds the default value on creation for the "last_modified_date" field.
	DefaultLastModifiedDate func() time.Time
)

// SendNotificationEmail defines the type for the "send_notification_email" enum field.
type SendNotificationEmail string

// SendNotificationEmail values.
const (
	SendNotificationEmailYes     SendNotificationEmail = "Yes"
	SendNotificationEmailNo      SendNotificationEmail = "No"
	SendNotificationEmailUnknown SendNotificationEmail = "Unknown"
)

func (sne SendNotificationEmail) String() string {
	return string(sne)
}

// SendNotificationEmailValidator is a validator for the "send_notification_email" field enum values. It is called by the builders before save.
func SendNotificationEmailValidator(sne SendNotificationEmail) error {
	switch sne {
	case SendNotificationEmailYes, SendNotificationEmailNo, SendNotificationEmailUnknown:
		return nil
	default:
		return fmt.Errorf("workeffort: invalid enum value for send_notification_email field: %q", sne)
	}
}
