// Code generated by entc, DO NOT EDIT.

package workeffortassoc

import (
	"time"
)

const (
	// Label holds the string label denoting the workeffortassoc type in the database.
	Label = "work_effort_assoc"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldCreateTime holds the string denoting the create_time field in the database.
	FieldCreateTime = "create_time"
	// FieldUpdateTime holds the string denoting the update_time field in the database.
	FieldUpdateTime = "update_time"
	// FieldStringRef holds the string denoting the string_ref field in the database.
	FieldStringRef = "string_ref"
	// FieldWorkEffortAssocTypeID holds the string denoting the work_effort_assoc_type_id field in the database.
	FieldWorkEffortAssocTypeID = "work_effort_assoc_type_id"
	// FieldSequenceNum holds the string denoting the sequence_num field in the database.
	FieldSequenceNum = "sequence_num"
	// FieldFromDate holds the string denoting the from_date field in the database.
	FieldFromDate = "from_date"
	// FieldThruDate holds the string denoting the thru_date field in the database.
	FieldThruDate = "thru_date"
	// EdgeFromWorkEffort holds the string denoting the from_work_effort edge name in mutations.
	EdgeFromWorkEffort = "from_work_effort"
	// EdgeToWorkEffort holds the string denoting the to_work_effort edge name in mutations.
	EdgeToWorkEffort = "to_work_effort"
	// Table holds the table name of the workeffortassoc in the database.
	Table = "work_effort_assocs"
	// FromWorkEffortTable is the table the holds the from_work_effort relation/edge.
	FromWorkEffortTable = "work_effort_assocs"
	// FromWorkEffortInverseTable is the table name for the WorkEffort entity.
	// It exists in this package in order to avoid circular dependency with the "workeffort" package.
	FromWorkEffortInverseTable = "work_efforts"
	// FromWorkEffortColumn is the table column denoting the from_work_effort relation/edge.
	FromWorkEffortColumn = "work_effort_from_work_effort_assocs"
	// ToWorkEffortTable is the table the holds the to_work_effort relation/edge.
	ToWorkEffortTable = "work_effort_assocs"
	// ToWorkEffortInverseTable is the table name for the WorkEffort entity.
	// It exists in this package in order to avoid circular dependency with the "workeffort" package.
	ToWorkEffortInverseTable = "work_efforts"
	// ToWorkEffortColumn is the table column denoting the to_work_effort relation/edge.
	ToWorkEffortColumn = "work_effort_to_work_effort_assocs"
)

// Columns holds all SQL columns for workeffortassoc fields.
var Columns = []string{
	FieldID,
	FieldCreateTime,
	FieldUpdateTime,
	FieldStringRef,
	FieldWorkEffortAssocTypeID,
	FieldSequenceNum,
	FieldFromDate,
	FieldThruDate,
}

// ForeignKeys holds the SQL foreign-keys that are owned by the "work_effort_assocs"
// table and are not defined as standalone fields in the schema.
var ForeignKeys = []string{
	"work_effort_from_work_effort_assocs",
	"work_effort_to_work_effort_assocs",
}

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	for i := range ForeignKeys {
		if column == ForeignKeys[i] {
			return true
		}
	}
	return false
}

var (
	// DefaultCreateTime holds the default value on creation for the "create_time" field.
	DefaultCreateTime func() time.Time
	// DefaultUpdateTime holds the default value on creation for the "update_time" field.
	DefaultUpdateTime func() time.Time
	// UpdateDefaultUpdateTime holds the default value on update for the "update_time" field.
	UpdateDefaultUpdateTime func() time.Time
	// DefaultFromDate holds the default value on creation for the "from_date" field.
	DefaultFromDate func() time.Time
	// DefaultThruDate holds the default value on creation for the "thru_date" field.
	DefaultThruDate func() time.Time
)
