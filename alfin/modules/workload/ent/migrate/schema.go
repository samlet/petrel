// Code generated by entc, DO NOT EDIT.

package migrate

import (
	"entgo.io/ent/dialect/sql/schema"
	"entgo.io/ent/schema/field"
)

var (
	// WorkloadsColumns holds the columns for the "workloads" table.
	WorkloadsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "create_time", Type: field.TypeTime},
		{Name: "update_time", Type: field.TypeTime},
		{Name: "status_id", Type: field.TypeInt, Nullable: true},
		{Name: "workload_name", Type: field.TypeString, Nullable: true},
		{Name: "description", Type: field.TypeString, Nullable: true},
		{Name: "long_description", Type: field.TypeString, Nullable: true},
		{Name: "comments", Type: field.TypeString, Nullable: true},
		{Name: "workload_size", Type: field.TypeInt, Nullable: true},
		{Name: "workload_date", Type: field.TypeTime, Nullable: true},
		{Name: "another_date", Type: field.TypeTime, Nullable: true},
		{Name: "another_text", Type: field.TypeString, Nullable: true},
		{Name: "workload_type_workloads", Type: field.TypeInt, Nullable: true},
	}
	// WorkloadsTable holds the schema information for the "workloads" table.
	WorkloadsTable = &schema.Table{
		Name:       "workloads",
		Columns:    WorkloadsColumns,
		PrimaryKey: []*schema.Column{WorkloadsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "workloads_workload_types_workloads",
				Columns:    []*schema.Column{WorkloadsColumns[12]},
				RefColumns: []*schema.Column{WorkloadTypesColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// WorkloadFeaturesColumns holds the columns for the "workload_features" table.
	WorkloadFeaturesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "create_time", Type: field.TypeTime},
		{Name: "update_time", Type: field.TypeTime},
		{Name: "feature_source_enum_id", Type: field.TypeInt, Nullable: true},
		{Name: "description", Type: field.TypeString, Nullable: true},
	}
	// WorkloadFeaturesTable holds the schema information for the "workload_features" table.
	WorkloadFeaturesTable = &schema.Table{
		Name:        "workload_features",
		Columns:     WorkloadFeaturesColumns,
		PrimaryKey:  []*schema.Column{WorkloadFeaturesColumns[0]},
		ForeignKeys: []*schema.ForeignKey{},
	}
	// WorkloadFeatureApplsColumns holds the columns for the "workload_feature_appls" table.
	WorkloadFeatureApplsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "create_time", Type: field.TypeTime},
		{Name: "update_time", Type: field.TypeTime},
		{Name: "from_date", Type: field.TypeTime},
		{Name: "thru_date", Type: field.TypeTime, Nullable: true},
		{Name: "sequence_num", Type: field.TypeInt, Nullable: true},
		{Name: "workload_workload_feature_appls", Type: field.TypeInt, Nullable: true},
		{Name: "workload_feature_workload_feature_appls", Type: field.TypeInt, Nullable: true},
		{Name: "workload_feature_appl_type_workload_feature_appls", Type: field.TypeInt, Nullable: true},
	}
	// WorkloadFeatureApplsTable holds the schema information for the "workload_feature_appls" table.
	WorkloadFeatureApplsTable = &schema.Table{
		Name:       "workload_feature_appls",
		Columns:    WorkloadFeatureApplsColumns,
		PrimaryKey: []*schema.Column{WorkloadFeatureApplsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "workload_feature_appls_workloads_workload_feature_appls",
				Columns:    []*schema.Column{WorkloadFeatureApplsColumns[6]},
				RefColumns: []*schema.Column{WorkloadsColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "workload_feature_appls_workload_features_workload_feature_appls",
				Columns:    []*schema.Column{WorkloadFeatureApplsColumns[7]},
				RefColumns: []*schema.Column{WorkloadFeaturesColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "workload_feature_appls_workload_feature_appl_types_workload_feature_appls",
				Columns:    []*schema.Column{WorkloadFeatureApplsColumns[8]},
				RefColumns: []*schema.Column{WorkloadFeatureApplTypesColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// WorkloadFeatureApplTypesColumns holds the columns for the "workload_feature_appl_types" table.
	WorkloadFeatureApplTypesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "create_time", Type: field.TypeTime},
		{Name: "update_time", Type: field.TypeTime},
		{Name: "description", Type: field.TypeString, Nullable: true},
		{Name: "workload_feature_appl_type_children", Type: field.TypeInt, Nullable: true},
	}
	// WorkloadFeatureApplTypesTable holds the schema information for the "workload_feature_appl_types" table.
	WorkloadFeatureApplTypesTable = &schema.Table{
		Name:       "workload_feature_appl_types",
		Columns:    WorkloadFeatureApplTypesColumns,
		PrimaryKey: []*schema.Column{WorkloadFeatureApplTypesColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "workload_feature_appl_types_workload_feature_appl_types_children",
				Columns:    []*schema.Column{WorkloadFeatureApplTypesColumns[4]},
				RefColumns: []*schema.Column{WorkloadFeatureApplTypesColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// WorkloadItemsColumns holds the columns for the "workload_items" table.
	WorkloadItemsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "create_time", Type: field.TypeTime},
		{Name: "update_time", Type: field.TypeTime},
		{Name: "workload_item_seq_id", Type: field.TypeInt},
		{Name: "description", Type: field.TypeString, Nullable: true},
		{Name: "amount", Type: field.TypeFloat64, Nullable: true},
		{Name: "amount_uom_id", Type: field.TypeInt, Nullable: true},
		{Name: "workload_workload_items", Type: field.TypeInt, Nullable: true},
	}
	// WorkloadItemsTable holds the schema information for the "workload_items" table.
	WorkloadItemsTable = &schema.Table{
		Name:       "workload_items",
		Columns:    WorkloadItemsColumns,
		PrimaryKey: []*schema.Column{WorkloadItemsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "workload_items_workloads_workload_items",
				Columns:    []*schema.Column{WorkloadItemsColumns[7]},
				RefColumns: []*schema.Column{WorkloadsColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// WorkloadStatusColumns holds the columns for the "workload_status" table.
	WorkloadStatusColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "create_time", Type: field.TypeTime},
		{Name: "update_time", Type: field.TypeTime},
		{Name: "status_date", Type: field.TypeTime},
		{Name: "status_end_date", Type: field.TypeTime, Nullable: true},
		{Name: "change_by_user_login_id", Type: field.TypeString, Nullable: true},
		{Name: "status_id", Type: field.TypeInt, Nullable: true},
		{Name: "workload_workload_statuses", Type: field.TypeInt, Nullable: true},
	}
	// WorkloadStatusTable holds the schema information for the "workload_status" table.
	WorkloadStatusTable = &schema.Table{
		Name:       "workload_status",
		Columns:    WorkloadStatusColumns,
		PrimaryKey: []*schema.Column{WorkloadStatusColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "workload_status_workloads_workload_statuses",
				Columns:    []*schema.Column{WorkloadStatusColumns[7]},
				RefColumns: []*schema.Column{WorkloadsColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// WorkloadTypesColumns holds the columns for the "workload_types" table.
	WorkloadTypesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "create_time", Type: field.TypeTime},
		{Name: "update_time", Type: field.TypeTime},
		{Name: "description", Type: field.TypeString, Nullable: true},
		{Name: "workload_type_children", Type: field.TypeInt, Nullable: true},
	}
	// WorkloadTypesTable holds the schema information for the "workload_types" table.
	WorkloadTypesTable = &schema.Table{
		Name:       "workload_types",
		Columns:    WorkloadTypesColumns,
		PrimaryKey: []*schema.Column{WorkloadTypesColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "workload_types_workload_types_children",
				Columns:    []*schema.Column{WorkloadTypesColumns[4]},
				RefColumns: []*schema.Column{WorkloadTypesColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// Tables holds all the tables in the schema.
	Tables = []*schema.Table{
		WorkloadsTable,
		WorkloadFeaturesTable,
		WorkloadFeatureApplsTable,
		WorkloadFeatureApplTypesTable,
		WorkloadItemsTable,
		WorkloadStatusTable,
		WorkloadTypesTable,
	}
)

func init() {
	WorkloadsTable.ForeignKeys[0].RefTable = WorkloadTypesTable
	WorkloadFeatureApplsTable.ForeignKeys[0].RefTable = WorkloadsTable
	WorkloadFeatureApplsTable.ForeignKeys[1].RefTable = WorkloadFeaturesTable
	WorkloadFeatureApplsTable.ForeignKeys[2].RefTable = WorkloadFeatureApplTypesTable
	WorkloadFeatureApplTypesTable.ForeignKeys[0].RefTable = WorkloadFeatureApplTypesTable
	WorkloadItemsTable.ForeignKeys[0].RefTable = WorkloadsTable
	WorkloadStatusTable.ForeignKeys[0].RefTable = WorkloadsTable
	WorkloadTypesTable.ForeignKeys[0].RefTable = WorkloadTypesTable
}
