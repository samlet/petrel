// Code generated by entc, DO NOT EDIT.

package workload

import (
	"time"
)

const (
	// Label holds the string label denoting the workload type in the database.
	Label = "workload"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldCreateTime holds the string denoting the create_time field in the database.
	FieldCreateTime = "create_time"
	// FieldUpdateTime holds the string denoting the update_time field in the database.
	FieldUpdateTime = "update_time"
	// FieldStatusID holds the string denoting the status_id field in the database.
	FieldStatusID = "status_id"
	// FieldWorkloadName holds the string denoting the workload_name field in the database.
	FieldWorkloadName = "workload_name"
	// FieldDescription holds the string denoting the description field in the database.
	FieldDescription = "description"
	// FieldLongDescription holds the string denoting the long_description field in the database.
	FieldLongDescription = "long_description"
	// FieldComments holds the string denoting the comments field in the database.
	FieldComments = "comments"
	// FieldWorkloadSize holds the string denoting the workload_size field in the database.
	FieldWorkloadSize = "workload_size"
	// FieldWorkloadDate holds the string denoting the workload_date field in the database.
	FieldWorkloadDate = "workload_date"
	// FieldAnotherDate holds the string denoting the another_date field in the database.
	FieldAnotherDate = "another_date"
	// FieldAnotherText holds the string denoting the another_text field in the database.
	FieldAnotherText = "another_text"
	// EdgeWorkloadType holds the string denoting the workload_type edge name in mutations.
	EdgeWorkloadType = "workload_type"
	// EdgeWorkloadFeatureAppls holds the string denoting the workload_feature_appls edge name in mutations.
	EdgeWorkloadFeatureAppls = "workload_feature_appls"
	// EdgeWorkloadItems holds the string denoting the workload_items edge name in mutations.
	EdgeWorkloadItems = "workload_items"
	// EdgeWorkloadStatuses holds the string denoting the workload_statuses edge name in mutations.
	EdgeWorkloadStatuses = "workload_statuses"
	// Table holds the table name of the workload in the database.
	Table = "workloads"
	// WorkloadTypeTable is the table the holds the workload_type relation/edge.
	WorkloadTypeTable = "workloads"
	// WorkloadTypeInverseTable is the table name for the WorkloadType entity.
	// It exists in this package in order to avoid circular dependency with the "workloadtype" package.
	WorkloadTypeInverseTable = "workload_types"
	// WorkloadTypeColumn is the table column denoting the workload_type relation/edge.
	WorkloadTypeColumn = "workload_type_workloads"
	// WorkloadFeatureApplsTable is the table the holds the workload_feature_appls relation/edge.
	WorkloadFeatureApplsTable = "workload_feature_appls"
	// WorkloadFeatureApplsInverseTable is the table name for the WorkloadFeatureAppl entity.
	// It exists in this package in order to avoid circular dependency with the "workloadfeatureappl" package.
	WorkloadFeatureApplsInverseTable = "workload_feature_appls"
	// WorkloadFeatureApplsColumn is the table column denoting the workload_feature_appls relation/edge.
	WorkloadFeatureApplsColumn = "workload_workload_feature_appls"
	// WorkloadItemsTable is the table the holds the workload_items relation/edge.
	WorkloadItemsTable = "workload_items"
	// WorkloadItemsInverseTable is the table name for the WorkloadItem entity.
	// It exists in this package in order to avoid circular dependency with the "workloaditem" package.
	WorkloadItemsInverseTable = "workload_items"
	// WorkloadItemsColumn is the table column denoting the workload_items relation/edge.
	WorkloadItemsColumn = "workload_workload_items"
	// WorkloadStatusesTable is the table the holds the workload_statuses relation/edge.
	WorkloadStatusesTable = "workload_status"
	// WorkloadStatusesInverseTable is the table name for the WorkloadStatus entity.
	// It exists in this package in order to avoid circular dependency with the "workloadstatus" package.
	WorkloadStatusesInverseTable = "workload_status"
	// WorkloadStatusesColumn is the table column denoting the workload_statuses relation/edge.
	WorkloadStatusesColumn = "workload_workload_statuses"
)

// Columns holds all SQL columns for workload fields.
var Columns = []string{
	FieldID,
	FieldCreateTime,
	FieldUpdateTime,
	FieldStatusID,
	FieldWorkloadName,
	FieldDescription,
	FieldLongDescription,
	FieldComments,
	FieldWorkloadSize,
	FieldWorkloadDate,
	FieldAnotherDate,
	FieldAnotherText,
}

// ForeignKeys holds the SQL foreign-keys that are owned by the "workloads"
// table and are not defined as standalone fields in the schema.
var ForeignKeys = []string{
	"workload_type_workloads",
}

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	for i := range ForeignKeys {
		if column == ForeignKeys[i] {
			return true
		}
	}
	return false
}

var (
	// DefaultCreateTime holds the default value on creation for the "create_time" field.
	DefaultCreateTime func() time.Time
	// DefaultUpdateTime holds the default value on creation for the "update_time" field.
	DefaultUpdateTime func() time.Time
	// UpdateDefaultUpdateTime holds the default value on update for the "update_time" field.
	UpdateDefaultUpdateTime func() time.Time
	// DefaultWorkloadDate holds the default value on creation for the "workload_date" field.
	DefaultWorkloadDate func() time.Time
	// DefaultAnotherDate holds the default value on creation for the "another_date" field.
	DefaultAnotherDate func() time.Time
)
