// Code generated by entc, DO NOT EDIT.

package workloaditem

import (
	"time"
)

const (
	// Label holds the string label denoting the workloaditem type in the database.
	Label = "workload_item"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldCreateTime holds the string denoting the create_time field in the database.
	FieldCreateTime = "create_time"
	// FieldUpdateTime holds the string denoting the update_time field in the database.
	FieldUpdateTime = "update_time"
	// FieldWorkloadItemSeqID holds the string denoting the workload_item_seq_id field in the database.
	FieldWorkloadItemSeqID = "workload_item_seq_id"
	// FieldDescription holds the string denoting the description field in the database.
	FieldDescription = "description"
	// FieldAmount holds the string denoting the amount field in the database.
	FieldAmount = "amount"
	// FieldAmountUomID holds the string denoting the amount_uom_id field in the database.
	FieldAmountUomID = "amount_uom_id"
	// EdgeWorkload holds the string denoting the workload edge name in mutations.
	EdgeWorkload = "workload"
	// Table holds the table name of the workloaditem in the database.
	Table = "workload_items"
	// WorkloadTable is the table the holds the workload relation/edge.
	WorkloadTable = "workload_items"
	// WorkloadInverseTable is the table name for the Workload entity.
	// It exists in this package in order to avoid circular dependency with the "workload" package.
	WorkloadInverseTable = "workloads"
	// WorkloadColumn is the table column denoting the workload relation/edge.
	WorkloadColumn = "workload_workload_items"
)

// Columns holds all SQL columns for workloaditem fields.
var Columns = []string{
	FieldID,
	FieldCreateTime,
	FieldUpdateTime,
	FieldWorkloadItemSeqID,
	FieldDescription,
	FieldAmount,
	FieldAmountUomID,
}

// ForeignKeys holds the SQL foreign-keys that are owned by the "workload_items"
// table and are not defined as standalone fields in the schema.
var ForeignKeys = []string{
	"workload_workload_items",
}

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	for i := range ForeignKeys {
		if column == ForeignKeys[i] {
			return true
		}
	}
	return false
}

var (
	// DefaultCreateTime holds the default value on creation for the "create_time" field.
	DefaultCreateTime func() time.Time
	// DefaultUpdateTime holds the default value on creation for the "update_time" field.
	DefaultUpdateTime func() time.Time
	// UpdateDefaultUpdateTime holds the default value on update for the "update_time" field.
	UpdateDefaultUpdateTime func() time.Time
)
