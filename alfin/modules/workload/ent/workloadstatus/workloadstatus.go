// Code generated by entc, DO NOT EDIT.

package workloadstatus

import (
	"time"
)

const (
	// Label holds the string label denoting the workloadstatus type in the database.
	Label = "workload_status"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldCreateTime holds the string denoting the create_time field in the database.
	FieldCreateTime = "create_time"
	// FieldUpdateTime holds the string denoting the update_time field in the database.
	FieldUpdateTime = "update_time"
	// FieldStatusDate holds the string denoting the status_date field in the database.
	FieldStatusDate = "status_date"
	// FieldStatusEndDate holds the string denoting the status_end_date field in the database.
	FieldStatusEndDate = "status_end_date"
	// FieldChangeByUserLoginID holds the string denoting the change_by_user_login_id field in the database.
	FieldChangeByUserLoginID = "change_by_user_login_id"
	// FieldStatusID holds the string denoting the status_id field in the database.
	FieldStatusID = "status_id"
	// EdgeWorkload holds the string denoting the workload edge name in mutations.
	EdgeWorkload = "workload"
	// Table holds the table name of the workloadstatus in the database.
	Table = "workload_status"
	// WorkloadTable is the table the holds the workload relation/edge.
	WorkloadTable = "workload_status"
	// WorkloadInverseTable is the table name for the Workload entity.
	// It exists in this package in order to avoid circular dependency with the "workload" package.
	WorkloadInverseTable = "workloads"
	// WorkloadColumn is the table column denoting the workload relation/edge.
	WorkloadColumn = "workload_workload_statuses"
)

// Columns holds all SQL columns for workloadstatus fields.
var Columns = []string{
	FieldID,
	FieldCreateTime,
	FieldUpdateTime,
	FieldStatusDate,
	FieldStatusEndDate,
	FieldChangeByUserLoginID,
	FieldStatusID,
}

// ForeignKeys holds the SQL foreign-keys that are owned by the "workload_status"
// table and are not defined as standalone fields in the schema.
var ForeignKeys = []string{
	"workload_workload_statuses",
}

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	for i := range ForeignKeys {
		if column == ForeignKeys[i] {
			return true
		}
	}
	return false
}

var (
	// DefaultCreateTime holds the default value on creation for the "create_time" field.
	DefaultCreateTime func() time.Time
	// DefaultUpdateTime holds the default value on creation for the "update_time" field.
	DefaultUpdateTime func() time.Time
	// UpdateDefaultUpdateTime holds the default value on update for the "update_time" field.
	UpdateDefaultUpdateTime func() time.Time
	// DefaultStatusDate holds the default value on creation for the "status_date" field.
	DefaultStatusDate func() time.Time
	// DefaultStatusEndDate holds the default value on creation for the "status_end_date" field.
	DefaultStatusEndDate func() time.Time
)
