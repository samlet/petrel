{{/* gotype: github.com/samlet/petrel/alfin.ModelEntity */}}

type {{.Name}} struct {
    ent.Schema
}

// Fields of the {{.Name}}.
// Unique-Indexes: {{.PksString}}
func ({{.Name}}) Fields() []ent.Field {
    return []ent.Field{
    {{- range $fld := $.NormalFields }}
        {{- if ne $.UniquePk $fld.Name }}
        {{$fld.EntFieldType}}.Annotations(entproto.Field({{$fld.FieldNumber}})),
        {{- end}}
    {{- end}}
    }
}

//* entproto annotations ??
func ({{$.Name}}) Mixin() []ent.Mixin {
    return []ent.Mixin{
        mixin.Time{},
        schemamixins.StringRefMixin{},
    }
}
//*/

/*
{{- if $.HasCombineIndex}}
func ({{$.Name}}) Indexes() []ent.Index {
    {{ $.Indexes }}
}
{{ end}}
*/

func ({{$.Name}}) Annotations() []schema.Annotation {
    return []schema.Annotation{
        entproto.Message(),
        entproto.Service(), // also generate a gRPC service definition
    }
}
